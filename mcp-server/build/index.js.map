{"version":3,"sources":["../src/index.ts","../src/server/umbraco-mcp-server.ts","../src/api/umbraco/clients/umbraco-management-client.ts","../src/api/umbraco/management/umbracoManagementAPI.ts","../src/clients/umbraco-management-client.ts","../src/helpers/create-umbraco-tool.ts","../src/api/umbraco/management/umbracoManagementAPI.zod.ts","../src/tools/culture/get-cultures.ts","../src/tools/culture/index.ts","../src/tools/data-types/get/get-root.ts","../src/tools/data-types/post/create-data-type.ts","../src/tools/data-types/delete/delete-data-type.ts","../src/tools/data-types/get/find-data-type.ts","../src/tools/data-types/get/get-data-type.ts","../src/tools/data-types/put/update-data-type.ts","../src/tools/data-types/post/copy-data-type.ts","../src/tools/data-types/get/is-used-data-type.ts","../src/tools/data-types/put/move-data-type.ts","../src/tools/data-types/get/get-references-data-type.ts","../src/tools/data-types/folders/post/create-folder.ts","../src/tools/data-types/folders/delete/delete-folder.ts","../src/tools/data-types/folders/get/get-folder.ts","../src/tools/data-types/get/get-search.ts","../src/tools/data-types/index.ts","../src/tools/dictionary/delete/delete-dictionary-item.ts","../src/tools/dictionary/get/find-dictionary-item.ts","../src/tools/dictionary/get/get-dictionary-item.ts","../src/tools/dictionary/post/create-dictionary-item.ts","../src/tools/dictionary/put/update-dictionary-item.ts","../src/tools/dictionary/index.ts","../src/tools/tool-factory.ts","../src/helpers/create-umbraco-template-resource.ts","../src/resources/data-types/get/get-root.ts","../src/resources/data-types/index.ts","../src/helpers/create-umbraco-read-resource.ts","../src/resources/language/get/get-default.ts","../src/resources/language/index.ts","../src/resources/resource-factory.ts"],"sourcesContent":["#!/usr/bin/env node\n\nimport { StdioServerTransport } from \"@modelcontextprotocol/sdk/server/stdio.js\";\nimport { UmbracoMcpServer } from \"./server/umbraco-mcp-server.js\";\nimport { ToolFactory } from \"./tools/tool-factory.js\";\nimport { ResourceFactory } from \"./resources/resource-factory.js\";\n\nconst main = async () => {\n  // Create an MCP server\n  const server = UmbracoMcpServer.GetServer();\n\n  ResourceFactory(server);\n  ToolFactory(server);\n\n  // Start receiving messages on stdin and sending messages on stdout\n  const transport = new StdioServerTransport();\n  await server.connect(transport);\n};\n\nmain().catch((error) => {\n  console.error(\"Error:\", error);\n  process.exit(1);\n});\n","import { McpServer } from \"@modelcontextprotocol/sdk/server/mcp.js\";\n\nexport class UmbracoMcpServer {\n  private static instance: McpServer | null = null;\n\n  private constructor() {}\n\n  public static GetServer(): McpServer {\n    if (UmbracoMcpServer.instance === null) {\n      UmbracoMcpServer.instance = new McpServer({\n        name: \"Umbraco Server\",\n        version: \"1.0.0\",\n        capabilities: {\n          tools: {},\n        },\n      });\n    }\n    return UmbracoMcpServer.instance;\n  }\n}\n","import Axios, { AxiosRequestConfig } from \"axios\";\n\nconst client_id = process.env.UMBRACO_CLIENT_ID;\nconst client_secret = process.env.UMBRACO_CLIENT_SECRET;\nconst grant_type = \"client_credentials\";\n\nconst baseURL = process.env.UMBRACO_BASE_URL;\n\nif (!baseURL)\n  throw new Error(\"Missing required environment variable: UMBRACO_BASE_URL\");\nif (!client_id)\n  throw new Error(\"Missing required environment variable: UMBRACO_CLIENT_ID\");\nif (!client_secret && client_id !== \"umbraco-swagger\")\n  throw new Error(\n    \"Missing required environment variable: UMBRACO_CLIENT_SECRET\"\n  );\n\nconst tokenPath = \"/umbraco/management/api/v1/security/back-office/token\";\n\nexport const UmbracoAxios = Axios.create({ baseURL }); // Set base URL from config\n\nlet accessToken: string | null = null;\nlet tokenExpiry: number | null = null;\n\n// Function to fetch a new access token\nconst fetchAccessToken = async (): Promise<string | null> => {\n  const response = await Axios.post(\n    `${baseURL}${tokenPath}`,\n    {\n      client_id,\n      client_secret: client_secret ?? \"\",\n      grant_type,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n    }\n  );\n\n  const { access_token, expires_in } = response.data;\n  accessToken = access_token;\n  tokenExpiry = Date.now() + expires_in * 1000; // Calculate token expiry time\n  return accessToken;\n};\n\n// Axios request interceptor to add the Authorization header\nUmbracoAxios.interceptors.request.use(async (config) => {\n  if (!accessToken || (tokenExpiry && Date.now() >= tokenExpiry)) {\n    await fetchAccessToken(); // Fetch a new token if it doesn't exist or has expired\n  }\n\n  if (accessToken) {\n    config.headers.Authorization = `Bearer ${accessToken}`;\n  }\n\n  return config;\n});\n\n// Add a generic error handler to the Axios instance\nUmbracoAxios.interceptors.response.use(\n  (response) => response, // Pass through successful responses\n  (error) => {\n    if (error.response) {\n      // Server responded with a status code outside the 2xx range\n      console.error(\n        `HTTP Error: ${error.response.status}`,\n        error.response.data\n      );\n    } else if (error.request) {\n      // Request was made but no response was received\n      console.error(\"No response received:\", error.request);\n    } else {\n      // Something happened in setting up the request\n      console.error(\"Error setting up request:\", error.message);\n    }\n\n    // Optionally, you can throw the error to be handled by the caller\n    return Promise.reject(error);\n  }\n);\n\n// add a second `options` argument here if you want to pass extra options to each generated query\nexport const UmbracoManagementClient = <T>(\n  config: AxiosRequestConfig,\n  options?: AxiosRequestConfig\n): Promise<T> => {\n  const source = Axios.CancelToken.source();\n  const promise = UmbracoAxios({\n    ...config,\n    ...options,\n    cancelToken: source.token,\n  }).then(({ data }) => data);\n\n  // @ts-ignore\n  promise.cancel = () => {\n    source.cancel(\"Query was cancelled\");\n  };\n\n  return promise;\n};\n","/**\n * Generated by orval v7.8.0 üç∫\n * Do not edit manually.\n * Umbraco Management API\n * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility\n * OpenAPI spec version: Latest\n */\nimport type {\n  AvailableDocumentTypeCompositionResponseModel,\n  AvailableMediaTypeCompositionResponseModel,\n  AvailableMemberTypeCompositionResponseModel,\n  CalculatedUserStartNodesResponseModel,\n  ChangePasswordCurrentUserRequestModel,\n  ChangePasswordUserRequestModel,\n  CopyDataTypeRequestModel,\n  CopyDocumentRequestModel,\n  CopyDocumentTypeRequestModel,\n  CopyMediaTypeRequestModel,\n  CreateDataTypeRequestModel,\n  CreateDictionaryItemRequestModel,\n  CreateDocumentBlueprintFromDocumentRequestModel,\n  CreateDocumentBlueprintRequestModel,\n  CreateDocumentRequestModel,\n  CreateDocumentTypeRequestModel,\n  CreateFolderRequestModel,\n  CreateInitialPasswordUserRequestModel,\n  CreateLanguageRequestModel,\n  CreateMediaRequestModel,\n  CreateMediaTypeRequestModel,\n  CreateMemberGroupRequestModel,\n  CreateMemberRequestModel,\n  CreateMemberTypeRequestModel,\n  CreatePackageRequestModel,\n  CreatePartialViewFolderRequestModel,\n  CreatePartialViewRequestModel,\n  CreateScriptFolderRequestModel,\n  CreateScriptRequestModel,\n  CreateStylesheetFolderRequestModel,\n  CreateStylesheetRequestModel,\n  CreateTemplateRequestModel,\n  CreateUserClientCredentialsRequestModel,\n  CreateUserDataRequestModel,\n  CreateUserGroupRequestModel,\n  CreateUserRequestModel,\n  CreateWebhookRequestModel,\n  CurrenUserConfigurationResponseModel,\n  CurrentUserResponseModel,\n  DataTypeItemResponseModel,\n  DataTypeReferenceResponseModel,\n  DataTypeResponseModel,\n  DataTypeTreeItemResponseModel,\n  DatabaseInstallRequestModel,\n  DatatypeConfigurationResponseModel,\n  DeleteUserCurrent2faByProviderNameParams,\n  DeleteUserGroupsRequestModel,\n  DeleteUsersRequestModel,\n  DictionaryItemItemResponseModel,\n  DictionaryItemResponseModel,\n  DisableUserRequestModel,\n  DocumentBlueprintItemResponseModel,\n  DocumentBlueprintResponseModel,\n  DocumentBlueprintTreeItemResponseModel,\n  DocumentConfigurationResponseModel,\n  DocumentItemResponseModel,\n  DocumentNotificationResponseModel,\n  DocumentResponseModel,\n  DocumentTreeItemResponseModel,\n  DocumentTypeCompositionRequestModel,\n  DocumentTypeCompositionResponseModel,\n  DocumentTypeConfigurationResponseModel,\n  DocumentTypeItemResponseModel,\n  DocumentTypeResponseModel,\n  DocumentTypeTreeItemResponseModel,\n  DocumentUrlInfoResponseModel,\n  DocumentVersionResponseModel,\n  DomainsResponseModel,\n  DynamicRootRequestModel,\n  DynamicRootResponseModel,\n  EnableTwoFactorRequestModel,\n  EnableUserRequestModel,\n  EntityImportAnalysisResponseModel,\n  FileSystemTreeItemPresentationModel,\n  FolderResponseModel,\n  GetCollectionDocumentByIdParams,\n  GetCollectionMediaParams,\n  GetCultureParams,\n  GetDictionaryByIdExportParams,\n  GetDictionaryParams,\n  GetDocumentAreReferencedParams,\n  GetDocumentByIdAuditLogParams,\n  GetDocumentByIdReferencedByParams,\n  GetDocumentByIdReferencedDescendantsParams,\n  GetDocumentTypeAllowedAtRootParams,\n  GetDocumentTypeByIdAllowedChildrenParams,\n  GetDocumentTypeByIdBlueprintParams,\n  GetDocumentUrlsParams,\n  GetDocumentVersionParams,\n  GetFilterDataTypeParams,\n  GetFilterMemberParams,\n  GetFilterUserGroupParams,\n  GetFilterUserParams,\n  GetHealthCheckGroupParams,\n  GetHelpParams,\n  GetImagingResizeUrlsParams,\n  GetImportAnalyzeParams,\n  GetIndexerParams,\n  GetItemDataTypeParams,\n  GetItemDataTypeSearchParams,\n  GetItemDictionaryParams,\n  GetItemDocumentBlueprintParams,\n  GetItemDocumentParams,\n  GetItemDocumentSearchParams,\n  GetItemDocumentTypeParams,\n  GetItemDocumentTypeSearchParams,\n  GetItemLanguageParams,\n  GetItemMediaParams,\n  GetItemMediaSearchParams,\n  GetItemMediaTypeAllowedParams,\n  GetItemMediaTypeFoldersParams,\n  GetItemMediaTypeParams,\n  GetItemMediaTypeSearchParams,\n  GetItemMemberGroupParams,\n  GetItemMemberParams,\n  GetItemMemberSearchParams,\n  GetItemMemberTypeParams,\n  GetItemMemberTypeSearchParams,\n  GetItemPartialViewParams,\n  GetItemRelationTypeParams,\n  GetItemScriptParams,\n  GetItemStaticFileParams,\n  GetItemStylesheetParams,\n  GetItemTemplateParams,\n  GetItemTemplateSearchParams,\n  GetItemUserGroupParams,\n  GetItemUserParams,\n  GetItemWebhookParams,\n  GetLanguageParams,\n  GetLogViewerLevelCountParams,\n  GetLogViewerLevelParams,\n  GetLogViewerLogParams,\n  GetLogViewerMessageTemplateParams,\n  GetLogViewerSavedSearchParams,\n  GetLogViewerValidateLogsSizeParams,\n  GetMediaAreReferencedParams,\n  GetMediaByIdAuditLogParams,\n  GetMediaByIdReferencedByParams,\n  GetMediaByIdReferencedDescendantsParams,\n  GetMediaTypeAllowedAtRootParams,\n  GetMediaTypeByIdAllowedChildrenParams,\n  GetMediaUrlsParams,\n  GetMemberGroupParams,\n  GetObjectTypesParams,\n  GetOembedQueryParams,\n  GetPackageCreatedParams,\n  GetPackageMigrationStatusParams,\n  GetPartialViewSnippetParams,\n  GetPropertyTypeIsUsedParams,\n  GetRecycleBinDocumentChildrenParams,\n  GetRecycleBinDocumentRootParams,\n  GetRecycleBinMediaChildrenParams,\n  GetRecycleBinMediaRootParams,\n  GetRedirectManagementByIdParams,\n  GetRedirectManagementParams,\n  GetRelationByRelationTypeIdParams,\n  GetRelationTypeParams,\n  GetSearcherBySearcherNameQueryParams,\n  GetSearcherParams,\n  GetSegmentParams,\n  GetTagParams,\n  GetTelemetryParams,\n  GetTreeDataTypeAncestorsParams,\n  GetTreeDataTypeChildrenParams,\n  GetTreeDataTypeRootParams,\n  GetTreeDictionaryAncestorsParams,\n  GetTreeDictionaryChildrenParams,\n  GetTreeDictionaryRootParams,\n  GetTreeDocumentAncestorsParams,\n  GetTreeDocumentBlueprintAncestorsParams,\n  GetTreeDocumentBlueprintChildrenParams,\n  GetTreeDocumentBlueprintRootParams,\n  GetTreeDocumentChildrenParams,\n  GetTreeDocumentRootParams,\n  GetTreeDocumentTypeAncestorsParams,\n  GetTreeDocumentTypeChildrenParams,\n  GetTreeDocumentTypeRootParams,\n  GetTreeMediaAncestorsParams,\n  GetTreeMediaChildrenParams,\n  GetTreeMediaRootParams,\n  GetTreeMediaTypeAncestorsParams,\n  GetTreeMediaTypeChildrenParams,\n  GetTreeMediaTypeRootParams,\n  GetTreeMemberGroupRootParams,\n  GetTreeMemberTypeRootParams,\n  GetTreePartialViewAncestorsParams,\n  GetTreePartialViewChildrenParams,\n  GetTreePartialViewRootParams,\n  GetTreeScriptAncestorsParams,\n  GetTreeScriptChildrenParams,\n  GetTreeScriptRootParams,\n  GetTreeStaticFileAncestorsParams,\n  GetTreeStaticFileChildrenParams,\n  GetTreeStaticFileRootParams,\n  GetTreeStylesheetAncestorsParams,\n  GetTreeStylesheetChildrenParams,\n  GetTreeStylesheetRootParams,\n  GetTreeTemplateAncestorsParams,\n  GetTreeTemplateChildrenParams,\n  GetTreeTemplateRootParams,\n  GetUserCurrentPermissionsDocumentParams,\n  GetUserCurrentPermissionsMediaParams,\n  GetUserCurrentPermissionsParams,\n  GetUserDataParams,\n  GetUserGroupParams,\n  GetUserParams,\n  GetWebhookByIdLogsParams,\n  GetWebhookEventsParams,\n  GetWebhookLogsParams,\n  GetWebhookParams,\n  HealthCheckActionRequestModel,\n  HealthCheckGroupPresentationModel,\n  HealthCheckGroupWithResultResponseModel,\n  HealthCheckResultResponseModel,\n  ImportDictionaryRequestModel,\n  ImportDocumentTypeRequestModel,\n  ImportMediaTypeRequestModel,\n  IndexResponseModel,\n  InstallRequestModel,\n  InstallSettingsResponseModel,\n  InviteUserRequestModel,\n  LanguageItemResponseModel,\n  LanguageResponseModel,\n  LogLevelCountsReponseModel,\n  ManifestResponseModel,\n  MediaConfigurationResponseModel,\n  MediaItemResponseModel,\n  MediaResponseModel,\n  MediaTreeItemResponseModel,\n  MediaTypeCompositionRequestModel,\n  MediaTypeCompositionResponseModel,\n  MediaTypeConfigurationResponseModel,\n  MediaTypeItemResponseModel,\n  MediaTypeResponseModel,\n  MediaTypeTreeItemResponseModel,\n  MediaUrlInfoResponseModel,\n  MemberConfigurationResponseModel,\n  MemberGroupItemResponseModel,\n  MemberGroupResponseModel,\n  MemberItemResponseModel,\n  MemberResponseModel,\n  MemberTypeCompositionRequestModel,\n  MemberTypeCompositionResponseModel,\n  MemberTypeConfigurationResponseModel,\n  MemberTypeItemResponseModel,\n  MemberTypeResponseModel,\n  ModelsBuilderResponseModel,\n  MoveDataTypeRequestModel,\n  MoveDictionaryRequestModel,\n  MoveDocumentBlueprintRequestModel,\n  MoveDocumentRequestModel,\n  MoveDocumentTypeRequestModel,\n  MoveMediaRequestModel,\n  MoveMediaTypeRequestModel,\n  NamedEntityTreeItemResponseModel,\n  NoopSetupTwoFactorModel,\n  OEmbedResponseModel,\n  OutOfDateStatusResponseModel,\n  PackageConfigurationResponseModel,\n  PackageDefinitionResponseModel,\n  PagedAllowedDocumentTypeModel,\n  PagedAllowedMediaTypeModel,\n  PagedAuditLogResponseModel,\n  PagedCultureReponseModel,\n  PagedDataTypeItemResponseModel,\n  PagedDataTypeTreeItemResponseModel,\n  PagedDictionaryOverviewResponseModel,\n  PagedDocumentBlueprintTreeItemResponseModel,\n  PagedDocumentCollectionResponseModel,\n  PagedDocumentRecycleBinItemResponseModel,\n  PagedDocumentTreeItemResponseModel,\n  PagedDocumentTypeBlueprintItemResponseModel,\n  PagedDocumentTypeTreeItemResponseModel,\n  PagedDocumentVersionItemResponseModel,\n  PagedFileSystemTreeItemPresentationModel,\n  PagedHealthCheckGroupResponseModel,\n  PagedHelpPageResponseModel,\n  PagedIReferenceResponseModel,\n  PagedIndexResponseModel,\n  PagedLanguageResponseModel,\n  PagedLogMessageResponseModel,\n  PagedLogTemplateResponseModel,\n  PagedLoggerResponseModel,\n  PagedMediaCollectionResponseModel,\n  PagedMediaRecycleBinItemResponseModel,\n  PagedMediaTreeItemResponseModel,\n  PagedMediaTypeTreeItemResponseModel,\n  PagedMemberGroupResponseModel,\n  PagedMemberResponseModel,\n  PagedMemberTypeTreeItemResponseModel,\n  PagedModelDataTypeItemResponseModel,\n  PagedModelDocumentItemResponseModel,\n  PagedModelDocumentTypeItemResponseModel,\n  PagedModelMediaItemResponseModel,\n  PagedModelMediaTypeItemResponseModel,\n  PagedModelMemberItemResponseModel,\n  PagedModelMemberTypeItemResponseModel,\n  PagedModelTemplateItemResponseModel,\n  PagedNamedEntityTreeItemResponseModel,\n  PagedObjectTypeResponseModel,\n  PagedPackageDefinitionResponseModel,\n  PagedPackageMigrationStatusResponseModel,\n  PagedPartialViewSnippetItemResponseModel,\n  PagedRedirectUrlResponseModel,\n  PagedReferenceByIdModel,\n  PagedRelationResponseModel,\n  PagedRelationTypeResponseModel,\n  PagedSavedLogSearchResponseModel,\n  PagedSearchResultResponseModel,\n  PagedSearcherResponseModel,\n  PagedSegmentResponseModel,\n  PagedTagResponseModel,\n  PagedTelemetryResponseModel,\n  PagedUserDataResponseModel,\n  PagedUserGroupResponseModel,\n  PagedUserResponseModel,\n  PagedWebhookEventModel,\n  PagedWebhookLogResponseModel,\n  PagedWebhookResponseModel,\n  PartialViewFolderResponseModel,\n  PartialViewItemResponseModel,\n  PartialViewResponseModel,\n  PartialViewSnippetResponseModel,\n  PostDocumentVersionByIdRollbackParams,\n  PostRedirectManagementStatusParams,\n  PostTemporaryFileBody,\n  ProfilingStatusRequestModel,\n  ProfilingStatusResponseModel,\n  PublicAccessRequestModel,\n  PublicAccessResponseModel,\n  PublishDocumentRequestModel,\n  PublishDocumentWithDescendantsRequestModel,\n  PublishedDocumentResponseModel,\n  PutDocumentVersionByIdPreventCleanupParams,\n  RedirectUrlStatusResponseModel,\n  ReferenceByIdModel,\n  RelationTypeItemResponseModel,\n  RelationTypeResponseModel,\n  RenamePartialViewRequestModel,\n  RenameScriptRequestModel,\n  RenameStylesheetRequestModel,\n  ResendInviteUserRequestModel,\n  ResetPasswordRequestModel,\n  ResetPasswordTokenRequestModel,\n  ResetPasswordUserResponseModel,\n  SavedLogSearchRequestModel,\n  SavedLogSearchResponseModel,\n  ScriptFolderResponseModel,\n  ScriptItemResponseModel,\n  ScriptResponseModel,\n  SecurityConfigurationResponseModel,\n  ServerConfigurationResponseModel,\n  ServerInformationResponseModel,\n  ServerStatusResponseModel,\n  ServerTroubleshootingResponseModel,\n  SetAvatarRequestModel,\n  SortingRequestModel,\n  StaticFileItemResponseModel,\n  StylesheetFolderResponseModel,\n  StylesheetItemResponseModel,\n  StylesheetResponseModel,\n  TelemetryRequestModel,\n  TelemetryResponseModel,\n  TemplateConfigurationResponseModel,\n  TemplateItemResponseModel,\n  TemplateQueryExecuteModel,\n  TemplateQueryResultResponseModel,\n  TemplateQuerySettingsResponseModel,\n  TemplateResponseModel,\n  TemporaryFileConfigurationResponseModel,\n  TemporaryFileResponseModel,\n  UnlockUsersRequestModel,\n  UnpublishDocumentRequestModel,\n  UpdateDataTypeRequestModel,\n  UpdateDictionaryItemRequestModel,\n  UpdateDocumentBlueprintRequestModel,\n  UpdateDocumentNotificationsRequestModel,\n  UpdateDocumentRequestModel,\n  UpdateDocumentTypeRequestModel,\n  UpdateDomainsRequestModel,\n  UpdateFolderResponseModel,\n  UpdateLanguageRequestModel,\n  UpdateMediaRequestModel,\n  UpdateMediaTypeRequestModel,\n  UpdateMemberGroupRequestModel,\n  UpdateMemberRequestModel,\n  UpdateMemberTypeRequestModel,\n  UpdatePackageRequestModel,\n  UpdatePartialViewRequestModel,\n  UpdateScriptRequestModel,\n  UpdateStylesheetRequestModel,\n  UpdateTemplateRequestModel,\n  UpdateUserDataRequestModel,\n  UpdateUserGroupRequestModel,\n  UpdateUserGroupsOnUserRequestModel,\n  UpdateUserRequestModel,\n  UpdateWebhookRequestModel,\n  UpgradeCheckResponseModel,\n  UpgradeSettingsResponseModel,\n  UserConfigurationResponseModel,\n  UserDataModel,\n  UserExternalLoginProviderModel,\n  UserGroupItemResponseModel,\n  UserGroupResponseModel,\n  UserItemResponseModel,\n  UserPermissionsResponseModel,\n  UserResponseModel,\n  UserTwoFactorProviderModel,\n  ValidateUpdateDocumentRequestModel,\n  VerifyInviteUserRequestModel,\n  VerifyInviteUserResponseModel,\n  VerifyResetPasswordResponseModel,\n  VerifyResetPasswordTokenRequestModel,\n  WebhookItemResponseModel,\n  WebhookResponseModel\n} from './schemas';\n\nimport { UmbracoManagementClient } from '../clients/umbraco-management-client.js';\n\n// https://stackoverflow.com/questions/49579094/typescript-conditional-types-filter-out-readonly-properties-pick-only-requir/49579497#49579497\ntype IfEquals<X, Y, A = X, B = never> = (<T>() => T extends X ? 1 : 2) extends <\nT,\n>() => T extends Y ? 1 : 2\n? A\n: B;\n\ntype WritableKeys<T> = {\n[P in keyof T]-?: IfEquals<\n  { [Q in P]: T[P] },\n  { -readonly [Q in P]: T[P] },\n  P\n>;\n}[keyof T];\n\ntype UnionToIntersection<U> =\n  (U extends any ? (k: U)=>void : never) extends ((k: infer I)=>void) ? I : never;\ntype DistributeReadOnlyOverUnions<T> = T extends any ? NonReadonly<T> : never;\n\ntype Writable<T> = Pick<T, WritableKeys<T>>;\ntype NonReadonly<T> = [T] extends [UnionToIntersection<T>] ? {\n  [P in keyof Writable<T>]: T[P] extends object\n    ? NonReadonly<NonNullable<T[P]>>\n    : T[P];\n} : DistributeReadOnlyOverUnions<T>;\n\n\ntype SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];\n\n\n  export const getUmbracoManagementAPI = () => {\nconst getCulture = (\n    params?: GetCultureParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedCultureReponseModel>(\n      {url: `/umbraco/management/api/v1/culture`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst postDataType = (\n    createDataTypeRequestModel: CreateDataTypeRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/data-type`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: createDataTypeRequestModel\n    },\n      options);\n    }\n  \nconst getDataTypeById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<DataTypeResponseModel>(\n      {url: `/umbraco/management/api/v1/data-type/${id}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst deleteDataTypeById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/data-type/${id}`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst putDataTypeById = (\n    id: string,\n    updateDataTypeRequestModel: UpdateDataTypeRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/data-type/${id}`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: updateDataTypeRequestModel\n    },\n      options);\n    }\n  \nconst postDataTypeByIdCopy = (\n    id: string,\n    copyDataTypeRequestModel: CopyDataTypeRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/data-type/${id}/copy`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: copyDataTypeRequestModel\n    },\n      options);\n    }\n  \nconst getDataTypeByIdIsUsed = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<boolean>(\n      {url: `/umbraco/management/api/v1/data-type/${id}/is-used`, method: 'GET'\n    },\n      options);\n    }\n  \nconst putDataTypeByIdMove = (\n    id: string,\n    moveDataTypeRequestModel: MoveDataTypeRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/data-type/${id}/move`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: moveDataTypeRequestModel\n    },\n      options);\n    }\n  \nconst getDataTypeByIdReferences = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<DataTypeReferenceResponseModel[]>(\n      {url: `/umbraco/management/api/v1/data-type/${id}/references`, method: 'GET'\n    },\n      options);\n    }\n  \nconst getDataTypeConfiguration = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<DatatypeConfigurationResponseModel>(\n      {url: `/umbraco/management/api/v1/data-type/configuration`, method: 'GET'\n    },\n      options);\n    }\n  \nconst postDataTypeFolder = (\n    createFolderRequestModel: CreateFolderRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/data-type/folder`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: createFolderRequestModel\n    },\n      options);\n    }\n  \nconst getDataTypeFolderById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<FolderResponseModel>(\n      {url: `/umbraco/management/api/v1/data-type/folder/${id}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst deleteDataTypeFolderById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/data-type/folder/${id}`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst putDataTypeFolderById = (\n    id: string,\n    updateFolderResponseModel: UpdateFolderResponseModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/data-type/folder/${id}`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: updateFolderResponseModel\n    },\n      options);\n    }\n  \nconst getFilterDataType = (\n    params?: GetFilterDataTypeParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedDataTypeItemResponseModel>(\n      {url: `/umbraco/management/api/v1/filter/data-type`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getItemDataType = (\n    params?: GetItemDataTypeParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<DataTypeItemResponseModel[]>(\n      {url: `/umbraco/management/api/v1/item/data-type`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getItemDataTypeSearch = (\n    params?: GetItemDataTypeSearchParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedModelDataTypeItemResponseModel>(\n      {url: `/umbraco/management/api/v1/item/data-type/search`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getTreeDataTypeAncestors = (\n    params?: GetTreeDataTypeAncestorsParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<DataTypeTreeItemResponseModel[]>(\n      {url: `/umbraco/management/api/v1/tree/data-type/ancestors`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getTreeDataTypeChildren = (\n    params?: GetTreeDataTypeChildrenParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedDataTypeTreeItemResponseModel>(\n      {url: `/umbraco/management/api/v1/tree/data-type/children`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getTreeDataTypeRoot = (\n    params?: GetTreeDataTypeRootParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedDataTypeTreeItemResponseModel>(\n      {url: `/umbraco/management/api/v1/tree/data-type/root`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getDictionary = (\n    params?: GetDictionaryParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedDictionaryOverviewResponseModel>(\n      {url: `/umbraco/management/api/v1/dictionary`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst postDictionary = (\n    createDictionaryItemRequestModel: CreateDictionaryItemRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/dictionary`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: createDictionaryItemRequestModel\n    },\n      options);\n    }\n  \nconst getDictionaryById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<DictionaryItemResponseModel>(\n      {url: `/umbraco/management/api/v1/dictionary/${id}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst deleteDictionaryById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/dictionary/${id}`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst putDictionaryById = (\n    id: string,\n    updateDictionaryItemRequestModel: UpdateDictionaryItemRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/dictionary/${id}`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: updateDictionaryItemRequestModel\n    },\n      options);\n    }\n  \nconst getDictionaryByIdExport = (\n    id: string,\n    params?: GetDictionaryByIdExportParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<Blob>(\n      {url: `/umbraco/management/api/v1/dictionary/${id}/export`, method: 'GET',\n        params,\n        responseType: 'blob'\n    },\n      options);\n    }\n  \nconst putDictionaryByIdMove = (\n    id: string,\n    moveDictionaryRequestModel: MoveDictionaryRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/dictionary/${id}/move`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: moveDictionaryRequestModel\n    },\n      options);\n    }\n  \nconst postDictionaryImport = (\n    importDictionaryRequestModel: ImportDictionaryRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/dictionary/import`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: importDictionaryRequestModel\n    },\n      options);\n    }\n  \nconst getItemDictionary = (\n    params?: GetItemDictionaryParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<DictionaryItemItemResponseModel[]>(\n      {url: `/umbraco/management/api/v1/item/dictionary`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getTreeDictionaryAncestors = (\n    params?: GetTreeDictionaryAncestorsParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<NamedEntityTreeItemResponseModel[]>(\n      {url: `/umbraco/management/api/v1/tree/dictionary/ancestors`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getTreeDictionaryChildren = (\n    params?: GetTreeDictionaryChildrenParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedNamedEntityTreeItemResponseModel>(\n      {url: `/umbraco/management/api/v1/tree/dictionary/children`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getTreeDictionaryRoot = (\n    params?: GetTreeDictionaryRootParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedNamedEntityTreeItemResponseModel>(\n      {url: `/umbraco/management/api/v1/tree/dictionary/root`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst postDocumentBlueprint = (\n    createDocumentBlueprintRequestModel: CreateDocumentBlueprintRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document-blueprint`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: createDocumentBlueprintRequestModel\n    },\n      options);\n    }\n  \nconst getDocumentBlueprintById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<DocumentBlueprintResponseModel>(\n      {url: `/umbraco/management/api/v1/document-blueprint/${id}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst deleteDocumentBlueprintById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document-blueprint/${id}`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst putDocumentBlueprintById = (\n    id: string,\n    updateDocumentBlueprintRequestModel: UpdateDocumentBlueprintRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document-blueprint/${id}`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: updateDocumentBlueprintRequestModel\n    },\n      options);\n    }\n  \nconst putDocumentBlueprintByIdMove = (\n    id: string,\n    moveDocumentBlueprintRequestModel: MoveDocumentBlueprintRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document-blueprint/${id}/move`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: moveDocumentBlueprintRequestModel\n    },\n      options);\n    }\n  \nconst postDocumentBlueprintFolder = (\n    createFolderRequestModel: CreateFolderRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document-blueprint/folder`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: createFolderRequestModel\n    },\n      options);\n    }\n  \nconst getDocumentBlueprintFolderById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<FolderResponseModel>(\n      {url: `/umbraco/management/api/v1/document-blueprint/folder/${id}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst deleteDocumentBlueprintFolderById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document-blueprint/folder/${id}`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst putDocumentBlueprintFolderById = (\n    id: string,\n    updateFolderResponseModel: UpdateFolderResponseModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document-blueprint/folder/${id}`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: updateFolderResponseModel\n    },\n      options);\n    }\n  \nconst postDocumentBlueprintFromDocument = (\n    createDocumentBlueprintFromDocumentRequestModel: CreateDocumentBlueprintFromDocumentRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document-blueprint/from-document`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: createDocumentBlueprintFromDocumentRequestModel\n    },\n      options);\n    }\n  \nconst getItemDocumentBlueprint = (\n    params?: GetItemDocumentBlueprintParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<DocumentBlueprintItemResponseModel[]>(\n      {url: `/umbraco/management/api/v1/item/document-blueprint`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getTreeDocumentBlueprintAncestors = (\n    params?: GetTreeDocumentBlueprintAncestorsParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<DocumentBlueprintTreeItemResponseModel[]>(\n      {url: `/umbraco/management/api/v1/tree/document-blueprint/ancestors`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getTreeDocumentBlueprintChildren = (\n    params?: GetTreeDocumentBlueprintChildrenParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedDocumentBlueprintTreeItemResponseModel>(\n      {url: `/umbraco/management/api/v1/tree/document-blueprint/children`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getTreeDocumentBlueprintRoot = (\n    params?: GetTreeDocumentBlueprintRootParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedDocumentBlueprintTreeItemResponseModel>(\n      {url: `/umbraco/management/api/v1/tree/document-blueprint/root`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst postDocumentType = (\n    createDocumentTypeRequestModel: CreateDocumentTypeRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document-type`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: createDocumentTypeRequestModel\n    },\n      options);\n    }\n  \nconst getDocumentTypeById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<DocumentTypeResponseModel>(\n      {url: `/umbraco/management/api/v1/document-type/${id}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst deleteDocumentTypeById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document-type/${id}`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst putDocumentTypeById = (\n    id: string,\n    updateDocumentTypeRequestModel: UpdateDocumentTypeRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document-type/${id}`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: updateDocumentTypeRequestModel\n    },\n      options);\n    }\n  \nconst getDocumentTypeByIdAllowedChildren = (\n    id: string,\n    params?: GetDocumentTypeByIdAllowedChildrenParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedAllowedDocumentTypeModel>(\n      {url: `/umbraco/management/api/v1/document-type/${id}/allowed-children`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getDocumentTypeByIdBlueprint = (\n    id: string,\n    params?: GetDocumentTypeByIdBlueprintParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedDocumentTypeBlueprintItemResponseModel>(\n      {url: `/umbraco/management/api/v1/document-type/${id}/blueprint`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getDocumentTypeByIdCompositionReferences = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<DocumentTypeCompositionResponseModel[]>(\n      {url: `/umbraco/management/api/v1/document-type/${id}/composition-references`, method: 'GET'\n    },\n      options);\n    }\n  \nconst postDocumentTypeByIdCopy = (\n    id: string,\n    copyDocumentTypeRequestModel: CopyDocumentTypeRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document-type/${id}/copy`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: copyDocumentTypeRequestModel\n    },\n      options);\n    }\n  \nconst getDocumentTypeByIdExport = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<Blob>(\n      {url: `/umbraco/management/api/v1/document-type/${id}/export`, method: 'GET',\n        responseType: 'blob'\n    },\n      options);\n    }\n  \nconst putDocumentTypeByIdImport = (\n    id: string,\n    importDocumentTypeRequestModel: ImportDocumentTypeRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document-type/${id}/import`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: importDocumentTypeRequestModel\n    },\n      options);\n    }\n  \nconst putDocumentTypeByIdMove = (\n    id: string,\n    moveDocumentTypeRequestModel: MoveDocumentTypeRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document-type/${id}/move`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: moveDocumentTypeRequestModel\n    },\n      options);\n    }\n  \nconst getDocumentTypeAllowedAtRoot = (\n    params?: GetDocumentTypeAllowedAtRootParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedAllowedDocumentTypeModel>(\n      {url: `/umbraco/management/api/v1/document-type/allowed-at-root`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst postDocumentTypeAvailableCompositions = (\n    documentTypeCompositionRequestModel: DocumentTypeCompositionRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<AvailableDocumentTypeCompositionResponseModel[]>(\n      {url: `/umbraco/management/api/v1/document-type/available-compositions`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: documentTypeCompositionRequestModel\n    },\n      options);\n    }\n  \nconst getDocumentTypeConfiguration = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<DocumentTypeConfigurationResponseModel>(\n      {url: `/umbraco/management/api/v1/document-type/configuration`, method: 'GET'\n    },\n      options);\n    }\n  \nconst postDocumentTypeFolder = (\n    createFolderRequestModel: CreateFolderRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document-type/folder`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: createFolderRequestModel\n    },\n      options);\n    }\n  \nconst getDocumentTypeFolderById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<FolderResponseModel>(\n      {url: `/umbraco/management/api/v1/document-type/folder/${id}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst deleteDocumentTypeFolderById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document-type/folder/${id}`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst putDocumentTypeFolderById = (\n    id: string,\n    updateFolderResponseModel: UpdateFolderResponseModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document-type/folder/${id}`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: updateFolderResponseModel\n    },\n      options);\n    }\n  \nconst postDocumentTypeImport = (\n    importDocumentTypeRequestModel: ImportDocumentTypeRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document-type/import`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: importDocumentTypeRequestModel\n    },\n      options);\n    }\n  \nconst getItemDocumentType = (\n    params?: GetItemDocumentTypeParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<DocumentTypeItemResponseModel[]>(\n      {url: `/umbraco/management/api/v1/item/document-type`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getItemDocumentTypeSearch = (\n    params?: GetItemDocumentTypeSearchParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedModelDocumentTypeItemResponseModel>(\n      {url: `/umbraco/management/api/v1/item/document-type/search`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getTreeDocumentTypeAncestors = (\n    params?: GetTreeDocumentTypeAncestorsParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<DocumentTypeTreeItemResponseModel[]>(\n      {url: `/umbraco/management/api/v1/tree/document-type/ancestors`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getTreeDocumentTypeChildren = (\n    params?: GetTreeDocumentTypeChildrenParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedDocumentTypeTreeItemResponseModel>(\n      {url: `/umbraco/management/api/v1/tree/document-type/children`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getTreeDocumentTypeRoot = (\n    params?: GetTreeDocumentTypeRootParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedDocumentTypeTreeItemResponseModel>(\n      {url: `/umbraco/management/api/v1/tree/document-type/root`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getDocumentVersion = (\n    params: GetDocumentVersionParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedDocumentVersionItemResponseModel>(\n      {url: `/umbraco/management/api/v1/document-version`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getDocumentVersionById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<DocumentVersionResponseModel>(\n      {url: `/umbraco/management/api/v1/document-version/${id}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst putDocumentVersionByIdPreventCleanup = (\n    id: string,\n    params?: PutDocumentVersionByIdPreventCleanupParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document-version/${id}/prevent-cleanup`, method: 'PUT',\n        params\n    },\n      options);\n    }\n  \nconst postDocumentVersionByIdRollback = (\n    id: string,\n    params?: PostDocumentVersionByIdRollbackParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document-version/${id}/rollback`, method: 'POST',\n        params\n    },\n      options);\n    }\n  \nconst getCollectionDocumentById = (\n    id: string,\n    params?: GetCollectionDocumentByIdParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedDocumentCollectionResponseModel>(\n      {url: `/umbraco/management/api/v1/collection/document/${id}`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst postDocument = (\n    createDocumentRequestModel: CreateDocumentRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: createDocumentRequestModel\n    },\n      options);\n    }\n  \nconst getDocumentById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<DocumentResponseModel>(\n      {url: `/umbraco/management/api/v1/document/${id}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst deleteDocumentById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document/${id}`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst putDocumentById = (\n    id: string,\n    updateDocumentRequestModel: UpdateDocumentRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document/${id}`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: updateDocumentRequestModel\n    },\n      options);\n    }\n  \nconst getDocumentByIdAuditLog = (\n    id: string,\n    params?: GetDocumentByIdAuditLogParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedAuditLogResponseModel>(\n      {url: `/umbraco/management/api/v1/document/${id}/audit-log`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst postDocumentByIdCopy = (\n    id: string,\n    copyDocumentRequestModel: CopyDocumentRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document/${id}/copy`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: copyDocumentRequestModel\n    },\n      options);\n    }\n  \nconst getDocumentByIdDomains = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<DomainsResponseModel>(\n      {url: `/umbraco/management/api/v1/document/${id}/domains`, method: 'GET'\n    },\n      options);\n    }\n  \nconst putDocumentByIdDomains = (\n    id: string,\n    updateDomainsRequestModel: UpdateDomainsRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document/${id}/domains`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: updateDomainsRequestModel\n    },\n      options);\n    }\n  \nconst putDocumentByIdMove = (\n    id: string,\n    moveDocumentRequestModel: MoveDocumentRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document/${id}/move`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: moveDocumentRequestModel\n    },\n      options);\n    }\n  \nconst putDocumentByIdMoveToRecycleBin = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document/${id}/move-to-recycle-bin`, method: 'PUT'\n    },\n      options);\n    }\n  \nconst getDocumentByIdNotifications = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<DocumentNotificationResponseModel[]>(\n      {url: `/umbraco/management/api/v1/document/${id}/notifications`, method: 'GET'\n    },\n      options);\n    }\n  \nconst putDocumentByIdNotifications = (\n    id: string,\n    updateDocumentNotificationsRequestModel: UpdateDocumentNotificationsRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document/${id}/notifications`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: updateDocumentNotificationsRequestModel\n    },\n      options);\n    }\n  \nconst postDocumentByIdPublicAccess = (\n    id: string,\n    publicAccessRequestModel: PublicAccessRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document/${id}/public-access`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: publicAccessRequestModel\n    },\n      options);\n    }\n  \nconst deleteDocumentByIdPublicAccess = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document/${id}/public-access`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst getDocumentByIdPublicAccess = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PublicAccessResponseModel>(\n      {url: `/umbraco/management/api/v1/document/${id}/public-access`, method: 'GET'\n    },\n      options);\n    }\n  \nconst putDocumentByIdPublicAccess = (\n    id: string,\n    publicAccessRequestModel: PublicAccessRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document/${id}/public-access`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: publicAccessRequestModel\n    },\n      options);\n    }\n  \nconst putDocumentByIdPublish = (\n    id: string,\n    publishDocumentRequestModel: PublishDocumentRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document/${id}/publish`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: publishDocumentRequestModel\n    },\n      options);\n    }\n  \nconst putDocumentByIdPublishWithDescendants = (\n    id: string,\n    publishDocumentWithDescendantsRequestModel: PublishDocumentWithDescendantsRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document/${id}/publish-with-descendants`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: publishDocumentWithDescendantsRequestModel\n    },\n      options);\n    }\n  \nconst getDocumentByIdPublished = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PublishedDocumentResponseModel>(\n      {url: `/umbraco/management/api/v1/document/${id}/published`, method: 'GET'\n    },\n      options);\n    }\n  \nconst getDocumentByIdReferencedBy = (\n    id: string,\n    params?: GetDocumentByIdReferencedByParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedIReferenceResponseModel>(\n      {url: `/umbraco/management/api/v1/document/${id}/referenced-by`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getDocumentByIdReferencedDescendants = (\n    id: string,\n    params?: GetDocumentByIdReferencedDescendantsParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedReferenceByIdModel>(\n      {url: `/umbraco/management/api/v1/document/${id}/referenced-descendants`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst putDocumentByIdUnpublish = (\n    id: string,\n    unpublishDocumentRequestModel: UnpublishDocumentRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document/${id}/unpublish`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: unpublishDocumentRequestModel\n    },\n      options);\n    }\n  \n/**\n * @deprecated\n */\nconst putDocumentByIdValidate = (\n    id: string,\n    updateDocumentRequestModel: UpdateDocumentRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document/${id}/validate`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: updateDocumentRequestModel\n    },\n      options);\n    }\n  \nconst putUmbracoManagementApiV11DocumentByIdValidate11 = (\n    id: string,\n    validateUpdateDocumentRequestModel: ValidateUpdateDocumentRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1.1/document/${id}/validate`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: validateUpdateDocumentRequestModel\n    },\n      options);\n    }\n  \nconst getDocumentAreReferenced = (\n    params?: GetDocumentAreReferencedParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedReferenceByIdModel>(\n      {url: `/umbraco/management/api/v1/document/are-referenced`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getDocumentConfiguration = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<DocumentConfigurationResponseModel>(\n      {url: `/umbraco/management/api/v1/document/configuration`, method: 'GET'\n    },\n      options);\n    }\n  \nconst putDocumentSort = (\n    sortingRequestModel: SortingRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document/sort`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: sortingRequestModel\n    },\n      options);\n    }\n  \nconst getDocumentUrls = (\n    params?: GetDocumentUrlsParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<DocumentUrlInfoResponseModel[]>(\n      {url: `/umbraco/management/api/v1/document/urls`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst postDocumentValidate = (\n    createDocumentRequestModel: CreateDocumentRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/document/validate`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: createDocumentRequestModel\n    },\n      options);\n    }\n  \nconst getItemDocument = (\n    params?: GetItemDocumentParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<DocumentItemResponseModel[]>(\n      {url: `/umbraco/management/api/v1/item/document`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getItemDocumentSearch = (\n    params?: GetItemDocumentSearchParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedModelDocumentItemResponseModel>(\n      {url: `/umbraco/management/api/v1/item/document/search`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst deleteRecycleBinDocument = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/recycle-bin/document`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst deleteRecycleBinDocumentById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/recycle-bin/document/${id}`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst getRecycleBinDocumentByIdOriginalParent = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<ReferenceByIdModel>(\n      {url: `/umbraco/management/api/v1/recycle-bin/document/${id}/original-parent`, method: 'GET'\n    },\n      options);\n    }\n  \nconst putRecycleBinDocumentByIdRestore = (\n    id: string,\n    moveMediaRequestModel: MoveMediaRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/recycle-bin/document/${id}/restore`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: moveMediaRequestModel\n    },\n      options);\n    }\n  \nconst getRecycleBinDocumentChildren = (\n    params?: GetRecycleBinDocumentChildrenParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedDocumentRecycleBinItemResponseModel>(\n      {url: `/umbraco/management/api/v1/recycle-bin/document/children`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getRecycleBinDocumentRoot = (\n    params?: GetRecycleBinDocumentRootParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedDocumentRecycleBinItemResponseModel>(\n      {url: `/umbraco/management/api/v1/recycle-bin/document/root`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getTreeDocumentAncestors = (\n    params?: GetTreeDocumentAncestorsParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<DocumentTreeItemResponseModel[]>(\n      {url: `/umbraco/management/api/v1/tree/document/ancestors`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getTreeDocumentChildren = (\n    params?: GetTreeDocumentChildrenParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedDocumentTreeItemResponseModel>(\n      {url: `/umbraco/management/api/v1/tree/document/children`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getTreeDocumentRoot = (\n    params?: GetTreeDocumentRootParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedDocumentTreeItemResponseModel>(\n      {url: `/umbraco/management/api/v1/tree/document/root`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst postDynamicRootQuery = (\n    dynamicRootRequestModel: DynamicRootRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<DynamicRootResponseModel>(\n      {url: `/umbraco/management/api/v1/dynamic-root/query`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: dynamicRootRequestModel\n    },\n      options);\n    }\n  \nconst getDynamicRootSteps = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<string[]>(\n      {url: `/umbraco/management/api/v1/dynamic-root/steps`, method: 'GET'\n    },\n      options);\n    }\n  \nconst getHealthCheckGroup = (\n    params?: GetHealthCheckGroupParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedHealthCheckGroupResponseModel>(\n      {url: `/umbraco/management/api/v1/health-check-group`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getHealthCheckGroupByName = (\n    name: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<HealthCheckGroupPresentationModel>(\n      {url: `/umbraco/management/api/v1/health-check-group/${name}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst postHealthCheckGroupByNameCheck = (\n    name: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<HealthCheckGroupWithResultResponseModel>(\n      {url: `/umbraco/management/api/v1/health-check-group/${name}/check`, method: 'POST'\n    },\n      options);\n    }\n  \nconst postHealthCheckExecuteAction = (\n    healthCheckActionRequestModel: HealthCheckActionRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<HealthCheckResultResponseModel>(\n      {url: `/umbraco/management/api/v1/health-check/execute-action`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: healthCheckActionRequestModel\n    },\n      options);\n    }\n  \nconst getHelp = (\n    params?: GetHelpParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedHelpPageResponseModel>(\n      {url: `/umbraco/management/api/v1/help`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getImagingResizeUrls = (\n    params?: GetImagingResizeUrlsParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<MediaUrlInfoResponseModel[]>(\n      {url: `/umbraco/management/api/v1/imaging/resize/urls`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getImportAnalyze = (\n    params?: GetImportAnalyzeParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<EntityImportAnalysisResponseModel>(\n      {url: `/umbraco/management/api/v1/import/analyze`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getIndexer = (\n    params?: GetIndexerParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedIndexResponseModel>(\n      {url: `/umbraco/management/api/v1/indexer`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getIndexerByIndexName = (\n    indexName: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<IndexResponseModel>(\n      {url: `/umbraco/management/api/v1/indexer/${indexName}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst postIndexerByIndexNameRebuild = (\n    indexName: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/indexer/${indexName}/rebuild`, method: 'POST'\n    },\n      options);\n    }\n  \nconst getInstallSettings = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<InstallSettingsResponseModel>(\n      {url: `/umbraco/management/api/v1/install/settings`, method: 'GET'\n    },\n      options);\n    }\n  \nconst postInstallSetup = (\n    installRequestModel: InstallRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/install/setup`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: installRequestModel\n    },\n      options);\n    }\n  \nconst postInstallValidateDatabase = (\n    databaseInstallRequestModel: DatabaseInstallRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/install/validate-database`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: databaseInstallRequestModel\n    },\n      options);\n    }\n  \nconst getItemLanguage = (\n    params?: GetItemLanguageParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<LanguageItemResponseModel[]>(\n      {url: `/umbraco/management/api/v1/item/language`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getItemLanguageDefault = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<LanguageItemResponseModel>(\n      {url: `/umbraco/management/api/v1/item/language/default`, method: 'GET'\n    },\n      options);\n    }\n  \nconst getLanguage = (\n    params?: GetLanguageParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedLanguageResponseModel>(\n      {url: `/umbraco/management/api/v1/language`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst postLanguage = (\n    createLanguageRequestModel: CreateLanguageRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/language`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: createLanguageRequestModel\n    },\n      options);\n    }\n  \nconst getLanguageByIsoCode = (\n    isoCode: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<LanguageResponseModel>(\n      {url: `/umbraco/management/api/v1/language/${isoCode}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst deleteLanguageByIsoCode = (\n    isoCode: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/language/${isoCode}`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst putLanguageByIsoCode = (\n    isoCode: string,\n    updateLanguageRequestModel: UpdateLanguageRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/language/${isoCode}`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: updateLanguageRequestModel\n    },\n      options);\n    }\n  \nconst getLogViewerLevel = (\n    params?: GetLogViewerLevelParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedLoggerResponseModel>(\n      {url: `/umbraco/management/api/v1/log-viewer/level`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getLogViewerLevelCount = (\n    params?: GetLogViewerLevelCountParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<LogLevelCountsReponseModel>(\n      {url: `/umbraco/management/api/v1/log-viewer/level-count`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getLogViewerLog = (\n    params?: GetLogViewerLogParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedLogMessageResponseModel>(\n      {url: `/umbraco/management/api/v1/log-viewer/log`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getLogViewerMessageTemplate = (\n    params?: GetLogViewerMessageTemplateParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedLogTemplateResponseModel>(\n      {url: `/umbraco/management/api/v1/log-viewer/message-template`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getLogViewerSavedSearch = (\n    params?: GetLogViewerSavedSearchParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedSavedLogSearchResponseModel>(\n      {url: `/umbraco/management/api/v1/log-viewer/saved-search`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst postLogViewerSavedSearch = (\n    savedLogSearchRequestModel: SavedLogSearchRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/log-viewer/saved-search`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: savedLogSearchRequestModel\n    },\n      options);\n    }\n  \nconst getLogViewerSavedSearchByName = (\n    name: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<SavedLogSearchResponseModel>(\n      {url: `/umbraco/management/api/v1/log-viewer/saved-search/${name}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst deleteLogViewerSavedSearchByName = (\n    name: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/log-viewer/saved-search/${name}`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst getLogViewerValidateLogsSize = (\n    params?: GetLogViewerValidateLogsSizeParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/log-viewer/validate-logs-size`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getManifestManifest = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<ManifestResponseModel[]>(\n      {url: `/umbraco/management/api/v1/manifest/manifest`, method: 'GET'\n    },\n      options);\n    }\n  \nconst getManifestManifestPrivate = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<ManifestResponseModel[]>(\n      {url: `/umbraco/management/api/v1/manifest/manifest/private`, method: 'GET'\n    },\n      options);\n    }\n  \nconst getManifestManifestPublic = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<ManifestResponseModel[]>(\n      {url: `/umbraco/management/api/v1/manifest/manifest/public`, method: 'GET'\n    },\n      options);\n    }\n  \nconst getItemMediaType = (\n    params?: GetItemMediaTypeParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<MediaTypeItemResponseModel[]>(\n      {url: `/umbraco/management/api/v1/item/media-type`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getItemMediaTypeAllowed = (\n    params?: GetItemMediaTypeAllowedParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedModelMediaTypeItemResponseModel>(\n      {url: `/umbraco/management/api/v1/item/media-type/allowed`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getItemMediaTypeFolders = (\n    params?: GetItemMediaTypeFoldersParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedModelMediaTypeItemResponseModel>(\n      {url: `/umbraco/management/api/v1/item/media-type/folders`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getItemMediaTypeSearch = (\n    params?: GetItemMediaTypeSearchParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedModelMediaTypeItemResponseModel>(\n      {url: `/umbraco/management/api/v1/item/media-type/search`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst postMediaType = (\n    createMediaTypeRequestModel: CreateMediaTypeRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/media-type`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: createMediaTypeRequestModel\n    },\n      options);\n    }\n  \nconst getMediaTypeById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<MediaTypeResponseModel>(\n      {url: `/umbraco/management/api/v1/media-type/${id}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst deleteMediaTypeById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/media-type/${id}`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst putMediaTypeById = (\n    id: string,\n    updateMediaTypeRequestModel: UpdateMediaTypeRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/media-type/${id}`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: updateMediaTypeRequestModel\n    },\n      options);\n    }\n  \nconst getMediaTypeByIdAllowedChildren = (\n    id: string,\n    params?: GetMediaTypeByIdAllowedChildrenParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedAllowedMediaTypeModel>(\n      {url: `/umbraco/management/api/v1/media-type/${id}/allowed-children`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getMediaTypeByIdCompositionReferences = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<MediaTypeCompositionResponseModel[]>(\n      {url: `/umbraco/management/api/v1/media-type/${id}/composition-references`, method: 'GET'\n    },\n      options);\n    }\n  \nconst postMediaTypeByIdCopy = (\n    id: string,\n    copyMediaTypeRequestModel: CopyMediaTypeRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/media-type/${id}/copy`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: copyMediaTypeRequestModel\n    },\n      options);\n    }\n  \nconst getMediaTypeByIdExport = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<Blob>(\n      {url: `/umbraco/management/api/v1/media-type/${id}/export`, method: 'GET',\n        responseType: 'blob'\n    },\n      options);\n    }\n  \nconst putMediaTypeByIdImport = (\n    id: string,\n    importMediaTypeRequestModel: ImportMediaTypeRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/media-type/${id}/import`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: importMediaTypeRequestModel\n    },\n      options);\n    }\n  \nconst putMediaTypeByIdMove = (\n    id: string,\n    moveMediaTypeRequestModel: MoveMediaTypeRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/media-type/${id}/move`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: moveMediaTypeRequestModel\n    },\n      options);\n    }\n  \nconst getMediaTypeAllowedAtRoot = (\n    params?: GetMediaTypeAllowedAtRootParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedAllowedMediaTypeModel>(\n      {url: `/umbraco/management/api/v1/media-type/allowed-at-root`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst postMediaTypeAvailableCompositions = (\n    mediaTypeCompositionRequestModel: MediaTypeCompositionRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<AvailableMediaTypeCompositionResponseModel[]>(\n      {url: `/umbraco/management/api/v1/media-type/available-compositions`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: mediaTypeCompositionRequestModel\n    },\n      options);\n    }\n  \nconst getMediaTypeConfiguration = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<MediaTypeConfigurationResponseModel>(\n      {url: `/umbraco/management/api/v1/media-type/configuration`, method: 'GET'\n    },\n      options);\n    }\n  \nconst postMediaTypeFolder = (\n    createFolderRequestModel: CreateFolderRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/media-type/folder`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: createFolderRequestModel\n    },\n      options);\n    }\n  \nconst getMediaTypeFolderById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<FolderResponseModel>(\n      {url: `/umbraco/management/api/v1/media-type/folder/${id}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst deleteMediaTypeFolderById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/media-type/folder/${id}`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst putMediaTypeFolderById = (\n    id: string,\n    updateFolderResponseModel: UpdateFolderResponseModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/media-type/folder/${id}`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: updateFolderResponseModel\n    },\n      options);\n    }\n  \nconst postMediaTypeImport = (\n    importMediaTypeRequestModel: ImportMediaTypeRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/media-type/import`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: importMediaTypeRequestModel\n    },\n      options);\n    }\n  \nconst getTreeMediaTypeAncestors = (\n    params?: GetTreeMediaTypeAncestorsParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<MediaTypeTreeItemResponseModel[]>(\n      {url: `/umbraco/management/api/v1/tree/media-type/ancestors`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getTreeMediaTypeChildren = (\n    params?: GetTreeMediaTypeChildrenParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedMediaTypeTreeItemResponseModel>(\n      {url: `/umbraco/management/api/v1/tree/media-type/children`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getTreeMediaTypeRoot = (\n    params?: GetTreeMediaTypeRootParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedMediaTypeTreeItemResponseModel>(\n      {url: `/umbraco/management/api/v1/tree/media-type/root`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getCollectionMedia = (\n    params?: GetCollectionMediaParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedMediaCollectionResponseModel>(\n      {url: `/umbraco/management/api/v1/collection/media`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getItemMedia = (\n    params?: GetItemMediaParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<MediaItemResponseModel[]>(\n      {url: `/umbraco/management/api/v1/item/media`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getItemMediaSearch = (\n    params?: GetItemMediaSearchParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedModelMediaItemResponseModel>(\n      {url: `/umbraco/management/api/v1/item/media/search`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst postMedia = (\n    createMediaRequestModel: CreateMediaRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/media`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: createMediaRequestModel\n    },\n      options);\n    }\n  \nconst getMediaById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<MediaResponseModel>(\n      {url: `/umbraco/management/api/v1/media/${id}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst deleteMediaById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/media/${id}`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst putMediaById = (\n    id: string,\n    updateMediaRequestModel: UpdateMediaRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/media/${id}`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: updateMediaRequestModel\n    },\n      options);\n    }\n  \nconst getMediaByIdAuditLog = (\n    id: string,\n    params?: GetMediaByIdAuditLogParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedAuditLogResponseModel>(\n      {url: `/umbraco/management/api/v1/media/${id}/audit-log`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst putMediaByIdMove = (\n    id: string,\n    moveMediaRequestModel: MoveMediaRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/media/${id}/move`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: moveMediaRequestModel\n    },\n      options);\n    }\n  \nconst putMediaByIdMoveToRecycleBin = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/media/${id}/move-to-recycle-bin`, method: 'PUT'\n    },\n      options);\n    }\n  \nconst getMediaByIdReferencedBy = (\n    id: string,\n    params?: GetMediaByIdReferencedByParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedIReferenceResponseModel>(\n      {url: `/umbraco/management/api/v1/media/${id}/referenced-by`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getMediaByIdReferencedDescendants = (\n    id: string,\n    params?: GetMediaByIdReferencedDescendantsParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedReferenceByIdModel>(\n      {url: `/umbraco/management/api/v1/media/${id}/referenced-descendants`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst putMediaByIdValidate = (\n    id: string,\n    updateMediaRequestModel: UpdateMediaRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/media/${id}/validate`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: updateMediaRequestModel\n    },\n      options);\n    }\n  \nconst getMediaAreReferenced = (\n    params?: GetMediaAreReferencedParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedReferenceByIdModel>(\n      {url: `/umbraco/management/api/v1/media/are-referenced`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getMediaConfiguration = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<MediaConfigurationResponseModel>(\n      {url: `/umbraco/management/api/v1/media/configuration`, method: 'GET'\n    },\n      options);\n    }\n  \nconst putMediaSort = (\n    sortingRequestModel: SortingRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/media/sort`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: sortingRequestModel\n    },\n      options);\n    }\n  \nconst getMediaUrls = (\n    params?: GetMediaUrlsParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<MediaUrlInfoResponseModel[]>(\n      {url: `/umbraco/management/api/v1/media/urls`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst postMediaValidate = (\n    createMediaRequestModel: CreateMediaRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/media/validate`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: createMediaRequestModel\n    },\n      options);\n    }\n  \nconst deleteRecycleBinMedia = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/recycle-bin/media`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst deleteRecycleBinMediaById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/recycle-bin/media/${id}`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst getRecycleBinMediaByIdOriginalParent = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<ReferenceByIdModel>(\n      {url: `/umbraco/management/api/v1/recycle-bin/media/${id}/original-parent`, method: 'GET'\n    },\n      options);\n    }\n  \nconst putRecycleBinMediaByIdRestore = (\n    id: string,\n    moveMediaRequestModel: MoveMediaRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/recycle-bin/media/${id}/restore`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: moveMediaRequestModel\n    },\n      options);\n    }\n  \nconst getRecycleBinMediaChildren = (\n    params?: GetRecycleBinMediaChildrenParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedMediaRecycleBinItemResponseModel>(\n      {url: `/umbraco/management/api/v1/recycle-bin/media/children`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getRecycleBinMediaRoot = (\n    params?: GetRecycleBinMediaRootParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedMediaRecycleBinItemResponseModel>(\n      {url: `/umbraco/management/api/v1/recycle-bin/media/root`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getTreeMediaAncestors = (\n    params?: GetTreeMediaAncestorsParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<MediaTreeItemResponseModel[]>(\n      {url: `/umbraco/management/api/v1/tree/media/ancestors`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getTreeMediaChildren = (\n    params?: GetTreeMediaChildrenParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedMediaTreeItemResponseModel>(\n      {url: `/umbraco/management/api/v1/tree/media/children`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getTreeMediaRoot = (\n    params?: GetTreeMediaRootParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedMediaTreeItemResponseModel>(\n      {url: `/umbraco/management/api/v1/tree/media/root`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getItemMemberGroup = (\n    params?: GetItemMemberGroupParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<MemberGroupItemResponseModel[]>(\n      {url: `/umbraco/management/api/v1/item/member-group`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getMemberGroup = (\n    params?: GetMemberGroupParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedMemberGroupResponseModel>(\n      {url: `/umbraco/management/api/v1/member-group`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst postMemberGroup = (\n    createMemberGroupRequestModel: CreateMemberGroupRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/member-group`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: createMemberGroupRequestModel\n    },\n      options);\n    }\n  \nconst getMemberGroupById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<MemberGroupResponseModel>(\n      {url: `/umbraco/management/api/v1/member-group/${id}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst deleteMemberGroupById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/member-group/${id}`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst putMemberGroupById = (\n    id: string,\n    updateMemberGroupRequestModel: UpdateMemberGroupRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/member-group/${id}`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: updateMemberGroupRequestModel\n    },\n      options);\n    }\n  \nconst getTreeMemberGroupRoot = (\n    params?: GetTreeMemberGroupRootParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedNamedEntityTreeItemResponseModel>(\n      {url: `/umbraco/management/api/v1/tree/member-group/root`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getItemMemberType = (\n    params?: GetItemMemberTypeParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<MemberTypeItemResponseModel[]>(\n      {url: `/umbraco/management/api/v1/item/member-type`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getItemMemberTypeSearch = (\n    params?: GetItemMemberTypeSearchParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedModelMemberTypeItemResponseModel>(\n      {url: `/umbraco/management/api/v1/item/member-type/search`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst postMemberType = (\n    createMemberTypeRequestModel: CreateMemberTypeRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/member-type`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: createMemberTypeRequestModel\n    },\n      options);\n    }\n  \nconst getMemberTypeById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<MemberTypeResponseModel>(\n      {url: `/umbraco/management/api/v1/member-type/${id}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst deleteMemberTypeById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/member-type/${id}`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst putMemberTypeById = (\n    id: string,\n    updateMemberTypeRequestModel: UpdateMemberTypeRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/member-type/${id}`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: updateMemberTypeRequestModel\n    },\n      options);\n    }\n  \nconst getMemberTypeByIdCompositionReferences = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<MemberTypeCompositionResponseModel[]>(\n      {url: `/umbraco/management/api/v1/member-type/${id}/composition-references`, method: 'GET'\n    },\n      options);\n    }\n  \nconst postMemberTypeByIdCopy = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/member-type/${id}/copy`, method: 'POST'\n    },\n      options);\n    }\n  \nconst postMemberTypeAvailableCompositions = (\n    memberTypeCompositionRequestModel: MemberTypeCompositionRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<AvailableMemberTypeCompositionResponseModel[]>(\n      {url: `/umbraco/management/api/v1/member-type/available-compositions`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: memberTypeCompositionRequestModel\n    },\n      options);\n    }\n  \nconst getMemberTypeConfiguration = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<MemberTypeConfigurationResponseModel>(\n      {url: `/umbraco/management/api/v1/member-type/configuration`, method: 'GET'\n    },\n      options);\n    }\n  \nconst getTreeMemberTypeRoot = (\n    params?: GetTreeMemberTypeRootParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedMemberTypeTreeItemResponseModel>(\n      {url: `/umbraco/management/api/v1/tree/member-type/root`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getFilterMember = (\n    params?: GetFilterMemberParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedMemberResponseModel>(\n      {url: `/umbraco/management/api/v1/filter/member`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getItemMember = (\n    params?: GetItemMemberParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<MemberItemResponseModel[]>(\n      {url: `/umbraco/management/api/v1/item/member`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getItemMemberSearch = (\n    params?: GetItemMemberSearchParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedModelMemberItemResponseModel>(\n      {url: `/umbraco/management/api/v1/item/member/search`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst postMember = (\n    createMemberRequestModel: CreateMemberRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/member`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: createMemberRequestModel\n    },\n      options);\n    }\n  \nconst getMemberById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<MemberResponseModel>(\n      {url: `/umbraco/management/api/v1/member/${id}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst deleteMemberById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/member/${id}`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst putMemberById = (\n    id: string,\n    updateMemberRequestModel: UpdateMemberRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/member/${id}`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: updateMemberRequestModel\n    },\n      options);\n    }\n  \nconst putMemberByIdValidate = (\n    id: string,\n    updateMemberRequestModel: UpdateMemberRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/member/${id}/validate`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: updateMemberRequestModel\n    },\n      options);\n    }\n  \nconst getMemberConfiguration = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<MemberConfigurationResponseModel>(\n      {url: `/umbraco/management/api/v1/member/configuration`, method: 'GET'\n    },\n      options);\n    }\n  \nconst postMemberValidate = (\n    createMemberRequestModel: CreateMemberRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/member/validate`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: createMemberRequestModel\n    },\n      options);\n    }\n  \nconst postModelsBuilderBuild = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/models-builder/build`, method: 'POST'\n    },\n      options);\n    }\n  \nconst getModelsBuilderDashboard = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<ModelsBuilderResponseModel>(\n      {url: `/umbraco/management/api/v1/models-builder/dashboard`, method: 'GET'\n    },\n      options);\n    }\n  \nconst getModelsBuilderStatus = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<OutOfDateStatusResponseModel>(\n      {url: `/umbraco/management/api/v1/models-builder/status`, method: 'GET'\n    },\n      options);\n    }\n  \nconst getObjectTypes = (\n    params?: GetObjectTypesParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedObjectTypeResponseModel>(\n      {url: `/umbraco/management/api/v1/object-types`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getOembedQuery = (\n    params?: GetOembedQueryParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<OEmbedResponseModel>(\n      {url: `/umbraco/management/api/v1/oembed/query`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst postPackageByNameRunMigration = (\n    name: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/package/${name}/run-migration`, method: 'POST'\n    },\n      options);\n    }\n  \nconst getPackageConfiguration = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PackageConfigurationResponseModel>(\n      {url: `/umbraco/management/api/v1/package/configuration`, method: 'GET'\n    },\n      options);\n    }\n  \nconst getPackageCreated = (\n    params?: GetPackageCreatedParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedPackageDefinitionResponseModel>(\n      {url: `/umbraco/management/api/v1/package/created`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst postPackageCreated = (\n    createPackageRequestModel: CreatePackageRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/package/created`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: createPackageRequestModel\n    },\n      options);\n    }\n  \nconst getPackageCreatedById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PackageDefinitionResponseModel>(\n      {url: `/umbraco/management/api/v1/package/created/${id}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst deletePackageCreatedById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/package/created/${id}`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst putPackageCreatedById = (\n    id: string,\n    updatePackageRequestModel: NonReadonly<UpdatePackageRequestModel>,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/package/created/${id}`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: updatePackageRequestModel\n    },\n      options);\n    }\n  \nconst getPackageCreatedByIdDownload = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<Blob>(\n      {url: `/umbraco/management/api/v1/package/created/${id}/download`, method: 'GET',\n        responseType: 'blob'\n    },\n      options);\n    }\n  \nconst getPackageMigrationStatus = (\n    params?: GetPackageMigrationStatusParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedPackageMigrationStatusResponseModel>(\n      {url: `/umbraco/management/api/v1/package/migration-status`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getItemPartialView = (\n    params?: GetItemPartialViewParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PartialViewItemResponseModel[]>(\n      {url: `/umbraco/management/api/v1/item/partial-view`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst postPartialView = (\n    createPartialViewRequestModel: CreatePartialViewRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/partial-view`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: createPartialViewRequestModel\n    },\n      options);\n    }\n  \nconst getPartialViewByPath = (\n    path: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PartialViewResponseModel>(\n      {url: `/umbraco/management/api/v1/partial-view/${path}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst deletePartialViewByPath = (\n    path: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/partial-view/${path}`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst putPartialViewByPath = (\n    path: string,\n    updatePartialViewRequestModel: UpdatePartialViewRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/partial-view/${path}`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: updatePartialViewRequestModel\n    },\n      options);\n    }\n  \nconst putPartialViewByPathRename = (\n    path: string,\n    renamePartialViewRequestModel: RenamePartialViewRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/partial-view/${path}/rename`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: renamePartialViewRequestModel\n    },\n      options);\n    }\n  \nconst postPartialViewFolder = (\n    createPartialViewFolderRequestModel: CreatePartialViewFolderRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/partial-view/folder`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: createPartialViewFolderRequestModel\n    },\n      options);\n    }\n  \nconst getPartialViewFolderByPath = (\n    path: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PartialViewFolderResponseModel>(\n      {url: `/umbraco/management/api/v1/partial-view/folder/${path}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst deletePartialViewFolderByPath = (\n    path: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/partial-view/folder/${path}`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst getPartialViewSnippet = (\n    params?: GetPartialViewSnippetParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedPartialViewSnippetItemResponseModel>(\n      {url: `/umbraco/management/api/v1/partial-view/snippet`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getPartialViewSnippetById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PartialViewSnippetResponseModel>(\n      {url: `/umbraco/management/api/v1/partial-view/snippet/${id}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst getTreePartialViewAncestors = (\n    params?: GetTreePartialViewAncestorsParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<FileSystemTreeItemPresentationModel[]>(\n      {url: `/umbraco/management/api/v1/tree/partial-view/ancestors`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getTreePartialViewChildren = (\n    params?: GetTreePartialViewChildrenParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedFileSystemTreeItemPresentationModel>(\n      {url: `/umbraco/management/api/v1/tree/partial-view/children`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getTreePartialViewRoot = (\n    params?: GetTreePartialViewRootParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedFileSystemTreeItemPresentationModel>(\n      {url: `/umbraco/management/api/v1/tree/partial-view/root`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst deletePreview = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/preview`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst postPreview = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/preview`, method: 'POST'\n    },\n      options);\n    }\n  \nconst getProfilingStatus = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<ProfilingStatusResponseModel>(\n      {url: `/umbraco/management/api/v1/profiling/status`, method: 'GET'\n    },\n      options);\n    }\n  \nconst putProfilingStatus = (\n    profilingStatusRequestModel: ProfilingStatusRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/profiling/status`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: profilingStatusRequestModel\n    },\n      options);\n    }\n  \nconst getPropertyTypeIsUsed = (\n    params?: GetPropertyTypeIsUsedParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<boolean>(\n      {url: `/umbraco/management/api/v1/property-type/is-used`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \n/**\n * @deprecated\n */\nconst postPublishedCacheCollect = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<unknown>(\n      {url: `/umbraco/management/api/v1/published-cache/collect`, method: 'POST'\n    },\n      options);\n    }\n  \nconst postPublishedCacheRebuild = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/published-cache/rebuild`, method: 'POST'\n    },\n      options);\n    }\n  \nconst postPublishedCacheReload = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/published-cache/reload`, method: 'POST'\n    },\n      options);\n    }\n  \n/**\n * @deprecated\n */\nconst getPublishedCacheStatus = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<unknown>(\n      {url: `/umbraco/management/api/v1/published-cache/status`, method: 'GET'\n    },\n      options);\n    }\n  \nconst getRedirectManagement = (\n    params?: GetRedirectManagementParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedRedirectUrlResponseModel>(\n      {url: `/umbraco/management/api/v1/redirect-management`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getRedirectManagementById = (\n    id: string,\n    params?: GetRedirectManagementByIdParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedRedirectUrlResponseModel>(\n      {url: `/umbraco/management/api/v1/redirect-management/${id}`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst deleteRedirectManagementById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/redirect-management/${id}`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst getRedirectManagementStatus = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<RedirectUrlStatusResponseModel>(\n      {url: `/umbraco/management/api/v1/redirect-management/status`, method: 'GET'\n    },\n      options);\n    }\n  \nconst postRedirectManagementStatus = (\n    params?: PostRedirectManagementStatusParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/redirect-management/status`, method: 'POST',\n        params\n    },\n      options);\n    }\n  \nconst getItemRelationType = (\n    params?: GetItemRelationTypeParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<RelationTypeItemResponseModel[]>(\n      {url: `/umbraco/management/api/v1/item/relation-type`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getRelationType = (\n    params?: GetRelationTypeParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedRelationTypeResponseModel>(\n      {url: `/umbraco/management/api/v1/relation-type`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getRelationTypeById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<RelationTypeResponseModel>(\n      {url: `/umbraco/management/api/v1/relation-type/${id}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst getRelationByRelationTypeId = (\n    id: string,\n    params?: GetRelationByRelationTypeIdParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedRelationResponseModel>(\n      {url: `/umbraco/management/api/v1/relation/type/${id}`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getItemScript = (\n    params?: GetItemScriptParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<ScriptItemResponseModel[]>(\n      {url: `/umbraco/management/api/v1/item/script`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst postScript = (\n    createScriptRequestModel: CreateScriptRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/script`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: createScriptRequestModel\n    },\n      options);\n    }\n  \nconst getScriptByPath = (\n    path: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<ScriptResponseModel>(\n      {url: `/umbraco/management/api/v1/script/${path}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst deleteScriptByPath = (\n    path: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/script/${path}`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst putScriptByPath = (\n    path: string,\n    updateScriptRequestModel: UpdateScriptRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/script/${path}`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: updateScriptRequestModel\n    },\n      options);\n    }\n  \nconst putScriptByPathRename = (\n    path: string,\n    renameScriptRequestModel: RenameScriptRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/script/${path}/rename`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: renameScriptRequestModel\n    },\n      options);\n    }\n  \nconst postScriptFolder = (\n    createScriptFolderRequestModel: CreateScriptFolderRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/script/folder`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: createScriptFolderRequestModel\n    },\n      options);\n    }\n  \nconst getScriptFolderByPath = (\n    path: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<ScriptFolderResponseModel>(\n      {url: `/umbraco/management/api/v1/script/folder/${path}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst deleteScriptFolderByPath = (\n    path: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/script/folder/${path}`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst getTreeScriptAncestors = (\n    params?: GetTreeScriptAncestorsParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<FileSystemTreeItemPresentationModel[]>(\n      {url: `/umbraco/management/api/v1/tree/script/ancestors`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getTreeScriptChildren = (\n    params?: GetTreeScriptChildrenParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedFileSystemTreeItemPresentationModel>(\n      {url: `/umbraco/management/api/v1/tree/script/children`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getTreeScriptRoot = (\n    params?: GetTreeScriptRootParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedFileSystemTreeItemPresentationModel>(\n      {url: `/umbraco/management/api/v1/tree/script/root`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getSearcher = (\n    params?: GetSearcherParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedSearcherResponseModel>(\n      {url: `/umbraco/management/api/v1/searcher`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getSearcherBySearcherNameQuery = (\n    searcherName: string,\n    params?: GetSearcherBySearcherNameQueryParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedSearchResultResponseModel>(\n      {url: `/umbraco/management/api/v1/searcher/${searcherName}/query`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getSecurityConfiguration = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<SecurityConfigurationResponseModel>(\n      {url: `/umbraco/management/api/v1/security/configuration`, method: 'GET'\n    },\n      options);\n    }\n  \nconst postSecurityForgotPassword = (\n    resetPasswordRequestModel: ResetPasswordRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/security/forgot-password`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: resetPasswordRequestModel\n    },\n      options);\n    }\n  \nconst postSecurityForgotPasswordReset = (\n    resetPasswordTokenRequestModel: ResetPasswordTokenRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/security/forgot-password/reset`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: resetPasswordTokenRequestModel\n    },\n      options);\n    }\n  \nconst postSecurityForgotPasswordVerify = (\n    verifyResetPasswordTokenRequestModel: VerifyResetPasswordTokenRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<VerifyResetPasswordResponseModel>(\n      {url: `/umbraco/management/api/v1/security/forgot-password/verify`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: verifyResetPasswordTokenRequestModel\n    },\n      options);\n    }\n  \nconst getSegment = (\n    params?: GetSegmentParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedSegmentResponseModel>(\n      {url: `/umbraco/management/api/v1/segment`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getServerConfiguration = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<ServerConfigurationResponseModel>(\n      {url: `/umbraco/management/api/v1/server/configuration`, method: 'GET'\n    },\n      options);\n    }\n  \nconst getServerInformation = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<ServerInformationResponseModel>(\n      {url: `/umbraco/management/api/v1/server/information`, method: 'GET'\n    },\n      options);\n    }\n  \nconst getServerStatus = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<ServerStatusResponseModel>(\n      {url: `/umbraco/management/api/v1/server/status`, method: 'GET'\n    },\n      options);\n    }\n  \nconst getServerTroubleshooting = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<ServerTroubleshootingResponseModel>(\n      {url: `/umbraco/management/api/v1/server/troubleshooting`, method: 'GET'\n    },\n      options);\n    }\n  \nconst getServerUpgradeCheck = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<UpgradeCheckResponseModel>(\n      {url: `/umbraco/management/api/v1/server/upgrade-check`, method: 'GET'\n    },\n      options);\n    }\n  \nconst getItemStaticFile = (\n    params?: GetItemStaticFileParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<StaticFileItemResponseModel[]>(\n      {url: `/umbraco/management/api/v1/item/static-file`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getTreeStaticFileAncestors = (\n    params?: GetTreeStaticFileAncestorsParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<FileSystemTreeItemPresentationModel[]>(\n      {url: `/umbraco/management/api/v1/tree/static-file/ancestors`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getTreeStaticFileChildren = (\n    params?: GetTreeStaticFileChildrenParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedFileSystemTreeItemPresentationModel>(\n      {url: `/umbraco/management/api/v1/tree/static-file/children`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getTreeStaticFileRoot = (\n    params?: GetTreeStaticFileRootParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedFileSystemTreeItemPresentationModel>(\n      {url: `/umbraco/management/api/v1/tree/static-file/root`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getItemStylesheet = (\n    params?: GetItemStylesheetParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<StylesheetItemResponseModel[]>(\n      {url: `/umbraco/management/api/v1/item/stylesheet`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst postStylesheet = (\n    createStylesheetRequestModel: CreateStylesheetRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/stylesheet`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: createStylesheetRequestModel\n    },\n      options);\n    }\n  \nconst getStylesheetByPath = (\n    path: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<StylesheetResponseModel>(\n      {url: `/umbraco/management/api/v1/stylesheet/${path}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst deleteStylesheetByPath = (\n    path: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/stylesheet/${path}`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst putStylesheetByPath = (\n    path: string,\n    updateStylesheetRequestModel: UpdateStylesheetRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/stylesheet/${path}`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: updateStylesheetRequestModel\n    },\n      options);\n    }\n  \nconst putStylesheetByPathRename = (\n    path: string,\n    renameStylesheetRequestModel: RenameStylesheetRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/stylesheet/${path}/rename`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: renameStylesheetRequestModel\n    },\n      options);\n    }\n  \nconst postStylesheetFolder = (\n    createStylesheetFolderRequestModel: CreateStylesheetFolderRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/stylesheet/folder`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: createStylesheetFolderRequestModel\n    },\n      options);\n    }\n  \nconst getStylesheetFolderByPath = (\n    path: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<StylesheetFolderResponseModel>(\n      {url: `/umbraco/management/api/v1/stylesheet/folder/${path}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst deleteStylesheetFolderByPath = (\n    path: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/stylesheet/folder/${path}`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst getTreeStylesheetAncestors = (\n    params?: GetTreeStylesheetAncestorsParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<FileSystemTreeItemPresentationModel[]>(\n      {url: `/umbraco/management/api/v1/tree/stylesheet/ancestors`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getTreeStylesheetChildren = (\n    params?: GetTreeStylesheetChildrenParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedFileSystemTreeItemPresentationModel>(\n      {url: `/umbraco/management/api/v1/tree/stylesheet/children`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getTreeStylesheetRoot = (\n    params?: GetTreeStylesheetRootParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedFileSystemTreeItemPresentationModel>(\n      {url: `/umbraco/management/api/v1/tree/stylesheet/root`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getTag = (\n    params?: GetTagParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedTagResponseModel>(\n      {url: `/umbraco/management/api/v1/tag`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getTelemetry = (\n    params?: GetTelemetryParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedTelemetryResponseModel>(\n      {url: `/umbraco/management/api/v1/telemetry`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getTelemetryLevel = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<TelemetryResponseModel>(\n      {url: `/umbraco/management/api/v1/telemetry/level`, method: 'GET'\n    },\n      options);\n    }\n  \nconst postTelemetryLevel = (\n    telemetryRequestModel: TelemetryRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/telemetry/level`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: telemetryRequestModel\n    },\n      options);\n    }\n  \nconst getItemTemplate = (\n    params?: GetItemTemplateParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<TemplateItemResponseModel[]>(\n      {url: `/umbraco/management/api/v1/item/template`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getItemTemplateSearch = (\n    params?: GetItemTemplateSearchParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedModelTemplateItemResponseModel>(\n      {url: `/umbraco/management/api/v1/item/template/search`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst postTemplate = (\n    createTemplateRequestModel: CreateTemplateRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/template`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: createTemplateRequestModel\n    },\n      options);\n    }\n  \nconst getTemplateById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<TemplateResponseModel>(\n      {url: `/umbraco/management/api/v1/template/${id}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst deleteTemplateById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/template/${id}`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst putTemplateById = (\n    id: string,\n    updateTemplateRequestModel: UpdateTemplateRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/template/${id}`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: updateTemplateRequestModel\n    },\n      options);\n    }\n  \nconst getTemplateConfiguration = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<TemplateConfigurationResponseModel>(\n      {url: `/umbraco/management/api/v1/template/configuration`, method: 'GET'\n    },\n      options);\n    }\n  \nconst postTemplateQueryExecute = (\n    templateQueryExecuteModel: TemplateQueryExecuteModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<TemplateQueryResultResponseModel>(\n      {url: `/umbraco/management/api/v1/template/query/execute`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: templateQueryExecuteModel\n    },\n      options);\n    }\n  \nconst getTemplateQuerySettings = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<TemplateQuerySettingsResponseModel>(\n      {url: `/umbraco/management/api/v1/template/query/settings`, method: 'GET'\n    },\n      options);\n    }\n  \nconst getTreeTemplateAncestors = (\n    params?: GetTreeTemplateAncestorsParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<NamedEntityTreeItemResponseModel[]>(\n      {url: `/umbraco/management/api/v1/tree/template/ancestors`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getTreeTemplateChildren = (\n    params?: GetTreeTemplateChildrenParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedNamedEntityTreeItemResponseModel>(\n      {url: `/umbraco/management/api/v1/tree/template/children`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getTreeTemplateRoot = (\n    params?: GetTreeTemplateRootParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedNamedEntityTreeItemResponseModel>(\n      {url: `/umbraco/management/api/v1/tree/template/root`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst postTemporaryFile = (\n    postTemporaryFileBody: PostTemporaryFileBody,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {const formData = new FormData();\nformData.append('Id', postTemporaryFileBody.Id)\nformData.append('File', postTemporaryFileBody.File)\n\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/temporary-file`, method: 'POST',\n      headers: {'Content-Type': 'multipart/form-data', },\n       data: formData\n    },\n      options);\n    }\n  \nconst getTemporaryFileById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<TemporaryFileResponseModel>(\n      {url: `/umbraco/management/api/v1/temporary-file/${id}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst deleteTemporaryFileById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/temporary-file/${id}`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst getTemporaryFileConfiguration = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<TemporaryFileConfigurationResponseModel>(\n      {url: `/umbraco/management/api/v1/temporary-file/configuration`, method: 'GET'\n    },\n      options);\n    }\n  \nconst postUpgradeAuthorize = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/upgrade/authorize`, method: 'POST'\n    },\n      options);\n    }\n  \nconst getUpgradeSettings = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<UpgradeSettingsResponseModel>(\n      {url: `/umbraco/management/api/v1/upgrade/settings`, method: 'GET'\n    },\n      options);\n    }\n  \nconst postUserData = (\n    createUserDataRequestModel: CreateUserDataRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/user-data`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: createUserDataRequestModel\n    },\n      options);\n    }\n  \nconst getUserData = (\n    params?: GetUserDataParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedUserDataResponseModel>(\n      {url: `/umbraco/management/api/v1/user-data`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst putUserData = (\n    updateUserDataRequestModel: UpdateUserDataRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/user-data`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: updateUserDataRequestModel\n    },\n      options);\n    }\n  \nconst getUserDataById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<UserDataModel>(\n      {url: `/umbraco/management/api/v1/user-data/${id}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst getFilterUserGroup = (\n    params?: GetFilterUserGroupParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedUserGroupResponseModel>(\n      {url: `/umbraco/management/api/v1/filter/user-group`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getItemUserGroup = (\n    params?: GetItemUserGroupParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<UserGroupItemResponseModel[]>(\n      {url: `/umbraco/management/api/v1/item/user-group`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst deleteUserGroup = (\n    deleteUserGroupsRequestModel: DeleteUserGroupsRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/user-group`, method: 'DELETE',\n      headers: {'Content-Type': 'application/json', },\n      data: deleteUserGroupsRequestModel\n    },\n      options);\n    }\n  \nconst postUserGroup = (\n    createUserGroupRequestModel: CreateUserGroupRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/user-group`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: createUserGroupRequestModel\n    },\n      options);\n    }\n  \nconst getUserGroup = (\n    params?: GetUserGroupParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedUserGroupResponseModel>(\n      {url: `/umbraco/management/api/v1/user-group`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getUserGroupById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<UserGroupResponseModel>(\n      {url: `/umbraco/management/api/v1/user-group/${id}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst deleteUserGroupById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/user-group/${id}`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst putUserGroupById = (\n    id: string,\n    updateUserGroupRequestModel: UpdateUserGroupRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/user-group/${id}`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: updateUserGroupRequestModel\n    },\n      options);\n    }\n  \nconst deleteUserGroupByIdUsers = (\n    id: string,\n    referenceByIdModel: ReferenceByIdModel[],\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/user-group/${id}/users`, method: 'DELETE',\n      headers: {'Content-Type': 'application/json', },\n      data: referenceByIdModel\n    },\n      options);\n    }\n  \nconst postUserGroupByIdUsers = (\n    id: string,\n    referenceByIdModel: ReferenceByIdModel[],\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/user-group/${id}/users`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: referenceByIdModel\n    },\n      options);\n    }\n  \nconst getFilterUser = (\n    params?: GetFilterUserParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedUserResponseModel>(\n      {url: `/umbraco/management/api/v1/filter/user`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getItemUser = (\n    params?: GetItemUserParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<UserItemResponseModel[]>(\n      {url: `/umbraco/management/api/v1/item/user`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst postUser = (\n    createUserRequestModel: CreateUserRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/user`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: createUserRequestModel\n    },\n      options);\n    }\n  \nconst deleteUser = (\n    deleteUsersRequestModel: DeleteUsersRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/user`, method: 'DELETE',\n      headers: {'Content-Type': 'application/json', },\n      data: deleteUsersRequestModel\n    },\n      options);\n    }\n  \nconst getUser = (\n    params?: GetUserParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedUserResponseModel>(\n      {url: `/umbraco/management/api/v1/user`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getUserById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<UserResponseModel>(\n      {url: `/umbraco/management/api/v1/user/${id}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst deleteUserById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/user/${id}`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst putUserById = (\n    id: string,\n    updateUserRequestModel: UpdateUserRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/user/${id}`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: updateUserRequestModel\n    },\n      options);\n    }\n  \nconst getUserById2fa = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<UserTwoFactorProviderModel[]>(\n      {url: `/umbraco/management/api/v1/user/${id}/2fa`, method: 'GET'\n    },\n      options);\n    }\n  \nconst deleteUserById2faByProviderName = (\n    id: string,\n    providerName: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/user/${id}/2fa/${providerName}`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst getUserByIdCalculateStartNodes = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<CalculatedUserStartNodesResponseModel>(\n      {url: `/umbraco/management/api/v1/user/${id}/calculate-start-nodes`, method: 'GET'\n    },\n      options);\n    }\n  \nconst postUserByIdChangePassword = (\n    id: string,\n    changePasswordUserRequestModel: ChangePasswordUserRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/user/${id}/change-password`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: changePasswordUserRequestModel\n    },\n      options);\n    }\n  \nconst postUserByIdClientCredentials = (\n    id: string,\n    createUserClientCredentialsRequestModel: CreateUserClientCredentialsRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/user/${id}/client-credentials`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: createUserClientCredentialsRequestModel\n    },\n      options);\n    }\n  \nconst getUserByIdClientCredentials = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<string[]>(\n      {url: `/umbraco/management/api/v1/user/${id}/client-credentials`, method: 'GET'\n    },\n      options);\n    }\n  \nconst deleteUserByIdClientCredentialsByClientId = (\n    id: string,\n    clientId: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/user/${id}/client-credentials/${clientId}`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst postUserByIdResetPassword = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<ResetPasswordUserResponseModel>(\n      {url: `/umbraco/management/api/v1/user/${id}/reset-password`, method: 'POST'\n    },\n      options);\n    }\n  \nconst deleteUserAvatarById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/user/avatar/${id}`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst postUserAvatarById = (\n    id: string,\n    setAvatarRequestModel: SetAvatarRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/user/avatar/${id}`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: setAvatarRequestModel\n    },\n      options);\n    }\n  \nconst getUserConfiguration = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<UserConfigurationResponseModel>(\n      {url: `/umbraco/management/api/v1/user/configuration`, method: 'GET'\n    },\n      options);\n    }\n  \nconst getUserCurrent = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<CurrentUserResponseModel>(\n      {url: `/umbraco/management/api/v1/user/current`, method: 'GET'\n    },\n      options);\n    }\n  \nconst getUserCurrent2fa = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<UserTwoFactorProviderModel[]>(\n      {url: `/umbraco/management/api/v1/user/current/2fa`, method: 'GET'\n    },\n      options);\n    }\n  \nconst deleteUserCurrent2faByProviderName = (\n    providerName: string,\n    params?: DeleteUserCurrent2faByProviderNameParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/user/current/2fa/${providerName}`, method: 'DELETE',\n        params\n    },\n      options);\n    }\n  \nconst postUserCurrent2faByProviderName = (\n    providerName: string,\n    enableTwoFactorRequestModel: EnableTwoFactorRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<NoopSetupTwoFactorModel>(\n      {url: `/umbraco/management/api/v1/user/current/2fa/${providerName}`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: enableTwoFactorRequestModel\n    },\n      options);\n    }\n  \nconst getUserCurrent2faByProviderName = (\n    providerName: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<NoopSetupTwoFactorModel>(\n      {url: `/umbraco/management/api/v1/user/current/2fa/${providerName}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst postUserCurrentAvatar = (\n    setAvatarRequestModel: SetAvatarRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/user/current/avatar`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: setAvatarRequestModel\n    },\n      options);\n    }\n  \nconst postUserCurrentChangePassword = (\n    changePasswordCurrentUserRequestModel: ChangePasswordCurrentUserRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/user/current/change-password`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: changePasswordCurrentUserRequestModel\n    },\n      options);\n    }\n  \nconst getUserCurrentConfiguration = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<CurrenUserConfigurationResponseModel>(\n      {url: `/umbraco/management/api/v1/user/current/configuration`, method: 'GET'\n    },\n      options);\n    }\n  \nconst getUserCurrentLoginProviders = (\n    \n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<UserExternalLoginProviderModel[]>(\n      {url: `/umbraco/management/api/v1/user/current/login-providers`, method: 'GET'\n    },\n      options);\n    }\n  \nconst getUserCurrentPermissions = (\n    params?: GetUserCurrentPermissionsParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<UserPermissionsResponseModel>(\n      {url: `/umbraco/management/api/v1/user/current/permissions`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getUserCurrentPermissionsDocument = (\n    params?: GetUserCurrentPermissionsDocumentParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<UserPermissionsResponseModel[]>(\n      {url: `/umbraco/management/api/v1/user/current/permissions/document`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getUserCurrentPermissionsMedia = (\n    params?: GetUserCurrentPermissionsMediaParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<UserPermissionsResponseModel>(\n      {url: `/umbraco/management/api/v1/user/current/permissions/media`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst postUserDisable = (\n    disableUserRequestModel: DisableUserRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/user/disable`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: disableUserRequestModel\n    },\n      options);\n    }\n  \nconst postUserEnable = (\n    enableUserRequestModel: EnableUserRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/user/enable`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: enableUserRequestModel\n    },\n      options);\n    }\n  \nconst postUserInvite = (\n    inviteUserRequestModel: InviteUserRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/user/invite`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: inviteUserRequestModel\n    },\n      options);\n    }\n  \nconst postUserInviteCreatePassword = (\n    createInitialPasswordUserRequestModel: CreateInitialPasswordUserRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/user/invite/create-password`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: createInitialPasswordUserRequestModel\n    },\n      options);\n    }\n  \nconst postUserInviteResend = (\n    resendInviteUserRequestModel: ResendInviteUserRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/user/invite/resend`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: resendInviteUserRequestModel\n    },\n      options);\n    }\n  \nconst postUserInviteVerify = (\n    verifyInviteUserRequestModel: VerifyInviteUserRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<VerifyInviteUserResponseModel>(\n      {url: `/umbraco/management/api/v1/user/invite/verify`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: verifyInviteUserRequestModel\n    },\n      options);\n    }\n  \nconst postUserSetUserGroups = (\n    updateUserGroupsOnUserRequestModel: UpdateUserGroupsOnUserRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/user/set-user-groups`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: updateUserGroupsOnUserRequestModel\n    },\n      options);\n    }\n  \nconst postUserUnlock = (\n    unlockUsersRequestModel: UnlockUsersRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/user/unlock`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: unlockUsersRequestModel\n    },\n      options);\n    }\n  \nconst getItemWebhook = (\n    params?: GetItemWebhookParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<WebhookItemResponseModel[]>(\n      {url: `/umbraco/management/api/v1/item/webhook`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getWebhook = (\n    params?: GetWebhookParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedWebhookResponseModel>(\n      {url: `/umbraco/management/api/v1/webhook`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst postWebhook = (\n    createWebhookRequestModel: CreateWebhookRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/webhook`, method: 'POST',\n      headers: {'Content-Type': 'application/json', },\n      data: createWebhookRequestModel\n    },\n      options);\n    }\n  \nconst getWebhookById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<WebhookResponseModel>(\n      {url: `/umbraco/management/api/v1/webhook/${id}`, method: 'GET'\n    },\n      options);\n    }\n  \nconst deleteWebhookById = (\n    id: string,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/webhook/${id}`, method: 'DELETE'\n    },\n      options);\n    }\n  \nconst putWebhookById = (\n    id: string,\n    updateWebhookRequestModel: UpdateWebhookRequestModel,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<void>(\n      {url: `/umbraco/management/api/v1/webhook/${id}`, method: 'PUT',\n      headers: {'Content-Type': 'application/json', },\n      data: updateWebhookRequestModel\n    },\n      options);\n    }\n  \nconst getWebhookByIdLogs = (\n    id: string,\n    params?: GetWebhookByIdLogsParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedWebhookLogResponseModel>(\n      {url: `/umbraco/management/api/v1/webhook/${id}/logs`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getWebhookEvents = (\n    params?: GetWebhookEventsParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedWebhookEventModel>(\n      {url: `/umbraco/management/api/v1/webhook/events`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nconst getWebhookLogs = (\n    params?: GetWebhookLogsParams,\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\n      return UmbracoManagementClient<PagedWebhookLogResponseModel>(\n      {url: `/umbraco/management/api/v1/webhook/logs`, method: 'GET',\n        params\n    },\n      options);\n    }\n  \nreturn {getCulture,postDataType,getDataTypeById,deleteDataTypeById,putDataTypeById,postDataTypeByIdCopy,getDataTypeByIdIsUsed,putDataTypeByIdMove,getDataTypeByIdReferences,getDataTypeConfiguration,postDataTypeFolder,getDataTypeFolderById,deleteDataTypeFolderById,putDataTypeFolderById,getFilterDataType,getItemDataType,getItemDataTypeSearch,getTreeDataTypeAncestors,getTreeDataTypeChildren,getTreeDataTypeRoot,getDictionary,postDictionary,getDictionaryById,deleteDictionaryById,putDictionaryById,getDictionaryByIdExport,putDictionaryByIdMove,postDictionaryImport,getItemDictionary,getTreeDictionaryAncestors,getTreeDictionaryChildren,getTreeDictionaryRoot,postDocumentBlueprint,getDocumentBlueprintById,deleteDocumentBlueprintById,putDocumentBlueprintById,putDocumentBlueprintByIdMove,postDocumentBlueprintFolder,getDocumentBlueprintFolderById,deleteDocumentBlueprintFolderById,putDocumentBlueprintFolderById,postDocumentBlueprintFromDocument,getItemDocumentBlueprint,getTreeDocumentBlueprintAncestors,getTreeDocumentBlueprintChildren,getTreeDocumentBlueprintRoot,postDocumentType,getDocumentTypeById,deleteDocumentTypeById,putDocumentTypeById,getDocumentTypeByIdAllowedChildren,getDocumentTypeByIdBlueprint,getDocumentTypeByIdCompositionReferences,postDocumentTypeByIdCopy,getDocumentTypeByIdExport,putDocumentTypeByIdImport,putDocumentTypeByIdMove,getDocumentTypeAllowedAtRoot,postDocumentTypeAvailableCompositions,getDocumentTypeConfiguration,postDocumentTypeFolder,getDocumentTypeFolderById,deleteDocumentTypeFolderById,putDocumentTypeFolderById,postDocumentTypeImport,getItemDocumentType,getItemDocumentTypeSearch,getTreeDocumentTypeAncestors,getTreeDocumentTypeChildren,getTreeDocumentTypeRoot,getDocumentVersion,getDocumentVersionById,putDocumentVersionByIdPreventCleanup,postDocumentVersionByIdRollback,getCollectionDocumentById,postDocument,getDocumentById,deleteDocumentById,putDocumentById,getDocumentByIdAuditLog,postDocumentByIdCopy,getDocumentByIdDomains,putDocumentByIdDomains,putDocumentByIdMove,putDocumentByIdMoveToRecycleBin,getDocumentByIdNotifications,putDocumentByIdNotifications,postDocumentByIdPublicAccess,deleteDocumentByIdPublicAccess,getDocumentByIdPublicAccess,putDocumentByIdPublicAccess,putDocumentByIdPublish,putDocumentByIdPublishWithDescendants,getDocumentByIdPublished,getDocumentByIdReferencedBy,getDocumentByIdReferencedDescendants,putDocumentByIdUnpublish,putDocumentByIdValidate,putUmbracoManagementApiV11DocumentByIdValidate11,getDocumentAreReferenced,getDocumentConfiguration,putDocumentSort,getDocumentUrls,postDocumentValidate,getItemDocument,getItemDocumentSearch,deleteRecycleBinDocument,deleteRecycleBinDocumentById,getRecycleBinDocumentByIdOriginalParent,putRecycleBinDocumentByIdRestore,getRecycleBinDocumentChildren,getRecycleBinDocumentRoot,getTreeDocumentAncestors,getTreeDocumentChildren,getTreeDocumentRoot,postDynamicRootQuery,getDynamicRootSteps,getHealthCheckGroup,getHealthCheckGroupByName,postHealthCheckGroupByNameCheck,postHealthCheckExecuteAction,getHelp,getImagingResizeUrls,getImportAnalyze,getIndexer,getIndexerByIndexName,postIndexerByIndexNameRebuild,getInstallSettings,postInstallSetup,postInstallValidateDatabase,getItemLanguage,getItemLanguageDefault,getLanguage,postLanguage,getLanguageByIsoCode,deleteLanguageByIsoCode,putLanguageByIsoCode,getLogViewerLevel,getLogViewerLevelCount,getLogViewerLog,getLogViewerMessageTemplate,getLogViewerSavedSearch,postLogViewerSavedSearch,getLogViewerSavedSearchByName,deleteLogViewerSavedSearchByName,getLogViewerValidateLogsSize,getManifestManifest,getManifestManifestPrivate,getManifestManifestPublic,getItemMediaType,getItemMediaTypeAllowed,getItemMediaTypeFolders,getItemMediaTypeSearch,postMediaType,getMediaTypeById,deleteMediaTypeById,putMediaTypeById,getMediaTypeByIdAllowedChildren,getMediaTypeByIdCompositionReferences,postMediaTypeByIdCopy,getMediaTypeByIdExport,putMediaTypeByIdImport,putMediaTypeByIdMove,getMediaTypeAllowedAtRoot,postMediaTypeAvailableCompositions,getMediaTypeConfiguration,postMediaTypeFolder,getMediaTypeFolderById,deleteMediaTypeFolderById,putMediaTypeFolderById,postMediaTypeImport,getTreeMediaTypeAncestors,getTreeMediaTypeChildren,getTreeMediaTypeRoot,getCollectionMedia,getItemMedia,getItemMediaSearch,postMedia,getMediaById,deleteMediaById,putMediaById,getMediaByIdAuditLog,putMediaByIdMove,putMediaByIdMoveToRecycleBin,getMediaByIdReferencedBy,getMediaByIdReferencedDescendants,putMediaByIdValidate,getMediaAreReferenced,getMediaConfiguration,putMediaSort,getMediaUrls,postMediaValidate,deleteRecycleBinMedia,deleteRecycleBinMediaById,getRecycleBinMediaByIdOriginalParent,putRecycleBinMediaByIdRestore,getRecycleBinMediaChildren,getRecycleBinMediaRoot,getTreeMediaAncestors,getTreeMediaChildren,getTreeMediaRoot,getItemMemberGroup,getMemberGroup,postMemberGroup,getMemberGroupById,deleteMemberGroupById,putMemberGroupById,getTreeMemberGroupRoot,getItemMemberType,getItemMemberTypeSearch,postMemberType,getMemberTypeById,deleteMemberTypeById,putMemberTypeById,getMemberTypeByIdCompositionReferences,postMemberTypeByIdCopy,postMemberTypeAvailableCompositions,getMemberTypeConfiguration,getTreeMemberTypeRoot,getFilterMember,getItemMember,getItemMemberSearch,postMember,getMemberById,deleteMemberById,putMemberById,putMemberByIdValidate,getMemberConfiguration,postMemberValidate,postModelsBuilderBuild,getModelsBuilderDashboard,getModelsBuilderStatus,getObjectTypes,getOembedQuery,postPackageByNameRunMigration,getPackageConfiguration,getPackageCreated,postPackageCreated,getPackageCreatedById,deletePackageCreatedById,putPackageCreatedById,getPackageCreatedByIdDownload,getPackageMigrationStatus,getItemPartialView,postPartialView,getPartialViewByPath,deletePartialViewByPath,putPartialViewByPath,putPartialViewByPathRename,postPartialViewFolder,getPartialViewFolderByPath,deletePartialViewFolderByPath,getPartialViewSnippet,getPartialViewSnippetById,getTreePartialViewAncestors,getTreePartialViewChildren,getTreePartialViewRoot,deletePreview,postPreview,getProfilingStatus,putProfilingStatus,getPropertyTypeIsUsed,postPublishedCacheCollect,postPublishedCacheRebuild,postPublishedCacheReload,getPublishedCacheStatus,getRedirectManagement,getRedirectManagementById,deleteRedirectManagementById,getRedirectManagementStatus,postRedirectManagementStatus,getItemRelationType,getRelationType,getRelationTypeById,getRelationByRelationTypeId,getItemScript,postScript,getScriptByPath,deleteScriptByPath,putScriptByPath,putScriptByPathRename,postScriptFolder,getScriptFolderByPath,deleteScriptFolderByPath,getTreeScriptAncestors,getTreeScriptChildren,getTreeScriptRoot,getSearcher,getSearcherBySearcherNameQuery,getSecurityConfiguration,postSecurityForgotPassword,postSecurityForgotPasswordReset,postSecurityForgotPasswordVerify,getSegment,getServerConfiguration,getServerInformation,getServerStatus,getServerTroubleshooting,getServerUpgradeCheck,getItemStaticFile,getTreeStaticFileAncestors,getTreeStaticFileChildren,getTreeStaticFileRoot,getItemStylesheet,postStylesheet,getStylesheetByPath,deleteStylesheetByPath,putStylesheetByPath,putStylesheetByPathRename,postStylesheetFolder,getStylesheetFolderByPath,deleteStylesheetFolderByPath,getTreeStylesheetAncestors,getTreeStylesheetChildren,getTreeStylesheetRoot,getTag,getTelemetry,getTelemetryLevel,postTelemetryLevel,getItemTemplate,getItemTemplateSearch,postTemplate,getTemplateById,deleteTemplateById,putTemplateById,getTemplateConfiguration,postTemplateQueryExecute,getTemplateQuerySettings,getTreeTemplateAncestors,getTreeTemplateChildren,getTreeTemplateRoot,postTemporaryFile,getTemporaryFileById,deleteTemporaryFileById,getTemporaryFileConfiguration,postUpgradeAuthorize,getUpgradeSettings,postUserData,getUserData,putUserData,getUserDataById,getFilterUserGroup,getItemUserGroup,deleteUserGroup,postUserGroup,getUserGroup,getUserGroupById,deleteUserGroupById,putUserGroupById,deleteUserGroupByIdUsers,postUserGroupByIdUsers,getFilterUser,getItemUser,postUser,deleteUser,getUser,getUserById,deleteUserById,putUserById,getUserById2fa,deleteUserById2faByProviderName,getUserByIdCalculateStartNodes,postUserByIdChangePassword,postUserByIdClientCredentials,getUserByIdClientCredentials,deleteUserByIdClientCredentialsByClientId,postUserByIdResetPassword,deleteUserAvatarById,postUserAvatarById,getUserConfiguration,getUserCurrent,getUserCurrent2fa,deleteUserCurrent2faByProviderName,postUserCurrent2faByProviderName,getUserCurrent2faByProviderName,postUserCurrentAvatar,postUserCurrentChangePassword,getUserCurrentConfiguration,getUserCurrentLoginProviders,getUserCurrentPermissions,getUserCurrentPermissionsDocument,getUserCurrentPermissionsMedia,postUserDisable,postUserEnable,postUserInvite,postUserInviteCreatePassword,postUserInviteResend,postUserInviteVerify,postUserSetUserGroups,postUserUnlock,getItemWebhook,getWebhook,postWebhook,getWebhookById,deleteWebhookById,putWebhookById,getWebhookByIdLogs,getWebhookEvents,getWebhookLogs}};\nexport type GetCultureResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getCulture']>>>\nexport type PostDataTypeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDataType']>>>\nexport type GetDataTypeByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDataTypeById']>>>\nexport type DeleteDataTypeByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteDataTypeById']>>>\nexport type PutDataTypeByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDataTypeById']>>>\nexport type PostDataTypeByIdCopyResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDataTypeByIdCopy']>>>\nexport type GetDataTypeByIdIsUsedResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDataTypeByIdIsUsed']>>>\nexport type PutDataTypeByIdMoveResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDataTypeByIdMove']>>>\nexport type GetDataTypeByIdReferencesResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDataTypeByIdReferences']>>>\nexport type GetDataTypeConfigurationResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDataTypeConfiguration']>>>\nexport type PostDataTypeFolderResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDataTypeFolder']>>>\nexport type GetDataTypeFolderByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDataTypeFolderById']>>>\nexport type DeleteDataTypeFolderByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteDataTypeFolderById']>>>\nexport type PutDataTypeFolderByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDataTypeFolderById']>>>\nexport type GetFilterDataTypeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getFilterDataType']>>>\nexport type GetItemDataTypeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemDataType']>>>\nexport type GetItemDataTypeSearchResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemDataTypeSearch']>>>\nexport type GetTreeDataTypeAncestorsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeDataTypeAncestors']>>>\nexport type GetTreeDataTypeChildrenResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeDataTypeChildren']>>>\nexport type GetTreeDataTypeRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeDataTypeRoot']>>>\nexport type GetDictionaryResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDictionary']>>>\nexport type PostDictionaryResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDictionary']>>>\nexport type GetDictionaryByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDictionaryById']>>>\nexport type DeleteDictionaryByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteDictionaryById']>>>\nexport type PutDictionaryByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDictionaryById']>>>\nexport type GetDictionaryByIdExportResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDictionaryByIdExport']>>>\nexport type PutDictionaryByIdMoveResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDictionaryByIdMove']>>>\nexport type PostDictionaryImportResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDictionaryImport']>>>\nexport type GetItemDictionaryResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemDictionary']>>>\nexport type GetTreeDictionaryAncestorsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeDictionaryAncestors']>>>\nexport type GetTreeDictionaryChildrenResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeDictionaryChildren']>>>\nexport type GetTreeDictionaryRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeDictionaryRoot']>>>\nexport type PostDocumentBlueprintResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDocumentBlueprint']>>>\nexport type GetDocumentBlueprintByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentBlueprintById']>>>\nexport type DeleteDocumentBlueprintByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteDocumentBlueprintById']>>>\nexport type PutDocumentBlueprintByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentBlueprintById']>>>\nexport type PutDocumentBlueprintByIdMoveResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentBlueprintByIdMove']>>>\nexport type PostDocumentBlueprintFolderResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDocumentBlueprintFolder']>>>\nexport type GetDocumentBlueprintFolderByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentBlueprintFolderById']>>>\nexport type DeleteDocumentBlueprintFolderByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteDocumentBlueprintFolderById']>>>\nexport type PutDocumentBlueprintFolderByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentBlueprintFolderById']>>>\nexport type PostDocumentBlueprintFromDocumentResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDocumentBlueprintFromDocument']>>>\nexport type GetItemDocumentBlueprintResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemDocumentBlueprint']>>>\nexport type GetTreeDocumentBlueprintAncestorsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeDocumentBlueprintAncestors']>>>\nexport type GetTreeDocumentBlueprintChildrenResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeDocumentBlueprintChildren']>>>\nexport type GetTreeDocumentBlueprintRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeDocumentBlueprintRoot']>>>\nexport type PostDocumentTypeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDocumentType']>>>\nexport type GetDocumentTypeByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentTypeById']>>>\nexport type DeleteDocumentTypeByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteDocumentTypeById']>>>\nexport type PutDocumentTypeByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentTypeById']>>>\nexport type GetDocumentTypeByIdAllowedChildrenResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentTypeByIdAllowedChildren']>>>\nexport type GetDocumentTypeByIdBlueprintResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentTypeByIdBlueprint']>>>\nexport type GetDocumentTypeByIdCompositionReferencesResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentTypeByIdCompositionReferences']>>>\nexport type PostDocumentTypeByIdCopyResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDocumentTypeByIdCopy']>>>\nexport type GetDocumentTypeByIdExportResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentTypeByIdExport']>>>\nexport type PutDocumentTypeByIdImportResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentTypeByIdImport']>>>\nexport type PutDocumentTypeByIdMoveResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentTypeByIdMove']>>>\nexport type GetDocumentTypeAllowedAtRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentTypeAllowedAtRoot']>>>\nexport type PostDocumentTypeAvailableCompositionsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDocumentTypeAvailableCompositions']>>>\nexport type GetDocumentTypeConfigurationResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentTypeConfiguration']>>>\nexport type PostDocumentTypeFolderResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDocumentTypeFolder']>>>\nexport type GetDocumentTypeFolderByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentTypeFolderById']>>>\nexport type DeleteDocumentTypeFolderByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteDocumentTypeFolderById']>>>\nexport type PutDocumentTypeFolderByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentTypeFolderById']>>>\nexport type PostDocumentTypeImportResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDocumentTypeImport']>>>\nexport type GetItemDocumentTypeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemDocumentType']>>>\nexport type GetItemDocumentTypeSearchResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemDocumentTypeSearch']>>>\nexport type GetTreeDocumentTypeAncestorsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeDocumentTypeAncestors']>>>\nexport type GetTreeDocumentTypeChildrenResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeDocumentTypeChildren']>>>\nexport type GetTreeDocumentTypeRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeDocumentTypeRoot']>>>\nexport type GetDocumentVersionResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentVersion']>>>\nexport type GetDocumentVersionByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentVersionById']>>>\nexport type PutDocumentVersionByIdPreventCleanupResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentVersionByIdPreventCleanup']>>>\nexport type PostDocumentVersionByIdRollbackResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDocumentVersionByIdRollback']>>>\nexport type GetCollectionDocumentByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getCollectionDocumentById']>>>\nexport type PostDocumentResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDocument']>>>\nexport type GetDocumentByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentById']>>>\nexport type DeleteDocumentByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteDocumentById']>>>\nexport type PutDocumentByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentById']>>>\nexport type GetDocumentByIdAuditLogResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentByIdAuditLog']>>>\nexport type PostDocumentByIdCopyResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDocumentByIdCopy']>>>\nexport type GetDocumentByIdDomainsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentByIdDomains']>>>\nexport type PutDocumentByIdDomainsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentByIdDomains']>>>\nexport type PutDocumentByIdMoveResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentByIdMove']>>>\nexport type PutDocumentByIdMoveToRecycleBinResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentByIdMoveToRecycleBin']>>>\nexport type GetDocumentByIdNotificationsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentByIdNotifications']>>>\nexport type PutDocumentByIdNotificationsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentByIdNotifications']>>>\nexport type PostDocumentByIdPublicAccessResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDocumentByIdPublicAccess']>>>\nexport type DeleteDocumentByIdPublicAccessResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteDocumentByIdPublicAccess']>>>\nexport type GetDocumentByIdPublicAccessResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentByIdPublicAccess']>>>\nexport type PutDocumentByIdPublicAccessResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentByIdPublicAccess']>>>\nexport type PutDocumentByIdPublishResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentByIdPublish']>>>\nexport type PutDocumentByIdPublishWithDescendantsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentByIdPublishWithDescendants']>>>\nexport type GetDocumentByIdPublishedResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentByIdPublished']>>>\nexport type GetDocumentByIdReferencedByResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentByIdReferencedBy']>>>\nexport type GetDocumentByIdReferencedDescendantsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentByIdReferencedDescendants']>>>\nexport type PutDocumentByIdUnpublishResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentByIdUnpublish']>>>\nexport type PutDocumentByIdValidateResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentByIdValidate']>>>\nexport type PutUmbracoManagementApiV11DocumentByIdValidate11Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putUmbracoManagementApiV11DocumentByIdValidate11']>>>\nexport type GetDocumentAreReferencedResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentAreReferenced']>>>\nexport type GetDocumentConfigurationResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentConfiguration']>>>\nexport type PutDocumentSortResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentSort']>>>\nexport type GetDocumentUrlsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentUrls']>>>\nexport type PostDocumentValidateResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDocumentValidate']>>>\nexport type GetItemDocumentResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemDocument']>>>\nexport type GetItemDocumentSearchResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemDocumentSearch']>>>\nexport type DeleteRecycleBinDocumentResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteRecycleBinDocument']>>>\nexport type DeleteRecycleBinDocumentByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteRecycleBinDocumentById']>>>\nexport type GetRecycleBinDocumentByIdOriginalParentResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getRecycleBinDocumentByIdOriginalParent']>>>\nexport type PutRecycleBinDocumentByIdRestoreResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putRecycleBinDocumentByIdRestore']>>>\nexport type GetRecycleBinDocumentChildrenResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getRecycleBinDocumentChildren']>>>\nexport type GetRecycleBinDocumentRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getRecycleBinDocumentRoot']>>>\nexport type GetTreeDocumentAncestorsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeDocumentAncestors']>>>\nexport type GetTreeDocumentChildrenResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeDocumentChildren']>>>\nexport type GetTreeDocumentRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeDocumentRoot']>>>\nexport type PostDynamicRootQueryResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDynamicRootQuery']>>>\nexport type GetDynamicRootStepsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDynamicRootSteps']>>>\nexport type GetHealthCheckGroupResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getHealthCheckGroup']>>>\nexport type GetHealthCheckGroupByNameResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getHealthCheckGroupByName']>>>\nexport type PostHealthCheckGroupByNameCheckResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postHealthCheckGroupByNameCheck']>>>\nexport type PostHealthCheckExecuteActionResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postHealthCheckExecuteAction']>>>\nexport type GetHelpResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getHelp']>>>\nexport type GetImagingResizeUrlsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getImagingResizeUrls']>>>\nexport type GetImportAnalyzeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getImportAnalyze']>>>\nexport type GetIndexerResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getIndexer']>>>\nexport type GetIndexerByIndexNameResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getIndexerByIndexName']>>>\nexport type PostIndexerByIndexNameRebuildResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postIndexerByIndexNameRebuild']>>>\nexport type GetInstallSettingsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getInstallSettings']>>>\nexport type PostInstallSetupResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postInstallSetup']>>>\nexport type PostInstallValidateDatabaseResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postInstallValidateDatabase']>>>\nexport type GetItemLanguageResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemLanguage']>>>\nexport type GetItemLanguageDefaultResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemLanguageDefault']>>>\nexport type GetLanguageResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getLanguage']>>>\nexport type PostLanguageResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postLanguage']>>>\nexport type GetLanguageByIsoCodeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getLanguageByIsoCode']>>>\nexport type DeleteLanguageByIsoCodeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteLanguageByIsoCode']>>>\nexport type PutLanguageByIsoCodeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putLanguageByIsoCode']>>>\nexport type GetLogViewerLevelResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getLogViewerLevel']>>>\nexport type GetLogViewerLevelCountResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getLogViewerLevelCount']>>>\nexport type GetLogViewerLogResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getLogViewerLog']>>>\nexport type GetLogViewerMessageTemplateResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getLogViewerMessageTemplate']>>>\nexport type GetLogViewerSavedSearchResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getLogViewerSavedSearch']>>>\nexport type PostLogViewerSavedSearchResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postLogViewerSavedSearch']>>>\nexport type GetLogViewerSavedSearchByNameResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getLogViewerSavedSearchByName']>>>\nexport type DeleteLogViewerSavedSearchByNameResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteLogViewerSavedSearchByName']>>>\nexport type GetLogViewerValidateLogsSizeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getLogViewerValidateLogsSize']>>>\nexport type GetManifestManifestResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getManifestManifest']>>>\nexport type GetManifestManifestPrivateResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getManifestManifestPrivate']>>>\nexport type GetManifestManifestPublicResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getManifestManifestPublic']>>>\nexport type GetItemMediaTypeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemMediaType']>>>\nexport type GetItemMediaTypeAllowedResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemMediaTypeAllowed']>>>\nexport type GetItemMediaTypeFoldersResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemMediaTypeFolders']>>>\nexport type GetItemMediaTypeSearchResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemMediaTypeSearch']>>>\nexport type PostMediaTypeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postMediaType']>>>\nexport type GetMediaTypeByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMediaTypeById']>>>\nexport type DeleteMediaTypeByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteMediaTypeById']>>>\nexport type PutMediaTypeByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putMediaTypeById']>>>\nexport type GetMediaTypeByIdAllowedChildrenResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMediaTypeByIdAllowedChildren']>>>\nexport type GetMediaTypeByIdCompositionReferencesResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMediaTypeByIdCompositionReferences']>>>\nexport type PostMediaTypeByIdCopyResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postMediaTypeByIdCopy']>>>\nexport type GetMediaTypeByIdExportResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMediaTypeByIdExport']>>>\nexport type PutMediaTypeByIdImportResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putMediaTypeByIdImport']>>>\nexport type PutMediaTypeByIdMoveResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putMediaTypeByIdMove']>>>\nexport type GetMediaTypeAllowedAtRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMediaTypeAllowedAtRoot']>>>\nexport type PostMediaTypeAvailableCompositionsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postMediaTypeAvailableCompositions']>>>\nexport type GetMediaTypeConfigurationResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMediaTypeConfiguration']>>>\nexport type PostMediaTypeFolderResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postMediaTypeFolder']>>>\nexport type GetMediaTypeFolderByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMediaTypeFolderById']>>>\nexport type DeleteMediaTypeFolderByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteMediaTypeFolderById']>>>\nexport type PutMediaTypeFolderByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putMediaTypeFolderById']>>>\nexport type PostMediaTypeImportResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postMediaTypeImport']>>>\nexport type GetTreeMediaTypeAncestorsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeMediaTypeAncestors']>>>\nexport type GetTreeMediaTypeChildrenResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeMediaTypeChildren']>>>\nexport type GetTreeMediaTypeRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeMediaTypeRoot']>>>\nexport type GetCollectionMediaResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getCollectionMedia']>>>\nexport type GetItemMediaResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemMedia']>>>\nexport type GetItemMediaSearchResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemMediaSearch']>>>\nexport type PostMediaResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postMedia']>>>\nexport type GetMediaByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMediaById']>>>\nexport type DeleteMediaByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteMediaById']>>>\nexport type PutMediaByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putMediaById']>>>\nexport type GetMediaByIdAuditLogResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMediaByIdAuditLog']>>>\nexport type PutMediaByIdMoveResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putMediaByIdMove']>>>\nexport type PutMediaByIdMoveToRecycleBinResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putMediaByIdMoveToRecycleBin']>>>\nexport type GetMediaByIdReferencedByResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMediaByIdReferencedBy']>>>\nexport type GetMediaByIdReferencedDescendantsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMediaByIdReferencedDescendants']>>>\nexport type PutMediaByIdValidateResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putMediaByIdValidate']>>>\nexport type GetMediaAreReferencedResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMediaAreReferenced']>>>\nexport type GetMediaConfigurationResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMediaConfiguration']>>>\nexport type PutMediaSortResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putMediaSort']>>>\nexport type GetMediaUrlsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMediaUrls']>>>\nexport type PostMediaValidateResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postMediaValidate']>>>\nexport type DeleteRecycleBinMediaResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteRecycleBinMedia']>>>\nexport type DeleteRecycleBinMediaByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteRecycleBinMediaById']>>>\nexport type GetRecycleBinMediaByIdOriginalParentResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getRecycleBinMediaByIdOriginalParent']>>>\nexport type PutRecycleBinMediaByIdRestoreResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putRecycleBinMediaByIdRestore']>>>\nexport type GetRecycleBinMediaChildrenResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getRecycleBinMediaChildren']>>>\nexport type GetRecycleBinMediaRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getRecycleBinMediaRoot']>>>\nexport type GetTreeMediaAncestorsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeMediaAncestors']>>>\nexport type GetTreeMediaChildrenResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeMediaChildren']>>>\nexport type GetTreeMediaRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeMediaRoot']>>>\nexport type GetItemMemberGroupResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemMemberGroup']>>>\nexport type GetMemberGroupResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMemberGroup']>>>\nexport type PostMemberGroupResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postMemberGroup']>>>\nexport type GetMemberGroupByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMemberGroupById']>>>\nexport type DeleteMemberGroupByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteMemberGroupById']>>>\nexport type PutMemberGroupByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putMemberGroupById']>>>\nexport type GetTreeMemberGroupRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeMemberGroupRoot']>>>\nexport type GetItemMemberTypeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemMemberType']>>>\nexport type GetItemMemberTypeSearchResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemMemberTypeSearch']>>>\nexport type PostMemberTypeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postMemberType']>>>\nexport type GetMemberTypeByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMemberTypeById']>>>\nexport type DeleteMemberTypeByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteMemberTypeById']>>>\nexport type PutMemberTypeByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putMemberTypeById']>>>\nexport type GetMemberTypeByIdCompositionReferencesResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMemberTypeByIdCompositionReferences']>>>\nexport type PostMemberTypeByIdCopyResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postMemberTypeByIdCopy']>>>\nexport type PostMemberTypeAvailableCompositionsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postMemberTypeAvailableCompositions']>>>\nexport type GetMemberTypeConfigurationResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMemberTypeConfiguration']>>>\nexport type GetTreeMemberTypeRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeMemberTypeRoot']>>>\nexport type GetFilterMemberResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getFilterMember']>>>\nexport type GetItemMemberResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemMember']>>>\nexport type GetItemMemberSearchResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemMemberSearch']>>>\nexport type PostMemberResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postMember']>>>\nexport type GetMemberByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMemberById']>>>\nexport type DeleteMemberByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteMemberById']>>>\nexport type PutMemberByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putMemberById']>>>\nexport type PutMemberByIdValidateResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putMemberByIdValidate']>>>\nexport type GetMemberConfigurationResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMemberConfiguration']>>>\nexport type PostMemberValidateResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postMemberValidate']>>>\nexport type PostModelsBuilderBuildResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postModelsBuilderBuild']>>>\nexport type GetModelsBuilderDashboardResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getModelsBuilderDashboard']>>>\nexport type GetModelsBuilderStatusResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getModelsBuilderStatus']>>>\nexport type GetObjectTypesResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getObjectTypes']>>>\nexport type GetOembedQueryResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getOembedQuery']>>>\nexport type PostPackageByNameRunMigrationResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postPackageByNameRunMigration']>>>\nexport type GetPackageConfigurationResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getPackageConfiguration']>>>\nexport type GetPackageCreatedResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getPackageCreated']>>>\nexport type PostPackageCreatedResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postPackageCreated']>>>\nexport type GetPackageCreatedByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getPackageCreatedById']>>>\nexport type DeletePackageCreatedByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deletePackageCreatedById']>>>\nexport type PutPackageCreatedByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putPackageCreatedById']>>>\nexport type GetPackageCreatedByIdDownloadResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getPackageCreatedByIdDownload']>>>\nexport type GetPackageMigrationStatusResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getPackageMigrationStatus']>>>\nexport type GetItemPartialViewResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemPartialView']>>>\nexport type PostPartialViewResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postPartialView']>>>\nexport type GetPartialViewByPathResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getPartialViewByPath']>>>\nexport type DeletePartialViewByPathResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deletePartialViewByPath']>>>\nexport type PutPartialViewByPathResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putPartialViewByPath']>>>\nexport type PutPartialViewByPathRenameResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putPartialViewByPathRename']>>>\nexport type PostPartialViewFolderResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postPartialViewFolder']>>>\nexport type GetPartialViewFolderByPathResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getPartialViewFolderByPath']>>>\nexport type DeletePartialViewFolderByPathResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deletePartialViewFolderByPath']>>>\nexport type GetPartialViewSnippetResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getPartialViewSnippet']>>>\nexport type GetPartialViewSnippetByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getPartialViewSnippetById']>>>\nexport type GetTreePartialViewAncestorsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreePartialViewAncestors']>>>\nexport type GetTreePartialViewChildrenResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreePartialViewChildren']>>>\nexport type GetTreePartialViewRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreePartialViewRoot']>>>\nexport type DeletePreviewResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deletePreview']>>>\nexport type PostPreviewResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postPreview']>>>\nexport type GetProfilingStatusResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getProfilingStatus']>>>\nexport type PutProfilingStatusResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putProfilingStatus']>>>\nexport type GetPropertyTypeIsUsedResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getPropertyTypeIsUsed']>>>\nexport type PostPublishedCacheCollectResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postPublishedCacheCollect']>>>\nexport type PostPublishedCacheRebuildResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postPublishedCacheRebuild']>>>\nexport type PostPublishedCacheReloadResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postPublishedCacheReload']>>>\nexport type GetPublishedCacheStatusResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getPublishedCacheStatus']>>>\nexport type GetRedirectManagementResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getRedirectManagement']>>>\nexport type GetRedirectManagementByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getRedirectManagementById']>>>\nexport type DeleteRedirectManagementByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteRedirectManagementById']>>>\nexport type GetRedirectManagementStatusResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getRedirectManagementStatus']>>>\nexport type PostRedirectManagementStatusResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postRedirectManagementStatus']>>>\nexport type GetItemRelationTypeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemRelationType']>>>\nexport type GetRelationTypeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getRelationType']>>>\nexport type GetRelationTypeByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getRelationTypeById']>>>\nexport type GetRelationByRelationTypeIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getRelationByRelationTypeId']>>>\nexport type GetItemScriptResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemScript']>>>\nexport type PostScriptResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postScript']>>>\nexport type GetScriptByPathResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getScriptByPath']>>>\nexport type DeleteScriptByPathResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteScriptByPath']>>>\nexport type PutScriptByPathResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putScriptByPath']>>>\nexport type PutScriptByPathRenameResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putScriptByPathRename']>>>\nexport type PostScriptFolderResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postScriptFolder']>>>\nexport type GetScriptFolderByPathResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getScriptFolderByPath']>>>\nexport type DeleteScriptFolderByPathResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteScriptFolderByPath']>>>\nexport type GetTreeScriptAncestorsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeScriptAncestors']>>>\nexport type GetTreeScriptChildrenResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeScriptChildren']>>>\nexport type GetTreeScriptRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeScriptRoot']>>>\nexport type GetSearcherResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getSearcher']>>>\nexport type GetSearcherBySearcherNameQueryResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getSearcherBySearcherNameQuery']>>>\nexport type GetSecurityConfigurationResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getSecurityConfiguration']>>>\nexport type PostSecurityForgotPasswordResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postSecurityForgotPassword']>>>\nexport type PostSecurityForgotPasswordResetResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postSecurityForgotPasswordReset']>>>\nexport type PostSecurityForgotPasswordVerifyResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postSecurityForgotPasswordVerify']>>>\nexport type GetSegmentResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getSegment']>>>\nexport type GetServerConfigurationResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getServerConfiguration']>>>\nexport type GetServerInformationResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getServerInformation']>>>\nexport type GetServerStatusResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getServerStatus']>>>\nexport type GetServerTroubleshootingResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getServerTroubleshooting']>>>\nexport type GetServerUpgradeCheckResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getServerUpgradeCheck']>>>\nexport type GetItemStaticFileResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemStaticFile']>>>\nexport type GetTreeStaticFileAncestorsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeStaticFileAncestors']>>>\nexport type GetTreeStaticFileChildrenResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeStaticFileChildren']>>>\nexport type GetTreeStaticFileRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeStaticFileRoot']>>>\nexport type GetItemStylesheetResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemStylesheet']>>>\nexport type PostStylesheetResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postStylesheet']>>>\nexport type GetStylesheetByPathResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getStylesheetByPath']>>>\nexport type DeleteStylesheetByPathResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteStylesheetByPath']>>>\nexport type PutStylesheetByPathResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putStylesheetByPath']>>>\nexport type PutStylesheetByPathRenameResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putStylesheetByPathRename']>>>\nexport type PostStylesheetFolderResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postStylesheetFolder']>>>\nexport type GetStylesheetFolderByPathResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getStylesheetFolderByPath']>>>\nexport type DeleteStylesheetFolderByPathResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteStylesheetFolderByPath']>>>\nexport type GetTreeStylesheetAncestorsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeStylesheetAncestors']>>>\nexport type GetTreeStylesheetChildrenResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeStylesheetChildren']>>>\nexport type GetTreeStylesheetRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeStylesheetRoot']>>>\nexport type GetTagResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTag']>>>\nexport type GetTelemetryResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTelemetry']>>>\nexport type GetTelemetryLevelResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTelemetryLevel']>>>\nexport type PostTelemetryLevelResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postTelemetryLevel']>>>\nexport type GetItemTemplateResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemTemplate']>>>\nexport type GetItemTemplateSearchResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemTemplateSearch']>>>\nexport type PostTemplateResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postTemplate']>>>\nexport type GetTemplateByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTemplateById']>>>\nexport type DeleteTemplateByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteTemplateById']>>>\nexport type PutTemplateByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putTemplateById']>>>\nexport type GetTemplateConfigurationResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTemplateConfiguration']>>>\nexport type PostTemplateQueryExecuteResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postTemplateQueryExecute']>>>\nexport type GetTemplateQuerySettingsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTemplateQuerySettings']>>>\nexport type GetTreeTemplateAncestorsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeTemplateAncestors']>>>\nexport type GetTreeTemplateChildrenResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeTemplateChildren']>>>\nexport type GetTreeTemplateRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeTemplateRoot']>>>\nexport type PostTemporaryFileResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postTemporaryFile']>>>\nexport type GetTemporaryFileByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTemporaryFileById']>>>\nexport type DeleteTemporaryFileByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteTemporaryFileById']>>>\nexport type GetTemporaryFileConfigurationResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTemporaryFileConfiguration']>>>\nexport type PostUpgradeAuthorizeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUpgradeAuthorize']>>>\nexport type GetUpgradeSettingsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUpgradeSettings']>>>\nexport type PostUserDataResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserData']>>>\nexport type GetUserDataResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUserData']>>>\nexport type PutUserDataResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putUserData']>>>\nexport type GetUserDataByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUserDataById']>>>\nexport type GetFilterUserGroupResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getFilterUserGroup']>>>\nexport type GetItemUserGroupResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemUserGroup']>>>\nexport type DeleteUserGroupResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteUserGroup']>>>\nexport type PostUserGroupResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserGroup']>>>\nexport type GetUserGroupResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUserGroup']>>>\nexport type GetUserGroupByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUserGroupById']>>>\nexport type DeleteUserGroupByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteUserGroupById']>>>\nexport type PutUserGroupByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putUserGroupById']>>>\nexport type DeleteUserGroupByIdUsersResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteUserGroupByIdUsers']>>>\nexport type PostUserGroupByIdUsersResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserGroupByIdUsers']>>>\nexport type GetFilterUserResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getFilterUser']>>>\nexport type GetItemUserResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemUser']>>>\nexport type PostUserResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUser']>>>\nexport type DeleteUserResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteUser']>>>\nexport type GetUserResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUser']>>>\nexport type GetUserByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUserById']>>>\nexport type DeleteUserByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteUserById']>>>\nexport type PutUserByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putUserById']>>>\nexport type GetUserById2faResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUserById2fa']>>>\nexport type DeleteUserById2faByProviderNameResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteUserById2faByProviderName']>>>\nexport type GetUserByIdCalculateStartNodesResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUserByIdCalculateStartNodes']>>>\nexport type PostUserByIdChangePasswordResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserByIdChangePassword']>>>\nexport type PostUserByIdClientCredentialsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserByIdClientCredentials']>>>\nexport type GetUserByIdClientCredentialsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUserByIdClientCredentials']>>>\nexport type DeleteUserByIdClientCredentialsByClientIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteUserByIdClientCredentialsByClientId']>>>\nexport type PostUserByIdResetPasswordResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserByIdResetPassword']>>>\nexport type DeleteUserAvatarByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteUserAvatarById']>>>\nexport type PostUserAvatarByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserAvatarById']>>>\nexport type GetUserConfigurationResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUserConfiguration']>>>\nexport type GetUserCurrentResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUserCurrent']>>>\nexport type GetUserCurrent2faResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUserCurrent2fa']>>>\nexport type DeleteUserCurrent2faByProviderNameResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteUserCurrent2faByProviderName']>>>\nexport type PostUserCurrent2faByProviderNameResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserCurrent2faByProviderName']>>>\nexport type GetUserCurrent2faByProviderNameResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUserCurrent2faByProviderName']>>>\nexport type PostUserCurrentAvatarResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserCurrentAvatar']>>>\nexport type PostUserCurrentChangePasswordResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserCurrentChangePassword']>>>\nexport type GetUserCurrentConfigurationResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUserCurrentConfiguration']>>>\nexport type GetUserCurrentLoginProvidersResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUserCurrentLoginProviders']>>>\nexport type GetUserCurrentPermissionsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUserCurrentPermissions']>>>\nexport type GetUserCurrentPermissionsDocumentResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUserCurrentPermissionsDocument']>>>\nexport type GetUserCurrentPermissionsMediaResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUserCurrentPermissionsMedia']>>>\nexport type PostUserDisableResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserDisable']>>>\nexport type PostUserEnableResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserEnable']>>>\nexport type PostUserInviteResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserInvite']>>>\nexport type PostUserInviteCreatePasswordResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserInviteCreatePassword']>>>\nexport type PostUserInviteResendResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserInviteResend']>>>\nexport type PostUserInviteVerifyResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserInviteVerify']>>>\nexport type PostUserSetUserGroupsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserSetUserGroups']>>>\nexport type PostUserUnlockResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserUnlock']>>>\nexport type GetItemWebhookResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemWebhook']>>>\nexport type GetWebhookResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getWebhook']>>>\nexport type PostWebhookResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postWebhook']>>>\nexport type GetWebhookByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getWebhookById']>>>\nexport type DeleteWebhookByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteWebhookById']>>>\nexport type PutWebhookByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putWebhookById']>>>\nexport type GetWebhookByIdLogsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getWebhookByIdLogs']>>>\nexport type GetWebhookEventsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getWebhookEvents']>>>\nexport type GetWebhookLogsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getWebhookLogs']>>>\n","import { getUmbracoManagementAPI } from \"../api/umbraco/management/umbracoManagementAPI.js\";\n\nexport class UmbracoManagementClient {\n  private static instance: ReturnType<typeof getUmbracoManagementAPI> | null =\n    null;\n\n  private constructor() {}\n\n  public static getClient() {\n    if (this.instance === null) {\n      this.instance = getUmbracoManagementAPI();\n    }\n    return this.instance;\n  }\n}\n","import { ZodRawShape } from \"zod\";\nimport { ToolCallback } from \"@modelcontextprotocol/sdk/server/mcp.js\";\nimport { ToolDefinition } from \"../types/tool-definition.js\";\n\nexport const CreateUmbracoTool =\n  <Args extends undefined | ZodRawShape = any>(\n    name: string,\n    description: string,\n    schema: Args,\n    handler: ToolCallback<Args>\n  ): (() => ToolDefinition<Args>) =>\n  () => ({\n    name: name,\n    description: description,\n    schema: schema,\n    handler: handler,\n  });\n","/**\n * Generated by orval v7.8.0 üç∫\n * Do not edit manually.\n * Umbraco Management API\n * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility\n * OpenAPI spec version: Latest\n */\nimport {\n  z as zod\n} from 'zod';\n\nclass FileLike {\n  constructor(\n    public name: string,\n    public size: number,\n    public type: string\n  ) {}\n}\n\n\n\nexport const getCultureQuerySkipDefault = 0;export const getCultureQueryTakeDefault = 100;\n\nexport const getCultureQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getCultureQueryTakeDefault)\n})\n\nexport const getCultureResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"name\": zod.string().min(1),\n  \"englishName\": zod.string().min(1)\n}))\n})\n\n\nexport const postDataTypeBody = zod.object({\n  \"name\": zod.string().min(1),\n  \"editorAlias\": zod.string().min(1),\n  \"editorUiAlias\": zod.string(),\n  \"values\": zod.array(zod.object({\n  \"alias\": zod.string(),\n  \"value\": zod.any().nullish()\n})),\n  \"id\": zod.string().uuid().nullish(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n})\n\n\nexport const getDataTypeByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getDataTypeByIdResponse = zod.object({\n  \"name\": zod.string().min(1),\n  \"editorAlias\": zod.string().min(1),\n  \"editorUiAlias\": zod.string(),\n  \"values\": zod.array(zod.object({\n  \"alias\": zod.string(),\n  \"value\": zod.any().nullish()\n})),\n  \"id\": zod.string().uuid(),\n  \"isDeletable\": zod.boolean(),\n  \"canIgnoreStartNodes\": zod.boolean()\n})\n\n\nexport const deleteDataTypeByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\n\nexport const putDataTypeByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putDataTypeByIdBody = zod.object({\n  \"name\": zod.string().min(1),\n  \"editorAlias\": zod.string().min(1),\n  \"editorUiAlias\": zod.string(),\n  \"values\": zod.array(zod.object({\n  \"alias\": zod.string(),\n  \"value\": zod.any().nullish()\n}))\n})\n\n\nexport const postDataTypeByIdCopyParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const postDataTypeByIdCopyBody = zod.object({\n  \"target\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n})\n\n\nexport const getDataTypeByIdIsUsedParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getDataTypeByIdIsUsedResponse = zod.boolean()\n\n\nexport const putDataTypeByIdMoveParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putDataTypeByIdMoveBody = zod.object({\n  \"target\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n})\n\n\nexport const getDataTypeByIdReferencesParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getDataTypeByIdReferencesResponseItem = zod.object({\n  \"contentType\": zod.object({\n  \"id\": zod.string().uuid(),\n  \"type\": zod.string().nullable(),\n  \"name\": zod.string().nullable(),\n  \"icon\": zod.string().nullable()\n}),\n  \"properties\": zod.array(zod.object({\n  \"name\": zod.string(),\n  \"alias\": zod.string()\n}))\n})\nexport const getDataTypeByIdReferencesResponse = zod.array(getDataTypeByIdReferencesResponseItem)\n\n\nexport const getDataTypeConfigurationResponse = zod.object({\n  \"canBeChanged\": zod.enum(['True', 'False', 'FalseWithHelpText']),\n  \"documentListViewId\": zod.string().uuid(),\n  \"mediaListViewId\": zod.string().uuid()\n})\n\n\nexport const postDataTypeFolderBody = zod.object({\n  \"name\": zod.string().min(1),\n  \"id\": zod.string().uuid().nullish(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n})\n\n\nexport const getDataTypeFolderByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getDataTypeFolderByIdResponse = zod.object({\n  \"name\": zod.string().min(1),\n  \"id\": zod.string().uuid()\n})\n\n\nexport const deleteDataTypeFolderByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\n\nexport const putDataTypeFolderByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putDataTypeFolderByIdBody = zod.object({\n  \"name\": zod.string().min(1)\n})\n\n\nexport const getFilterDataTypeQuerySkipDefault = 0;export const getFilterDataTypeQueryTakeDefault = 100;export const getFilterDataTypeQueryNameDefault = \"\";\n\nexport const getFilterDataTypeQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getFilterDataTypeQueryTakeDefault),\n  \"name\": zod.string().optional(),\n  \"editorUiAlias\": zod.string().optional(),\n  \"editorAlias\": zod.string().optional()\n})\n\nexport const getFilterDataTypeResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string(),\n  \"editorUiAlias\": zod.string().nullish(),\n  \"editorAlias\": zod.string(),\n  \"isDeletable\": zod.boolean()\n}))\n})\n\n\nexport const getItemDataTypeQueryParams = zod.object({\n  \"id\": zod.array(zod.string().uuid()).optional()\n})\n\nexport const getItemDataTypeResponseItem = zod.object({\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string(),\n  \"editorUiAlias\": zod.string().nullish(),\n  \"editorAlias\": zod.string(),\n  \"isDeletable\": zod.boolean()\n})\nexport const getItemDataTypeResponse = zod.array(getItemDataTypeResponseItem)\n\n\nexport const getItemDataTypeSearchQuerySkipDefault = 0;export const getItemDataTypeSearchQueryTakeDefault = 100;\n\nexport const getItemDataTypeSearchQueryParams = zod.object({\n  \"query\": zod.string().optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getItemDataTypeSearchQueryTakeDefault)\n})\n\nexport const getItemDataTypeSearchResponse = zod.object({\n  \"items\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string(),\n  \"editorUiAlias\": zod.string().nullish(),\n  \"editorAlias\": zod.string(),\n  \"isDeletable\": zod.boolean()\n})),\n  \"total\": zod.number()\n})\n\n\nexport const getTreeDataTypeAncestorsQueryParams = zod.object({\n  \"descendantId\": zod.string().uuid().optional()\n})\n\nexport const getTreeDataTypeAncestorsResponseItem = zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"id\": zod.string().uuid(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"name\": zod.string(),\n  \"isFolder\": zod.boolean(),\n  \"editorUiAlias\": zod.string().nullish(),\n  \"isDeletable\": zod.boolean()\n})\nexport const getTreeDataTypeAncestorsResponse = zod.array(getTreeDataTypeAncestorsResponseItem)\n\n\nexport const getTreeDataTypeChildrenQuerySkipDefault = 0;export const getTreeDataTypeChildrenQueryTakeDefault = 100;export const getTreeDataTypeChildrenQueryFoldersOnlyDefault = false;\n\nexport const getTreeDataTypeChildrenQueryParams = zod.object({\n  \"parentId\": zod.string().uuid().optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getTreeDataTypeChildrenQueryTakeDefault),\n  \"foldersOnly\": zod.coerce.boolean().optional()\n})\n\nexport const getTreeDataTypeChildrenResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"id\": zod.string().uuid(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"name\": zod.string(),\n  \"isFolder\": zod.boolean(),\n  \"editorUiAlias\": zod.string().nullish(),\n  \"isDeletable\": zod.boolean()\n}))\n})\n\n\nexport const getTreeDataTypeRootQuerySkipDefault = 0;export const getTreeDataTypeRootQueryTakeDefault = 100;export const getTreeDataTypeRootQueryFoldersOnlyDefault = false;\n\nexport const getTreeDataTypeRootQueryParams = zod.object({\n  \"skip\": zod.coerce.number(),\n  \"take\": zod.coerce.number().default(100),\n  \"foldersOnly\": zod.coerce.boolean()\n})\n\nexport const getTreeDataTypeRootResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"id\": zod.string().uuid(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"name\": zod.string(),\n  \"isFolder\": zod.boolean(),\n  \"editorUiAlias\": zod.string().nullish(),\n  \"isDeletable\": zod.boolean()\n}))\n})\n\n\nexport const getDictionaryQuerySkipDefault = 0;export const getDictionaryQueryTakeDefault = 100;\n\nexport const getDictionaryQueryParams = zod.object({\n  \"filter\": zod.string().optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getDictionaryQueryTakeDefault)\n})\n\nexport const getDictionaryResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"name\": zod.string().nullish(),\n  \"id\": zod.string().uuid(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"translatedIsoCodes\": zod.array(zod.string())\n}))\n})\n\n\nexport const postDictionaryBody = zod.object({\n  \"name\": zod.string().min(1),\n  \"translations\": zod.array(zod.object({\n  \"isoCode\": zod.string().min(1),\n  \"translation\": zod.string().min(1)\n})),\n  \"id\": zod.string().uuid().nullish(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n})\n\n\nexport const getDictionaryByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getDictionaryByIdResponse = zod.object({\n  \"name\": zod.string().min(1),\n  \"translations\": zod.array(zod.object({\n  \"isoCode\": zod.string().min(1),\n  \"translation\": zod.string().min(1)\n})),\n  \"id\": zod.string().uuid()\n})\n\n\nexport const deleteDictionaryByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\n\nexport const putDictionaryByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putDictionaryByIdBody = zod.object({\n  \"name\": zod.string().min(1),\n  \"translations\": zod.array(zod.object({\n  \"isoCode\": zod.string().min(1),\n  \"translation\": zod.string().min(1)\n}))\n})\n\n\nexport const getDictionaryByIdExportParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getDictionaryByIdExportQueryIncludeChildrenDefault = false;\n\nexport const getDictionaryByIdExportQueryParams = zod.object({\n  \"includeChildren\": zod.coerce.boolean().optional()\n})\n\nexport const getDictionaryByIdExportResponse = zod.instanceof(FileLike)\n\n\nexport const putDictionaryByIdMoveParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putDictionaryByIdMoveBody = zod.object({\n  \"target\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n})\n\n\nexport const postDictionaryImportBody = zod.object({\n  \"temporaryFile\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n})\n\n\nexport const getItemDictionaryQueryParams = zod.object({\n  \"id\": zod.array(zod.string().uuid()).optional()\n})\n\nexport const getItemDictionaryResponseItem = zod.object({\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string()\n})\nexport const getItemDictionaryResponse = zod.array(getItemDictionaryResponseItem)\n\n\nexport const getTreeDictionaryAncestorsQueryParams = zod.object({\n  \"descendantId\": zod.string().uuid().optional()\n})\n\nexport const getTreeDictionaryAncestorsResponseItem = zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"id\": zod.string().uuid(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"name\": zod.string()\n})\nexport const getTreeDictionaryAncestorsResponse = zod.array(getTreeDictionaryAncestorsResponseItem)\n\n\nexport const getTreeDictionaryChildrenQuerySkipDefault = 0;export const getTreeDictionaryChildrenQueryTakeDefault = 100;\n\nexport const getTreeDictionaryChildrenQueryParams = zod.object({\n  \"parentId\": zod.string().uuid().optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getTreeDictionaryChildrenQueryTakeDefault)\n})\n\nexport const getTreeDictionaryChildrenResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"id\": zod.string().uuid(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"name\": zod.string()\n}))\n})\n\n\nexport const getTreeDictionaryRootQuerySkipDefault = 0;export const getTreeDictionaryRootQueryTakeDefault = 100;\n\nexport const getTreeDictionaryRootQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getTreeDictionaryRootQueryTakeDefault)\n})\n\nexport const getTreeDictionaryRootResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"id\": zod.string().uuid(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"name\": zod.string()\n}))\n})\n\n\nexport const postDocumentBlueprintBody = zod.object({\n  \"values\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"alias\": zod.string().min(1),\n  \"value\": zod.any().nullish()\n})),\n  \"variants\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"name\": zod.string().min(1)\n})),\n  \"id\": zod.string().uuid().nullish(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"documentType\": zod.object({\n  \"id\": zod.string().uuid()\n})\n})\n\n\nexport const getDocumentBlueprintByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getDocumentBlueprintByIdResponse = zod.object({\n  \"values\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"alias\": zod.string().min(1),\n  \"value\": zod.any().nullish(),\n  \"editorAlias\": zod.string().min(1)\n})),\n  \"variants\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"name\": zod.string().min(1),\n  \"createDate\": zod.string().datetime({\"local\":true}),\n  \"updateDate\": zod.string().datetime({\"local\":true}),\n  \"state\": zod.enum(['NotCreated', 'Draft', 'Published', 'PublishedPendingChanges']),\n  \"publishDate\": zod.string().datetime({\"local\":true}).nullish(),\n  \"scheduledPublishDate\": zod.string().datetime({\"local\":true}).nullish(),\n  \"scheduledUnpublishDate\": zod.string().datetime({\"local\":true}).nullish()\n})),\n  \"id\": zod.string().uuid(),\n  \"documentType\": zod.object({\n  \"id\": zod.string().uuid(),\n  \"icon\": zod.string(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n})\n})\n\n\nexport const deleteDocumentBlueprintByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\n\nexport const putDocumentBlueprintByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putDocumentBlueprintByIdBody = zod.object({\n  \"values\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"alias\": zod.string().min(1),\n  \"value\": zod.any().nullish()\n})),\n  \"variants\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"name\": zod.string().min(1)\n}))\n})\n\n\nexport const putDocumentBlueprintByIdMoveParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putDocumentBlueprintByIdMoveBody = zod.object({\n  \"target\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n})\n\n\nexport const postDocumentBlueprintFolderBody = zod.object({\n  \"name\": zod.string().min(1),\n  \"id\": zod.string().uuid().nullish(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n})\n\n\nexport const getDocumentBlueprintFolderByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getDocumentBlueprintFolderByIdResponse = zod.object({\n  \"name\": zod.string().min(1),\n  \"id\": zod.string().uuid()\n})\n\n\nexport const deleteDocumentBlueprintFolderByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\n\nexport const putDocumentBlueprintFolderByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putDocumentBlueprintFolderByIdBody = zod.object({\n  \"name\": zod.string().min(1)\n})\n\n\nexport const postDocumentBlueprintFromDocumentBody = zod.object({\n  \"document\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"id\": zod.string().uuid().nullish(),\n  \"name\": zod.string(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n})\n\n\nexport const getItemDocumentBlueprintQueryParams = zod.object({\n  \"id\": zod.array(zod.string().uuid()).optional()\n})\n\nexport const getItemDocumentBlueprintResponseItem = zod.object({\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string(),\n  \"documentType\": zod.object({\n  \"id\": zod.string().uuid(),\n  \"icon\": zod.string(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n})\n})\nexport const getItemDocumentBlueprintResponse = zod.array(getItemDocumentBlueprintResponseItem)\n\n\nexport const getTreeDocumentBlueprintAncestorsQueryParams = zod.object({\n  \"descendantId\": zod.string().uuid().optional()\n})\n\nexport const getTreeDocumentBlueprintAncestorsResponseItem = zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"id\": zod.string().uuid(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"name\": zod.string(),\n  \"isFolder\": zod.boolean(),\n  \"documentType\": zod.object({\n  \"id\": zod.string().uuid(),\n  \"icon\": zod.string(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n}).nullish()\n})\nexport const getTreeDocumentBlueprintAncestorsResponse = zod.array(getTreeDocumentBlueprintAncestorsResponseItem)\n\n\nexport const getTreeDocumentBlueprintChildrenQuerySkipDefault = 0;export const getTreeDocumentBlueprintChildrenQueryTakeDefault = 100;export const getTreeDocumentBlueprintChildrenQueryFoldersOnlyDefault = false;\n\nexport const getTreeDocumentBlueprintChildrenQueryParams = zod.object({\n  \"parentId\": zod.string().uuid().optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getTreeDocumentBlueprintChildrenQueryTakeDefault),\n  \"foldersOnly\": zod.coerce.boolean().optional()\n})\n\nexport const getTreeDocumentBlueprintChildrenResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"id\": zod.string().uuid(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"name\": zod.string(),\n  \"isFolder\": zod.boolean(),\n  \"documentType\": zod.object({\n  \"id\": zod.string().uuid(),\n  \"icon\": zod.string(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n}).nullish()\n}))\n})\n\n\nexport const getTreeDocumentBlueprintRootQuerySkipDefault = 0;export const getTreeDocumentBlueprintRootQueryTakeDefault = 100;export const getTreeDocumentBlueprintRootQueryFoldersOnlyDefault = false;\n\nexport const getTreeDocumentBlueprintRootQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getTreeDocumentBlueprintRootQueryTakeDefault),\n  \"foldersOnly\": zod.coerce.boolean().optional()\n})\n\nexport const getTreeDocumentBlueprintRootResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"id\": zod.string().uuid(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"name\": zod.string(),\n  \"isFolder\": zod.boolean(),\n  \"documentType\": zod.object({\n  \"id\": zod.string().uuid(),\n  \"icon\": zod.string(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n}).nullish()\n}))\n})\n\n\nexport const postDocumentTypeBody = zod.object({\n  \"alias\": zod.string().min(1),\n  \"name\": zod.string().min(1),\n  \"description\": zod.string().nullish(),\n  \"icon\": zod.string().min(1),\n  \"allowedAsRoot\": zod.boolean(),\n  \"variesByCulture\": zod.boolean(),\n  \"variesBySegment\": zod.boolean(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"isElement\": zod.boolean(),\n  \"properties\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"container\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"sortOrder\": zod.number(),\n  \"alias\": zod.string().min(1),\n  \"name\": zod.string().min(1),\n  \"description\": zod.string().nullish(),\n  \"dataType\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"variesByCulture\": zod.boolean(),\n  \"variesBySegment\": zod.boolean(),\n  \"validation\": zod.object({\n  \"mandatory\": zod.boolean(),\n  \"mandatoryMessage\": zod.string().nullish(),\n  \"regEx\": zod.string().nullish(),\n  \"regExMessage\": zod.string().nullish()\n}),\n  \"appearance\": zod.object({\n  \"labelOnTop\": zod.boolean()\n})\n})),\n  \"containers\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"name\": zod.string().nullish(),\n  \"type\": zod.string().min(1),\n  \"sortOrder\": zod.number()\n})),\n  \"id\": zod.string().uuid().nullish(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"allowedTemplates\": zod.array(zod.object({\n  \"id\": zod.string().uuid()\n})),\n  \"defaultTemplate\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"cleanup\": zod.object({\n  \"preventCleanup\": zod.boolean(),\n  \"keepAllVersionsNewerThanDays\": zod.number().nullish(),\n  \"keepLatestVersionPerDayForDays\": zod.number().nullish()\n}),\n  \"allowedDocumentTypes\": zod.array(zod.object({\n  \"documentType\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"sortOrder\": zod.number()\n})),\n  \"compositions\": zod.array(zod.object({\n  \"documentType\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"compositionType\": zod.enum(['Composition', 'Inheritance'])\n}))\n})\n\n\nexport const getDocumentTypeByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getDocumentTypeByIdResponse = zod.object({\n  \"alias\": zod.string().min(1),\n  \"name\": zod.string().min(1),\n  \"description\": zod.string().nullish(),\n  \"icon\": zod.string().min(1),\n  \"allowedAsRoot\": zod.boolean(),\n  \"variesByCulture\": zod.boolean(),\n  \"variesBySegment\": zod.boolean(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"isElement\": zod.boolean(),\n  \"properties\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"container\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"sortOrder\": zod.number(),\n  \"alias\": zod.string().min(1),\n  \"name\": zod.string().min(1),\n  \"description\": zod.string().nullish(),\n  \"dataType\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"variesByCulture\": zod.boolean(),\n  \"variesBySegment\": zod.boolean(),\n  \"validation\": zod.object({\n  \"mandatory\": zod.boolean(),\n  \"mandatoryMessage\": zod.string().nullish(),\n  \"regEx\": zod.string().nullish(),\n  \"regExMessage\": zod.string().nullish()\n}),\n  \"appearance\": zod.object({\n  \"labelOnTop\": zod.boolean()\n})\n})),\n  \"containers\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"name\": zod.string().nullish(),\n  \"type\": zod.string().min(1),\n  \"sortOrder\": zod.number()\n})),\n  \"id\": zod.string().uuid(),\n  \"allowedTemplates\": zod.array(zod.object({\n  \"id\": zod.string().uuid()\n})),\n  \"defaultTemplate\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"cleanup\": zod.object({\n  \"preventCleanup\": zod.boolean(),\n  \"keepAllVersionsNewerThanDays\": zod.number().nullish(),\n  \"keepLatestVersionPerDayForDays\": zod.number().nullish()\n}),\n  \"allowedDocumentTypes\": zod.array(zod.object({\n  \"documentType\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"sortOrder\": zod.number()\n})),\n  \"compositions\": zod.array(zod.object({\n  \"documentType\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"compositionType\": zod.enum(['Composition', 'Inheritance'])\n}))\n})\n\n\nexport const deleteDocumentTypeByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\n\nexport const putDocumentTypeByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putDocumentTypeByIdBody = zod.object({\n  \"alias\": zod.string().min(1),\n  \"name\": zod.string().min(1),\n  \"description\": zod.string().nullish(),\n  \"icon\": zod.string().min(1),\n  \"allowedAsRoot\": zod.boolean(),\n  \"variesByCulture\": zod.boolean(),\n  \"variesBySegment\": zod.boolean(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"isElement\": zod.boolean(),\n  \"properties\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"container\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"sortOrder\": zod.number(),\n  \"alias\": zod.string().min(1),\n  \"name\": zod.string().min(1),\n  \"description\": zod.string().nullish(),\n  \"dataType\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"variesByCulture\": zod.boolean(),\n  \"variesBySegment\": zod.boolean(),\n  \"validation\": zod.object({\n  \"mandatory\": zod.boolean(),\n  \"mandatoryMessage\": zod.string().nullish(),\n  \"regEx\": zod.string().nullish(),\n  \"regExMessage\": zod.string().nullish()\n}),\n  \"appearance\": zod.object({\n  \"labelOnTop\": zod.boolean()\n})\n})),\n  \"containers\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"name\": zod.string().nullish(),\n  \"type\": zod.string().min(1),\n  \"sortOrder\": zod.number()\n})),\n  \"allowedTemplates\": zod.array(zod.object({\n  \"id\": zod.string().uuid()\n})),\n  \"defaultTemplate\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"cleanup\": zod.object({\n  \"preventCleanup\": zod.boolean(),\n  \"keepAllVersionsNewerThanDays\": zod.number().nullish(),\n  \"keepLatestVersionPerDayForDays\": zod.number().nullish()\n}),\n  \"allowedDocumentTypes\": zod.array(zod.object({\n  \"documentType\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"sortOrder\": zod.number()\n})),\n  \"compositions\": zod.array(zod.object({\n  \"documentType\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"compositionType\": zod.enum(['Composition', 'Inheritance'])\n}))\n})\n\n\nexport const getDocumentTypeByIdAllowedChildrenParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getDocumentTypeByIdAllowedChildrenQuerySkipDefault = 0;export const getDocumentTypeByIdAllowedChildrenQueryTakeDefault = 100;\n\nexport const getDocumentTypeByIdAllowedChildrenQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getDocumentTypeByIdAllowedChildrenQueryTakeDefault)\n})\n\nexport const getDocumentTypeByIdAllowedChildrenResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string(),\n  \"description\": zod.string().nullish(),\n  \"icon\": zod.string().nullish()\n}))\n})\n\n\nexport const getDocumentTypeByIdBlueprintParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getDocumentTypeByIdBlueprintQuerySkipDefault = 0;export const getDocumentTypeByIdBlueprintQueryTakeDefault = 100;\n\nexport const getDocumentTypeByIdBlueprintQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getDocumentTypeByIdBlueprintQueryTakeDefault)\n})\n\nexport const getDocumentTypeByIdBlueprintResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string()\n}))\n})\n\n\nexport const getDocumentTypeByIdCompositionReferencesParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getDocumentTypeByIdCompositionReferencesResponseItem = zod.object({\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string(),\n  \"icon\": zod.string()\n})\nexport const getDocumentTypeByIdCompositionReferencesResponse = zod.array(getDocumentTypeByIdCompositionReferencesResponseItem)\n\n\nexport const postDocumentTypeByIdCopyParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const postDocumentTypeByIdCopyBody = zod.object({\n  \"target\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n})\n\n\nexport const getDocumentTypeByIdExportParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getDocumentTypeByIdExportResponse = zod.instanceof(FileLike)\n\n\nexport const putDocumentTypeByIdImportParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putDocumentTypeByIdImportBody = zod.object({\n  \"file\": zod.object({\n  \"id\": zod.string().uuid()\n})\n})\n\n\nexport const putDocumentTypeByIdMoveParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putDocumentTypeByIdMoveBody = zod.object({\n  \"target\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n})\n\n\nexport const getDocumentTypeAllowedAtRootQuerySkipDefault = 0;export const getDocumentTypeAllowedAtRootQueryTakeDefault = 100;\n\nexport const getDocumentTypeAllowedAtRootQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getDocumentTypeAllowedAtRootQueryTakeDefault)\n})\n\nexport const getDocumentTypeAllowedAtRootResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string(),\n  \"description\": zod.string().nullish(),\n  \"icon\": zod.string().nullish()\n}))\n})\n\n\nexport const postDocumentTypeAvailableCompositionsBody = zod.object({\n  \"id\": zod.string().uuid().nullish(),\n  \"currentPropertyAliases\": zod.array(zod.string()),\n  \"currentCompositeIds\": zod.array(zod.string().uuid()),\n  \"isElement\": zod.boolean()\n})\n\nexport const postDocumentTypeAvailableCompositionsResponseItem = zod.object({\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string(),\n  \"icon\": zod.string(),\n  \"folderPath\": zod.array(zod.string()),\n  \"isCompatible\": zod.boolean()\n})\nexport const postDocumentTypeAvailableCompositionsResponse = zod.array(postDocumentTypeAvailableCompositionsResponseItem)\n\n\nexport const getDocumentTypeConfigurationResponse = zod.object({\n  \"dataTypesCanBeChanged\": zod.enum(['True', 'False', 'FalseWithHelpText']),\n  \"disableTemplates\": zod.boolean(),\n  \"useSegments\": zod.boolean(),\n  \"reservedFieldNames\": zod.array(zod.string())\n})\n\n\nexport const postDocumentTypeFolderBody = zod.object({\n  \"name\": zod.string().min(1),\n  \"id\": zod.string().uuid().nullish(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n})\n\n\nexport const getDocumentTypeFolderByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getDocumentTypeFolderByIdResponse = zod.object({\n  \"name\": zod.string().min(1),\n  \"id\": zod.string().uuid()\n})\n\n\nexport const deleteDocumentTypeFolderByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\n\nexport const putDocumentTypeFolderByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putDocumentTypeFolderByIdBody = zod.object({\n  \"name\": zod.string().min(1)\n})\n\n\nexport const postDocumentTypeImportBody = zod.object({\n  \"file\": zod.object({\n  \"id\": zod.string().uuid()\n})\n})\n\n\nexport const getItemDocumentTypeQueryParams = zod.object({\n  \"id\": zod.array(zod.string().uuid()).optional()\n})\n\nexport const getItemDocumentTypeResponseItem = zod.object({\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string(),\n  \"isElement\": zod.boolean(),\n  \"icon\": zod.string().nullish(),\n  \"description\": zod.string().nullish()\n})\nexport const getItemDocumentTypeResponse = zod.array(getItemDocumentTypeResponseItem)\n\n\nexport const getItemDocumentTypeSearchQuerySkipDefault = 0;export const getItemDocumentTypeSearchQueryTakeDefault = 100;\n\nexport const getItemDocumentTypeSearchQueryParams = zod.object({\n  \"query\": zod.string().optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getItemDocumentTypeSearchQueryTakeDefault)\n})\n\nexport const getItemDocumentTypeSearchResponse = zod.object({\n  \"items\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string(),\n  \"isElement\": zod.boolean(),\n  \"icon\": zod.string().nullish(),\n  \"description\": zod.string().nullish()\n})),\n  \"total\": zod.number()\n})\n\n\nexport const getTreeDocumentTypeAncestorsQueryParams = zod.object({\n  \"descendantId\": zod.string().uuid().optional()\n})\n\nexport const getTreeDocumentTypeAncestorsResponseItem = zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"id\": zod.string().uuid(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"name\": zod.string(),\n  \"isFolder\": zod.boolean(),\n  \"isElement\": zod.boolean(),\n  \"icon\": zod.string()\n})\nexport const getTreeDocumentTypeAncestorsResponse = zod.array(getTreeDocumentTypeAncestorsResponseItem)\n\n\nexport const getTreeDocumentTypeChildrenQuerySkipDefault = 0;export const getTreeDocumentTypeChildrenQueryTakeDefault = 100;export const getTreeDocumentTypeChildrenQueryFoldersOnlyDefault = false;\n\nexport const getTreeDocumentTypeChildrenQueryParams = zod.object({\n  \"parentId\": zod.string().uuid().optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getTreeDocumentTypeChildrenQueryTakeDefault),\n  \"foldersOnly\": zod.coerce.boolean().optional()\n})\n\nexport const getTreeDocumentTypeChildrenResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"id\": zod.string().uuid(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"name\": zod.string(),\n  \"isFolder\": zod.boolean(),\n  \"isElement\": zod.boolean(),\n  \"icon\": zod.string()\n}))\n})\n\n\nexport const getTreeDocumentTypeRootQuerySkipDefault = 0;export const getTreeDocumentTypeRootQueryTakeDefault = 100;export const getTreeDocumentTypeRootQueryFoldersOnlyDefault = false;\n\nexport const getTreeDocumentTypeRootQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getTreeDocumentTypeRootQueryTakeDefault),\n  \"foldersOnly\": zod.coerce.boolean().optional()\n})\n\nexport const getTreeDocumentTypeRootResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"id\": zod.string().uuid(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"name\": zod.string(),\n  \"isFolder\": zod.boolean(),\n  \"isElement\": zod.boolean(),\n  \"icon\": zod.string()\n}))\n})\n\n\nexport const getDocumentVersionQuerySkipDefault = 0;export const getDocumentVersionQueryTakeDefault = 100;\n\nexport const getDocumentVersionQueryParams = zod.object({\n  \"documentId\": zod.string().uuid(),\n  \"culture\": zod.string().optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getDocumentVersionQueryTakeDefault)\n})\n\nexport const getDocumentVersionResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"document\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"documentType\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"user\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"versionDate\": zod.string().datetime({\"local\":true}),\n  \"isCurrentPublishedVersion\": zod.boolean(),\n  \"isCurrentDraftVersion\": zod.boolean(),\n  \"preventCleanup\": zod.boolean()\n}))\n})\n\n\nexport const getDocumentVersionByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getDocumentVersionByIdResponse = zod.object({\n  \"values\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"alias\": zod.string().min(1),\n  \"value\": zod.any().nullish(),\n  \"editorAlias\": zod.string().min(1)\n})),\n  \"variants\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"name\": zod.string().min(1),\n  \"createDate\": zod.string().datetime({\"local\":true}),\n  \"updateDate\": zod.string().datetime({\"local\":true}),\n  \"state\": zod.enum(['NotCreated', 'Draft', 'Published', 'PublishedPendingChanges']),\n  \"publishDate\": zod.string().datetime({\"local\":true}).nullish(),\n  \"scheduledPublishDate\": zod.string().datetime({\"local\":true}).nullish(),\n  \"scheduledUnpublishDate\": zod.string().datetime({\"local\":true}).nullish()\n})),\n  \"id\": zod.string().uuid(),\n  \"documentType\": zod.object({\n  \"id\": zod.string().uuid(),\n  \"icon\": zod.string(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n}),\n  \"document\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n})\n\n\nexport const putDocumentVersionByIdPreventCleanupParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putDocumentVersionByIdPreventCleanupQueryParams = zod.object({\n  \"preventCleanup\": zod.coerce.boolean().optional()\n})\n\n\nexport const postDocumentVersionByIdRollbackParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const postDocumentVersionByIdRollbackQueryParams = zod.object({\n  \"culture\": zod.string().optional()\n})\n\n\nexport const getCollectionDocumentByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getCollectionDocumentByIdQueryOrderByDefault = \"updateDate\";export const getCollectionDocumentByIdQuerySkipDefault = 0;export const getCollectionDocumentByIdQueryTakeDefault = 100;\n\nexport const getCollectionDocumentByIdQueryParams = zod.object({\n  \"dataTypeId\": zod.string().uuid().optional(),\n  \"orderBy\": zod.string().default(getCollectionDocumentByIdQueryOrderByDefault),\n  \"orderCulture\": zod.string().optional(),\n  \"orderDirection\": zod.enum(['Ascending', 'Descending']).optional(),\n  \"filter\": zod.string().optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getCollectionDocumentByIdQueryTakeDefault)\n})\n\nexport const getCollectionDocumentByIdResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"values\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"alias\": zod.string().min(1),\n  \"value\": zod.any().nullish(),\n  \"editorAlias\": zod.string().min(1)\n})),\n  \"variants\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"name\": zod.string().min(1),\n  \"createDate\": zod.string().datetime({\"local\":true}),\n  \"updateDate\": zod.string().datetime({\"local\":true}),\n  \"state\": zod.enum(['NotCreated', 'Draft', 'Published', 'PublishedPendingChanges']),\n  \"publishDate\": zod.string().datetime({\"local\":true}).nullish(),\n  \"scheduledPublishDate\": zod.string().datetime({\"local\":true}).nullish(),\n  \"scheduledUnpublishDate\": zod.string().datetime({\"local\":true}).nullish()\n})),\n  \"id\": zod.string().uuid(),\n  \"creator\": zod.string().nullish(),\n  \"sortOrder\": zod.number(),\n  \"documentType\": zod.object({\n  \"id\": zod.string().uuid(),\n  \"alias\": zod.string(),\n  \"icon\": zod.string()\n}),\n  \"isTrashed\": zod.boolean(),\n  \"isProtected\": zod.boolean(),\n  \"updater\": zod.string().nullish()\n}))\n})\n\n\nexport const postDocumentBody = zod.object({\n  \"values\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"alias\": zod.string().min(1),\n  \"value\": zod.any().nullish()\n})),\n  \"variants\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"name\": zod.string().min(1)\n})),\n  \"id\": zod.string().uuid().nullish(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"documentType\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"template\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullable()\n})\n\n\nexport const getDocumentByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getDocumentByIdResponse = zod.object({\n  \"values\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"alias\": zod.string().min(1),\n  \"value\": zod.any().nullish(),\n  \"editorAlias\": zod.string().min(1)\n})),\n  \"variants\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"name\": zod.string().min(1),\n  \"createDate\": zod.string().datetime({\"local\":true}),\n  \"updateDate\": zod.string().datetime({\"local\":true}),\n  \"state\": zod.enum(['NotCreated', 'Draft', 'Published', 'PublishedPendingChanges']),\n  \"publishDate\": zod.string().datetime({\"local\":true}).nullish(),\n  \"scheduledPublishDate\": zod.string().datetime({\"local\":true}).nullish(),\n  \"scheduledUnpublishDate\": zod.string().datetime({\"local\":true}).nullish()\n})),\n  \"id\": zod.string().uuid(),\n  \"documentType\": zod.object({\n  \"id\": zod.string().uuid(),\n  \"icon\": zod.string(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n}),\n  \"urls\": zod.array(zod.object({\n  \"culture\": zod.string().nullable(),\n  \"url\": zod.string()\n})),\n  \"template\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"isTrashed\": zod.boolean()\n})\n\n\nexport const deleteDocumentByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\n\nexport const putDocumentByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putDocumentByIdBody = zod.object({\n  \"values\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"alias\": zod.string().min(1),\n  \"value\": zod.any().nullish()\n})),\n  \"variants\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"name\": zod.string().min(1)\n})),\n  \"template\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n})\n\n\nexport const getDocumentByIdAuditLogParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getDocumentByIdAuditLogQuerySkipDefault = 0;export const getDocumentByIdAuditLogQueryTakeDefault = 100;\n\nexport const getDocumentByIdAuditLogQueryParams = zod.object({\n  \"orderDirection\": zod.enum(['Ascending', 'Descending']).optional(),\n  \"sinceDate\": zod.string().datetime({\"local\":true}).optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getDocumentByIdAuditLogQueryTakeDefault)\n})\n\nexport const getDocumentByIdAuditLogResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"user\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"timestamp\": zod.string().datetime({\"local\":true}),\n  \"logType\": zod.enum(['New', 'Save', 'SaveVariant', 'Open', 'Delete', 'Publish', 'PublishVariant', 'SendToPublish', 'SendToPublishVariant', 'Unpublish', 'UnpublishVariant', 'Move', 'Copy', 'AssignDomain', 'PublicAccess', 'Sort', 'Notify', 'System', 'RollBack', 'PackagerInstall', 'PackagerUninstall', 'Custom', 'ContentVersionPreventCleanup', 'ContentVersionEnableCleanup']),\n  \"comment\": zod.string().nullish(),\n  \"parameters\": zod.string().nullish()\n}))\n})\n\n\nexport const postDocumentByIdCopyParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const postDocumentByIdCopyBody = zod.object({\n  \"target\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"relateToOriginal\": zod.boolean(),\n  \"includeDescendants\": zod.boolean()\n})\n\n\nexport const getDocumentByIdDomainsParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getDocumentByIdDomainsResponse = zod.object({\n  \"defaultIsoCode\": zod.string().nullish(),\n  \"domains\": zod.array(zod.object({\n  \"domainName\": zod.string(),\n  \"isoCode\": zod.string()\n}))\n})\n\n\nexport const putDocumentByIdDomainsParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putDocumentByIdDomainsBody = zod.object({\n  \"defaultIsoCode\": zod.string().nullish(),\n  \"domains\": zod.array(zod.object({\n  \"domainName\": zod.string(),\n  \"isoCode\": zod.string()\n}))\n})\n\n\nexport const putDocumentByIdMoveParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putDocumentByIdMoveBody = zod.object({\n  \"target\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n})\n\n\nexport const putDocumentByIdMoveToRecycleBinParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\n\nexport const getDocumentByIdNotificationsParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getDocumentByIdNotificationsResponseItem = zod.object({\n  \"actionId\": zod.string(),\n  \"alias\": zod.string(),\n  \"subscribed\": zod.boolean()\n})\nexport const getDocumentByIdNotificationsResponse = zod.array(getDocumentByIdNotificationsResponseItem)\n\n\nexport const putDocumentByIdNotificationsParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putDocumentByIdNotificationsBody = zod.object({\n  \"subscribedActionIds\": zod.array(zod.string())\n})\n\n\nexport const postDocumentByIdPublicAccessParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const postDocumentByIdPublicAccessBody = zod.object({\n  \"loginDocument\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"errorDocument\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"memberUserNames\": zod.array(zod.string()),\n  \"memberGroupNames\": zod.array(zod.string())\n})\n\n\nexport const deleteDocumentByIdPublicAccessParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\n\nexport const getDocumentByIdPublicAccessParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getDocumentByIdPublicAccessResponse = zod.object({\n  \"loginDocument\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"errorDocument\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"members\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"memberType\": zod.object({\n  \"id\": zod.string().uuid(),\n  \"icon\": zod.string(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n}),\n  \"variants\": zod.array(zod.object({\n  \"name\": zod.string(),\n  \"culture\": zod.string().nullish()\n})),\n  \"kind\": zod.enum(['Default', 'Api'])\n})),\n  \"groups\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string()\n}))\n})\n\n\nexport const putDocumentByIdPublicAccessParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putDocumentByIdPublicAccessBody = zod.object({\n  \"loginDocument\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"errorDocument\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"memberUserNames\": zod.array(zod.string()),\n  \"memberGroupNames\": zod.array(zod.string())\n})\n\n\nexport const putDocumentByIdPublishParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putDocumentByIdPublishBody = zod.object({\n  \"publishSchedules\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"schedule\": zod.object({\n  \"publishTime\": zod.string().datetime({\"local\":true}).nullish(),\n  \"unpublishTime\": zod.string().datetime({\"local\":true}).nullish()\n}).nullish()\n}))\n})\n\n\nexport const putDocumentByIdPublishWithDescendantsParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putDocumentByIdPublishWithDescendantsBody = zod.object({\n  \"includeUnpublishedDescendants\": zod.boolean(),\n  \"cultures\": zod.array(zod.string())\n})\n\n\nexport const getDocumentByIdPublishedParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getDocumentByIdPublishedResponse = zod.object({\n  \"values\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"alias\": zod.string().min(1),\n  \"value\": zod.any().nullish(),\n  \"editorAlias\": zod.string().min(1)\n})),\n  \"variants\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"name\": zod.string().min(1),\n  \"createDate\": zod.string().datetime({\"local\":true}),\n  \"updateDate\": zod.string().datetime({\"local\":true}),\n  \"state\": zod.enum(['NotCreated', 'Draft', 'Published', 'PublishedPendingChanges']),\n  \"publishDate\": zod.string().datetime({\"local\":true}).nullish(),\n  \"scheduledPublishDate\": zod.string().datetime({\"local\":true}).nullish(),\n  \"scheduledUnpublishDate\": zod.string().datetime({\"local\":true}).nullish()\n})),\n  \"id\": zod.string().uuid(),\n  \"documentType\": zod.object({\n  \"id\": zod.string().uuid(),\n  \"icon\": zod.string(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n}),\n  \"urls\": zod.array(zod.object({\n  \"culture\": zod.string().nullable(),\n  \"url\": zod.string()\n})),\n  \"template\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"isTrashed\": zod.boolean()\n})\n\n\nexport const getDocumentByIdReferencedByParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getDocumentByIdReferencedByQuerySkipDefault = 0;export const getDocumentByIdReferencedByQueryTakeDefault = 20;\n\nexport const getDocumentByIdReferencedByQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getDocumentByIdReferencedByQueryTakeDefault)\n})\n\nexport const getDocumentByIdReferencedByResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"$type\": zod.enum(['DefaultReferenceResponseModel']),\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string().nullish(),\n  \"type\": zod.string().nullish(),\n  \"icon\": zod.string().nullish()\n}).or(zod.object({\n  \"$type\": zod.enum(['DocumentReferenceResponseModel']),\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string().nullish(),\n  \"published\": zod.boolean().nullish(),\n  \"documentType\": zod.object({\n  \"icon\": zod.string().nullish(),\n  \"alias\": zod.string().nullish(),\n  \"name\": zod.string().nullish()\n})\n})).or(zod.object({\n  \"$type\": zod.enum(['MediaReferenceResponseModel']),\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string().nullish(),\n  \"mediaType\": zod.object({\n  \"icon\": zod.string().nullish(),\n  \"alias\": zod.string().nullish(),\n  \"name\": zod.string().nullish()\n})\n})))\n})\n\n\nexport const getDocumentByIdReferencedDescendantsParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getDocumentByIdReferencedDescendantsQuerySkipDefault = 0;export const getDocumentByIdReferencedDescendantsQueryTakeDefault = 20;\n\nexport const getDocumentByIdReferencedDescendantsQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getDocumentByIdReferencedDescendantsQueryTakeDefault)\n})\n\nexport const getDocumentByIdReferencedDescendantsResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"id\": zod.string().uuid()\n}))\n})\n\n\nexport const putDocumentByIdUnpublishParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putDocumentByIdUnpublishBody = zod.object({\n  \"cultures\": zod.array(zod.string()).nullish()\n})\n\n\n/**\n * @deprecated\n */\nexport const putDocumentByIdValidateParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putDocumentByIdValidateBody = zod.object({\n  \"values\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"alias\": zod.string().min(1),\n  \"value\": zod.any().nullish()\n})),\n  \"variants\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"name\": zod.string().min(1)\n})),\n  \"template\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n})\n\n\nexport const putUmbracoManagementApiV11DocumentByIdValidate11Params = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putUmbracoManagementApiV11DocumentByIdValidate11Body = zod.object({\n  \"values\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"alias\": zod.string().min(1),\n  \"value\": zod.any().nullish()\n})),\n  \"variants\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"name\": zod.string().min(1)\n})),\n  \"template\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"cultures\": zod.array(zod.string()).nullish()\n})\n\n\nexport const getDocumentAreReferencedQuerySkipDefault = 0;export const getDocumentAreReferencedQueryTakeDefault = 20;\n\nexport const getDocumentAreReferencedQueryParams = zod.object({\n  \"id\": zod.array(zod.string().uuid()).optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getDocumentAreReferencedQueryTakeDefault)\n})\n\nexport const getDocumentAreReferencedResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"id\": zod.string().uuid()\n}))\n})\n\n\nexport const getDocumentConfigurationResponse = zod.object({\n  \"disableDeleteWhenReferenced\": zod.boolean(),\n  \"disableUnpublishWhenReferenced\": zod.boolean(),\n  \"allowEditInvariantFromNonDefault\": zod.boolean(),\n  \"allowNonExistingSegmentsCreation\": zod.boolean(),\n  \"reservedFieldNames\": zod.array(zod.string())\n})\n\n\nexport const putDocumentSortBody = zod.object({\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"sorting\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"sortOrder\": zod.number()\n}))\n})\n\n\nexport const getDocumentUrlsQueryParams = zod.object({\n  \"id\": zod.array(zod.string().uuid()).optional()\n})\n\nexport const getDocumentUrlsResponseItem = zod.object({\n  \"id\": zod.string().uuid(),\n  \"urlInfos\": zod.array(zod.object({\n  \"culture\": zod.string().nullable(),\n  \"url\": zod.string()\n}))\n})\nexport const getDocumentUrlsResponse = zod.array(getDocumentUrlsResponseItem)\n\n\nexport const postDocumentValidateBody = zod.object({\n  \"values\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"alias\": zod.string().min(1),\n  \"value\": zod.any().nullish()\n})),\n  \"variants\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"name\": zod.string().min(1)\n})),\n  \"id\": zod.string().uuid().nullish(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"documentType\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"template\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullable()\n})\n\n\nexport const getItemDocumentQueryParams = zod.object({\n  \"id\": zod.array(zod.string().uuid()).optional()\n})\n\nexport const getItemDocumentResponseItem = zod.object({\n  \"id\": zod.string().uuid(),\n  \"isTrashed\": zod.boolean(),\n  \"isProtected\": zod.boolean(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"hasChildren\": zod.boolean(),\n  \"documentType\": zod.object({\n  \"id\": zod.string().uuid(),\n  \"icon\": zod.string(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n}),\n  \"variants\": zod.array(zod.object({\n  \"name\": zod.string(),\n  \"culture\": zod.string().nullish(),\n  \"state\": zod.enum(['NotCreated', 'Draft', 'Published', 'PublishedPendingChanges'])\n}))\n})\nexport const getItemDocumentResponse = zod.array(getItemDocumentResponseItem)\n\n\nexport const getItemDocumentSearchQuerySkipDefault = 0;export const getItemDocumentSearchQueryTakeDefault = 100;\n\nexport const getItemDocumentSearchQueryParams = zod.object({\n  \"query\": zod.string().optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getItemDocumentSearchQueryTakeDefault),\n  \"parentId\": zod.string().uuid().optional(),\n  \"allowedDocumentTypes\": zod.array(zod.string().uuid()).optional()\n})\n\nexport const getItemDocumentSearchResponse = zod.object({\n  \"items\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"isTrashed\": zod.boolean(),\n  \"isProtected\": zod.boolean(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"hasChildren\": zod.boolean(),\n  \"documentType\": zod.object({\n  \"id\": zod.string().uuid(),\n  \"icon\": zod.string(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n}),\n  \"variants\": zod.array(zod.object({\n  \"name\": zod.string(),\n  \"culture\": zod.string().nullish(),\n  \"state\": zod.enum(['NotCreated', 'Draft', 'Published', 'PublishedPendingChanges'])\n}))\n})),\n  \"total\": zod.number()\n})\n\n\nexport const deleteRecycleBinDocumentByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\n\nexport const getRecycleBinDocumentByIdOriginalParentParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getRecycleBinDocumentByIdOriginalParentResponse = zod.object({\n  \"id\": zod.string().uuid()\n})\n\n\nexport const putRecycleBinDocumentByIdRestoreParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putRecycleBinDocumentByIdRestoreBody = zod.object({\n  \"target\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n})\n\n\nexport const getRecycleBinDocumentChildrenQuerySkipDefault = 0;export const getRecycleBinDocumentChildrenQueryTakeDefault = 100;\n\nexport const getRecycleBinDocumentChildrenQueryParams = zod.object({\n  \"parentId\": zod.string().uuid().optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getRecycleBinDocumentChildrenQueryTakeDefault)\n})\n\nexport const getRecycleBinDocumentChildrenResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"createDate\": zod.string().datetime({\"local\":true}),\n  \"hasChildren\": zod.boolean(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"documentType\": zod.object({\n  \"id\": zod.string().uuid(),\n  \"icon\": zod.string(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n}),\n  \"variants\": zod.array(zod.object({\n  \"name\": zod.string(),\n  \"culture\": zod.string().nullish(),\n  \"state\": zod.enum(['NotCreated', 'Draft', 'Published', 'PublishedPendingChanges'])\n}))\n}))\n})\n\n\nexport const getRecycleBinDocumentRootQuerySkipDefault = 0;export const getRecycleBinDocumentRootQueryTakeDefault = 100;\n\nexport const getRecycleBinDocumentRootQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getRecycleBinDocumentRootQueryTakeDefault)\n})\n\nexport const getRecycleBinDocumentRootResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"createDate\": zod.string().datetime({\"local\":true}),\n  \"hasChildren\": zod.boolean(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"documentType\": zod.object({\n  \"id\": zod.string().uuid(),\n  \"icon\": zod.string(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n}),\n  \"variants\": zod.array(zod.object({\n  \"name\": zod.string(),\n  \"culture\": zod.string().nullish(),\n  \"state\": zod.enum(['NotCreated', 'Draft', 'Published', 'PublishedPendingChanges'])\n}))\n}))\n})\n\n\nexport const getTreeDocumentAncestorsQueryParams = zod.object({\n  \"descendantId\": zod.string().uuid().optional()\n})\n\nexport const getTreeDocumentAncestorsResponseItem = zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"noAccess\": zod.boolean(),\n  \"isTrashed\": zod.boolean(),\n  \"id\": zod.string().uuid(),\n  \"createDate\": zod.string().datetime({\"local\":true}),\n  \"isProtected\": zod.boolean(),\n  \"documentType\": zod.object({\n  \"id\": zod.string().uuid(),\n  \"icon\": zod.string(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n}),\n  \"variants\": zod.array(zod.object({\n  \"name\": zod.string(),\n  \"culture\": zod.string().nullish(),\n  \"state\": zod.enum(['NotCreated', 'Draft', 'Published', 'PublishedPendingChanges'])\n}))\n})\nexport const getTreeDocumentAncestorsResponse = zod.array(getTreeDocumentAncestorsResponseItem)\n\n\nexport const getTreeDocumentChildrenQuerySkipDefault = 0;export const getTreeDocumentChildrenQueryTakeDefault = 100;\n\nexport const getTreeDocumentChildrenQueryParams = zod.object({\n  \"parentId\": zod.string().uuid().optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getTreeDocumentChildrenQueryTakeDefault),\n  \"dataTypeId\": zod.string().uuid().optional()\n})\n\nexport const getTreeDocumentChildrenResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"noAccess\": zod.boolean(),\n  \"isTrashed\": zod.boolean(),\n  \"id\": zod.string().uuid(),\n  \"createDate\": zod.string().datetime({\"local\":true}),\n  \"isProtected\": zod.boolean(),\n  \"documentType\": zod.object({\n  \"id\": zod.string().uuid(),\n  \"icon\": zod.string(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n}),\n  \"variants\": zod.array(zod.object({\n  \"name\": zod.string(),\n  \"culture\": zod.string().nullish(),\n  \"state\": zod.enum(['NotCreated', 'Draft', 'Published', 'PublishedPendingChanges'])\n}))\n}))\n})\n\n\nexport const getTreeDocumentRootQuerySkipDefault = 0;export const getTreeDocumentRootQueryTakeDefault = 100;\n\nexport const getTreeDocumentRootQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getTreeDocumentRootQueryTakeDefault),\n  \"dataTypeId\": zod.string().uuid().optional()\n})\n\nexport const getTreeDocumentRootResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"noAccess\": zod.boolean(),\n  \"isTrashed\": zod.boolean(),\n  \"id\": zod.string().uuid(),\n  \"createDate\": zod.string().datetime({\"local\":true}),\n  \"isProtected\": zod.boolean(),\n  \"documentType\": zod.object({\n  \"id\": zod.string().uuid(),\n  \"icon\": zod.string(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n}),\n  \"variants\": zod.array(zod.object({\n  \"name\": zod.string(),\n  \"culture\": zod.string().nullish(),\n  \"state\": zod.enum(['NotCreated', 'Draft', 'Published', 'PublishedPendingChanges'])\n}))\n}))\n})\n\n\nexport const postDynamicRootQueryBody = zod.object({\n  \"context\": zod.object({\n  \"id\": zod.string().uuid().nullish(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish()\n}),\n  \"query\": zod.object({\n  \"origin\": zod.object({\n  \"alias\": zod.string(),\n  \"id\": zod.string().uuid().nullish()\n}),\n  \"steps\": zod.array(zod.object({\n  \"alias\": zod.string(),\n  \"documentTypeIds\": zod.array(zod.string().uuid())\n}))\n})\n})\n\nexport const postDynamicRootQueryResponse = zod.object({\n  \"roots\": zod.array(zod.string().uuid())\n})\n\n\nexport const getDynamicRootStepsResponseItem = zod.string()\nexport const getDynamicRootStepsResponse = zod.array(getDynamicRootStepsResponseItem)\n\n\nexport const getHealthCheckGroupQuerySkipDefault = 0;export const getHealthCheckGroupQueryTakeDefault = 100;\n\nexport const getHealthCheckGroupQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getHealthCheckGroupQueryTakeDefault)\n})\n\nexport const getHealthCheckGroupResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"name\": zod.string()\n}))\n})\n\n\nexport const getHealthCheckGroupByNameParams = zod.object({\n  \"name\": zod.string()\n})\n\nexport const getHealthCheckGroupByNameResponse = zod.object({\n  \"name\": zod.string(),\n  \"checks\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string(),\n  \"description\": zod.string().nullish()\n}))\n})\n\n\nexport const postHealthCheckGroupByNameCheckParams = zod.object({\n  \"name\": zod.string()\n})\n\nexport const postHealthCheckGroupByNameCheckResponse = zod.object({\n  \"checks\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"results\": zod.array(zod.object({\n  \"message\": zod.string(),\n  \"resultType\": zod.enum(['Success', 'Warning', 'Error', 'Info']),\n  \"actions\": zod.array(zod.object({\n  \"healthCheck\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"alias\": zod.string().nullish(),\n  \"name\": zod.string().nullish(),\n  \"description\": zod.string().nullish(),\n  \"valueRequired\": zod.boolean(),\n  \"providedValue\": zod.string().nullish(),\n  \"providedValueValidation\": zod.string().nullish(),\n  \"providedValueValidationRegex\": zod.string().nullish(),\n  \"actionParameters\": zod.record(zod.string(), zod.any()).nullish()\n})).nullish(),\n  \"readMoreLink\": zod.string().nullish()\n})).nullish()\n}))\n})\n\n\nexport const postHealthCheckExecuteActionBody = zod.object({\n  \"healthCheck\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"alias\": zod.string().nullish(),\n  \"name\": zod.string().nullish(),\n  \"description\": zod.string().nullish(),\n  \"valueRequired\": zod.boolean(),\n  \"providedValue\": zod.string().nullish(),\n  \"providedValueValidation\": zod.string().nullish(),\n  \"providedValueValidationRegex\": zod.string().nullish(),\n  \"actionParameters\": zod.record(zod.string(), zod.any()).nullish()\n})\n\nexport const postHealthCheckExecuteActionResponse = zod.object({\n  \"message\": zod.string(),\n  \"resultType\": zod.enum(['Success', 'Warning', 'Error', 'Info']),\n  \"actions\": zod.array(zod.object({\n  \"healthCheck\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"alias\": zod.string().nullish(),\n  \"name\": zod.string().nullish(),\n  \"description\": zod.string().nullish(),\n  \"valueRequired\": zod.boolean(),\n  \"providedValue\": zod.string().nullish(),\n  \"providedValueValidation\": zod.string().nullish(),\n  \"providedValueValidationRegex\": zod.string().nullish(),\n  \"actionParameters\": zod.record(zod.string(), zod.any()).nullish()\n})).nullish(),\n  \"readMoreLink\": zod.string().nullish()\n})\n\n\nexport const getHelpQuerySkipDefault = 0;export const getHelpQueryTakeDefault = 100;export const getHelpQueryBaseUrlDefault = \"https://our.umbraco.com\";\n\nexport const getHelpQueryParams = zod.object({\n  \"section\": zod.string().optional(),\n  \"tree\": zod.string().optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getHelpQueryTakeDefault),\n  \"baseUrl\": zod.string().default(getHelpQueryBaseUrlDefault)\n})\n\nexport const getHelpResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"name\": zod.string().nullish(),\n  \"description\": zod.string().nullish(),\n  \"url\": zod.string().nullish(),\n  \"type\": zod.string().nullish()\n}))\n})\n\n\nexport const getImagingResizeUrlsQueryHeightDefault = 200;export const getImagingResizeUrlsQueryWidthDefault = 200;\n\nexport const getImagingResizeUrlsQueryParams = zod.object({\n  \"id\": zod.array(zod.string().uuid()).optional(),\n  \"height\": zod.coerce.number().default(getImagingResizeUrlsQueryHeightDefault),\n  \"width\": zod.coerce.number().default(getImagingResizeUrlsQueryWidthDefault),\n  \"mode\": zod.enum(['Crop', 'Max', 'Stretch', 'Pad', 'BoxPad', 'Min']).optional()\n})\n\nexport const getImagingResizeUrlsResponseItem = zod.object({\n  \"id\": zod.string().uuid(),\n  \"urlInfos\": zod.array(zod.object({\n  \"culture\": zod.string().nullable(),\n  \"url\": zod.string()\n}))\n})\nexport const getImagingResizeUrlsResponse = zod.array(getImagingResizeUrlsResponseItem)\n\n\nexport const getImportAnalyzeQueryParams = zod.object({\n  \"temporaryFileId\": zod.string().uuid().optional()\n})\n\nexport const getImportAnalyzeResponse = zod.object({\n  \"entityType\": zod.string(),\n  \"alias\": zod.string().nullish(),\n  \"key\": zod.string().uuid().nullish()\n})\n\n\nexport const getIndexerQuerySkipDefault = 0;export const getIndexerQueryTakeDefault = 100;\n\nexport const getIndexerQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getIndexerQueryTakeDefault)\n})\n\nexport const getIndexerResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"name\": zod.string().min(1),\n  \"healthStatus\": zod.object({\n  \"status\": zod.enum(['Healthy', 'Unhealthy', 'Rebuilding', 'Corrupt']),\n  \"message\": zod.string().nullish()\n}),\n  \"canRebuild\": zod.boolean(),\n  \"searcherName\": zod.string(),\n  \"documentCount\": zod.number(),\n  \"fieldCount\": zod.number(),\n  \"providerProperties\": zod.record(zod.string(), zod.any().nullable()).nullish()\n}))\n})\n\n\nexport const getIndexerByIndexNameParams = zod.object({\n  \"indexName\": zod.string()\n})\n\nexport const getIndexerByIndexNameResponse = zod.object({\n  \"name\": zod.string().min(1),\n  \"healthStatus\": zod.object({\n  \"status\": zod.enum(['Healthy', 'Unhealthy', 'Rebuilding', 'Corrupt']),\n  \"message\": zod.string().nullish()\n}),\n  \"canRebuild\": zod.boolean(),\n  \"searcherName\": zod.string(),\n  \"documentCount\": zod.number(),\n  \"fieldCount\": zod.number(),\n  \"providerProperties\": zod.record(zod.string(), zod.any().nullable()).nullish()\n})\n\n\nexport const postIndexerByIndexNameRebuildParams = zod.object({\n  \"indexName\": zod.string()\n})\n\n\nexport const getInstallSettingsResponse = zod.object({\n  \"user\": zod.object({\n  \"minCharLength\": zod.number(),\n  \"minNonAlphaNumericLength\": zod.number(),\n  \"consentLevels\": zod.array(zod.object({\n  \"level\": zod.enum(['Minimal', 'Basic', 'Detailed']),\n  \"description\": zod.string().min(1)\n}))\n}),\n  \"databases\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"sortOrder\": zod.number(),\n  \"displayName\": zod.string().min(1),\n  \"defaultDatabaseName\": zod.string().min(1),\n  \"providerName\": zod.string().min(1),\n  \"isConfigured\": zod.boolean(),\n  \"requiresServer\": zod.boolean(),\n  \"serverPlaceholder\": zod.string().min(1),\n  \"requiresCredentials\": zod.boolean(),\n  \"supportsIntegratedAuthentication\": zod.boolean(),\n  \"requiresConnectionTest\": zod.boolean()\n}))\n})\n\n\nexport const postInstallSetupBodyUserNameMin = 0;\n\nexport const postInstallSetupBodyUserNameMax = 255;\n\n\nexport const postInstallSetupBody = zod.object({\n  \"user\": zod.object({\n  \"name\": zod.string().min(postInstallSetupBodyUserNameMin).max(postInstallSetupBodyUserNameMax),\n  \"email\": zod.string().email().min(1),\n  \"password\": zod.string().min(1),\n  \"subscribeToNewsletter\": zod.boolean()\n}),\n  \"database\": zod.object({\n  \"id\": zod.string().uuid(),\n  \"providerName\": zod.string().min(1),\n  \"server\": zod.string().nullish(),\n  \"name\": zod.string().nullish(),\n  \"username\": zod.string().nullish(),\n  \"password\": zod.string().nullish(),\n  \"useIntegratedAuthentication\": zod.boolean(),\n  \"connectionString\": zod.string().nullish(),\n  \"trustServerCertificate\": zod.boolean()\n}),\n  \"telemetryLevel\": zod.enum(['Minimal', 'Basic', 'Detailed'])\n})\n\n\nexport const postInstallValidateDatabaseBody = zod.object({\n  \"id\": zod.string().uuid(),\n  \"providerName\": zod.string().min(1),\n  \"server\": zod.string().nullish(),\n  \"name\": zod.string().nullish(),\n  \"username\": zod.string().nullish(),\n  \"password\": zod.string().nullish(),\n  \"useIntegratedAuthentication\": zod.boolean(),\n  \"connectionString\": zod.string().nullish(),\n  \"trustServerCertificate\": zod.boolean()\n})\n\n\nexport const getItemLanguageQueryParams = zod.object({\n  \"isoCode\": zod.array(zod.string()).optional()\n})\n\nexport const getItemLanguageResponseItem = zod.object({\n  \"name\": zod.string().min(1),\n  \"isoCode\": zod.string().min(1)\n})\nexport const getItemLanguageResponse = zod.array(getItemLanguageResponseItem)\n\n\nexport const getItemLanguageDefaultResponse = zod.object({\n  \"name\": zod.string().min(1),\n  \"isoCode\": zod.string().min(1)\n})\n\n\nexport const getLanguageQuerySkipDefault = 0;export const getLanguageQueryTakeDefault = 100;\n\nexport const getLanguageQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getLanguageQueryTakeDefault)\n})\n\nexport const getLanguageResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"name\": zod.string().min(1),\n  \"isDefault\": zod.boolean(),\n  \"isMandatory\": zod.boolean(),\n  \"fallbackIsoCode\": zod.string().nullish(),\n  \"isoCode\": zod.string().min(1)\n}))\n})\n\n\nexport const postLanguageBody = zod.object({\n  \"name\": zod.string().min(1),\n  \"isDefault\": zod.boolean(),\n  \"isMandatory\": zod.boolean(),\n  \"fallbackIsoCode\": zod.string().nullish(),\n  \"isoCode\": zod.string().min(1)\n})\n\n\nexport const getLanguageByIsoCodeParams = zod.object({\n  \"isoCode\": zod.string()\n})\n\nexport const getLanguageByIsoCodeResponse = zod.object({\n  \"name\": zod.string().min(1),\n  \"isDefault\": zod.boolean(),\n  \"isMandatory\": zod.boolean(),\n  \"fallbackIsoCode\": zod.string().nullish(),\n  \"isoCode\": zod.string().min(1)\n})\n\n\nexport const deleteLanguageByIsoCodeParams = zod.object({\n  \"isoCode\": zod.string()\n})\n\n\nexport const putLanguageByIsoCodeParams = zod.object({\n  \"isoCode\": zod.string()\n})\n\nexport const putLanguageByIsoCodeBody = zod.object({\n  \"name\": zod.string().min(1),\n  \"isDefault\": zod.boolean(),\n  \"isMandatory\": zod.boolean(),\n  \"fallbackIsoCode\": zod.string().nullish()\n})\n\n\nexport const getLogViewerLevelQuerySkipDefault = 0;export const getLogViewerLevelQueryTakeDefault = 100;\n\nexport const getLogViewerLevelQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getLogViewerLevelQueryTakeDefault)\n})\n\nexport const getLogViewerLevelResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"name\": zod.string(),\n  \"level\": zod.enum(['Verbose', 'Debug', 'Information', 'Warning', 'Error', 'Fatal'])\n}))\n})\n\n\nexport const getLogViewerLevelCountQueryParams = zod.object({\n  \"startDate\": zod.string().datetime({\"local\":true}).optional(),\n  \"endDate\": zod.string().datetime({\"local\":true}).optional()\n})\n\nexport const getLogViewerLevelCountResponse = zod.object({\n  \"information\": zod.number(),\n  \"debug\": zod.number(),\n  \"warning\": zod.number(),\n  \"error\": zod.number(),\n  \"fatal\": zod.number()\n})\n\n\nexport const getLogViewerLogQuerySkipDefault = 0;export const getLogViewerLogQueryTakeDefault = 100;\n\nexport const getLogViewerLogQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getLogViewerLogQueryTakeDefault),\n  \"orderDirection\": zod.enum(['Ascending', 'Descending']).optional(),\n  \"filterExpression\": zod.string().optional(),\n  \"logLevel\": zod.array(zod.enum(['Verbose', 'Debug', 'Information', 'Warning', 'Error', 'Fatal'])).optional(),\n  \"startDate\": zod.string().datetime({\"local\":true}).optional(),\n  \"endDate\": zod.string().datetime({\"local\":true}).optional()\n})\n\nexport const getLogViewerLogResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"timestamp\": zod.string().datetime({\"local\":true}),\n  \"level\": zod.enum(['Verbose', 'Debug', 'Information', 'Warning', 'Error', 'Fatal']),\n  \"messageTemplate\": zod.string().nullish(),\n  \"renderedMessage\": zod.string().nullish(),\n  \"properties\": zod.array(zod.object({\n  \"name\": zod.string(),\n  \"value\": zod.string().nullish()\n})),\n  \"exception\": zod.string().nullish()\n}))\n})\n\n\nexport const getLogViewerMessageTemplateQuerySkipDefault = 0;export const getLogViewerMessageTemplateQueryTakeDefault = 100;\n\nexport const getLogViewerMessageTemplateQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getLogViewerMessageTemplateQueryTakeDefault),\n  \"startDate\": zod.string().datetime({\"local\":true}).optional(),\n  \"endDate\": zod.string().datetime({\"local\":true}).optional()\n})\n\nexport const getLogViewerMessageTemplateResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"messageTemplate\": zod.string().nullish(),\n  \"count\": zod.number()\n}))\n})\n\n\nexport const getLogViewerSavedSearchQuerySkipDefault = 0;export const getLogViewerSavedSearchQueryTakeDefault = 100;\n\nexport const getLogViewerSavedSearchQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getLogViewerSavedSearchQueryTakeDefault)\n})\n\nexport const getLogViewerSavedSearchResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"name\": zod.string(),\n  \"query\": zod.string()\n}))\n})\n\n\nexport const postLogViewerSavedSearchBody = zod.object({\n  \"name\": zod.string(),\n  \"query\": zod.string()\n})\n\n\nexport const getLogViewerSavedSearchByNameParams = zod.object({\n  \"name\": zod.string()\n})\n\nexport const getLogViewerSavedSearchByNameResponse = zod.object({\n  \"name\": zod.string(),\n  \"query\": zod.string()\n})\n\n\nexport const deleteLogViewerSavedSearchByNameParams = zod.object({\n  \"name\": zod.string()\n})\n\n\nexport const getLogViewerValidateLogsSizeQueryParams = zod.object({\n  \"startDate\": zod.string().datetime({\"local\":true}).optional(),\n  \"endDate\": zod.string().datetime({\"local\":true}).optional()\n})\n\n\nexport const getManifestManifestResponseItem = zod.object({\n  \"name\": zod.string().min(1),\n  \"id\": zod.string().nullish(),\n  \"version\": zod.string().nullish(),\n  \"extensions\": zod.array(zod.any())\n})\nexport const getManifestManifestResponse = zod.array(getManifestManifestResponseItem)\n\n\nexport const getManifestManifestPrivateResponseItem = zod.object({\n  \"name\": zod.string().min(1),\n  \"id\": zod.string().nullish(),\n  \"version\": zod.string().nullish(),\n  \"extensions\": zod.array(zod.any())\n})\nexport const getManifestManifestPrivateResponse = zod.array(getManifestManifestPrivateResponseItem)\n\n\nexport const getManifestManifestPublicResponseItem = zod.object({\n  \"name\": zod.string().min(1),\n  \"id\": zod.string().nullish(),\n  \"version\": zod.string().nullish(),\n  \"extensions\": zod.array(zod.any())\n})\nexport const getManifestManifestPublicResponse = zod.array(getManifestManifestPublicResponseItem)\n\n\nexport const getItemMediaTypeQueryParams = zod.object({\n  \"id\": zod.array(zod.string().uuid()).optional()\n})\n\nexport const getItemMediaTypeResponseItem = zod.object({\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string(),\n  \"icon\": zod.string().nullish()\n})\nexport const getItemMediaTypeResponse = zod.array(getItemMediaTypeResponseItem)\n\n\nexport const getItemMediaTypeAllowedQuerySkipDefault = 0;export const getItemMediaTypeAllowedQueryTakeDefault = 100;\n\nexport const getItemMediaTypeAllowedQueryParams = zod.object({\n  \"fileExtension\": zod.string().optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getItemMediaTypeAllowedQueryTakeDefault)\n})\n\nexport const getItemMediaTypeAllowedResponse = zod.object({\n  \"items\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string(),\n  \"icon\": zod.string().nullish()\n})),\n  \"total\": zod.number()\n})\n\n\nexport const getItemMediaTypeFoldersQuerySkipDefault = 0;export const getItemMediaTypeFoldersQueryTakeDefault = 100;\n\nexport const getItemMediaTypeFoldersQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getItemMediaTypeFoldersQueryTakeDefault)\n})\n\nexport const getItemMediaTypeFoldersResponse = zod.object({\n  \"items\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string(),\n  \"icon\": zod.string().nullish()\n})),\n  \"total\": zod.number()\n})\n\n\nexport const getItemMediaTypeSearchQuerySkipDefault = 0;export const getItemMediaTypeSearchQueryTakeDefault = 100;\n\nexport const getItemMediaTypeSearchQueryParams = zod.object({\n  \"query\": zod.string().optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getItemMediaTypeSearchQueryTakeDefault)\n})\n\nexport const getItemMediaTypeSearchResponse = zod.object({\n  \"items\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string(),\n  \"icon\": zod.string().nullish()\n})),\n  \"total\": zod.number()\n})\n\n\nexport const postMediaTypeBody = zod.object({\n  \"alias\": zod.string().min(1),\n  \"name\": zod.string().min(1),\n  \"description\": zod.string().nullish(),\n  \"icon\": zod.string().min(1),\n  \"allowedAsRoot\": zod.boolean(),\n  \"variesByCulture\": zod.boolean(),\n  \"variesBySegment\": zod.boolean(),\n  \"isElement\": zod.boolean(),\n  \"properties\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"container\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"sortOrder\": zod.number(),\n  \"alias\": zod.string().min(1),\n  \"name\": zod.string().min(1),\n  \"description\": zod.string().nullish(),\n  \"dataType\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"variesByCulture\": zod.boolean(),\n  \"variesBySegment\": zod.boolean(),\n  \"validation\": zod.object({\n  \"mandatory\": zod.boolean(),\n  \"mandatoryMessage\": zod.string().nullish(),\n  \"regEx\": zod.string().nullish(),\n  \"regExMessage\": zod.string().nullish()\n}),\n  \"appearance\": zod.object({\n  \"labelOnTop\": zod.boolean()\n})\n})),\n  \"containers\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"name\": zod.string().nullish(),\n  \"type\": zod.string().min(1),\n  \"sortOrder\": zod.number()\n})),\n  \"id\": zod.string().uuid().nullish(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"allowedMediaTypes\": zod.array(zod.object({\n  \"mediaType\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"sortOrder\": zod.number()\n})),\n  \"compositions\": zod.array(zod.object({\n  \"mediaType\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"compositionType\": zod.enum(['Composition', 'Inheritance'])\n})),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n})\n\n\nexport const getMediaTypeByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getMediaTypeByIdResponse = zod.object({\n  \"alias\": zod.string().min(1),\n  \"name\": zod.string().min(1),\n  \"description\": zod.string().nullish(),\n  \"icon\": zod.string().min(1),\n  \"allowedAsRoot\": zod.boolean(),\n  \"variesByCulture\": zod.boolean(),\n  \"variesBySegment\": zod.boolean(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"isElement\": zod.boolean(),\n  \"properties\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"container\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"sortOrder\": zod.number(),\n  \"alias\": zod.string().min(1),\n  \"name\": zod.string().min(1),\n  \"description\": zod.string().nullish(),\n  \"dataType\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"variesByCulture\": zod.boolean(),\n  \"variesBySegment\": zod.boolean(),\n  \"validation\": zod.object({\n  \"mandatory\": zod.boolean(),\n  \"mandatoryMessage\": zod.string().nullish(),\n  \"regEx\": zod.string().nullish(),\n  \"regExMessage\": zod.string().nullish()\n}),\n  \"appearance\": zod.object({\n  \"labelOnTop\": zod.boolean()\n})\n})),\n  \"containers\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"name\": zod.string().nullish(),\n  \"type\": zod.string().min(1),\n  \"sortOrder\": zod.number()\n})),\n  \"id\": zod.string().uuid(),\n  \"allowedMediaTypes\": zod.array(zod.object({\n  \"mediaType\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"sortOrder\": zod.number()\n})),\n  \"compositions\": zod.array(zod.object({\n  \"mediaType\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"compositionType\": zod.enum(['Composition', 'Inheritance'])\n})),\n  \"isDeletable\": zod.boolean(),\n  \"aliasCanBeChanged\": zod.boolean()\n})\n\n\nexport const deleteMediaTypeByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\n\nexport const putMediaTypeByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putMediaTypeByIdBody = zod.object({\n  \"alias\": zod.string().min(1),\n  \"name\": zod.string().min(1),\n  \"description\": zod.string().nullish(),\n  \"icon\": zod.string().min(1),\n  \"allowedAsRoot\": zod.boolean(),\n  \"variesByCulture\": zod.boolean(),\n  \"variesBySegment\": zod.boolean(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"isElement\": zod.boolean(),\n  \"properties\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"container\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"sortOrder\": zod.number(),\n  \"alias\": zod.string().min(1),\n  \"name\": zod.string().min(1),\n  \"description\": zod.string().nullish(),\n  \"dataType\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"variesByCulture\": zod.boolean(),\n  \"variesBySegment\": zod.boolean(),\n  \"validation\": zod.object({\n  \"mandatory\": zod.boolean(),\n  \"mandatoryMessage\": zod.string().nullish(),\n  \"regEx\": zod.string().nullish(),\n  \"regExMessage\": zod.string().nullish()\n}),\n  \"appearance\": zod.object({\n  \"labelOnTop\": zod.boolean()\n})\n})),\n  \"containers\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"name\": zod.string().nullish(),\n  \"type\": zod.string().min(1),\n  \"sortOrder\": zod.number()\n})),\n  \"allowedMediaTypes\": zod.array(zod.object({\n  \"mediaType\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"sortOrder\": zod.number()\n})),\n  \"compositions\": zod.array(zod.object({\n  \"mediaType\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"compositionType\": zod.enum(['Composition', 'Inheritance'])\n}))\n})\n\n\nexport const getMediaTypeByIdAllowedChildrenParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getMediaTypeByIdAllowedChildrenQuerySkipDefault = 0;export const getMediaTypeByIdAllowedChildrenQueryTakeDefault = 100;\n\nexport const getMediaTypeByIdAllowedChildrenQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getMediaTypeByIdAllowedChildrenQueryTakeDefault)\n})\n\nexport const getMediaTypeByIdAllowedChildrenResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string(),\n  \"description\": zod.string().nullish(),\n  \"icon\": zod.string().nullish()\n}))\n})\n\n\nexport const getMediaTypeByIdCompositionReferencesParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getMediaTypeByIdCompositionReferencesResponseItem = zod.object({\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string(),\n  \"icon\": zod.string()\n})\nexport const getMediaTypeByIdCompositionReferencesResponse = zod.array(getMediaTypeByIdCompositionReferencesResponseItem)\n\n\nexport const postMediaTypeByIdCopyParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const postMediaTypeByIdCopyBody = zod.object({\n  \"target\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n})\n\n\nexport const getMediaTypeByIdExportParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getMediaTypeByIdExportResponse = zod.instanceof(FileLike)\n\n\nexport const putMediaTypeByIdImportParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putMediaTypeByIdImportBody = zod.object({\n  \"file\": zod.object({\n  \"id\": zod.string().uuid()\n})\n})\n\n\nexport const putMediaTypeByIdMoveParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putMediaTypeByIdMoveBody = zod.object({\n  \"target\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n})\n\n\nexport const getMediaTypeAllowedAtRootQuerySkipDefault = 0;export const getMediaTypeAllowedAtRootQueryTakeDefault = 100;\n\nexport const getMediaTypeAllowedAtRootQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getMediaTypeAllowedAtRootQueryTakeDefault)\n})\n\nexport const getMediaTypeAllowedAtRootResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string(),\n  \"description\": zod.string().nullish(),\n  \"icon\": zod.string().nullish()\n}))\n})\n\n\nexport const postMediaTypeAvailableCompositionsBody = zod.object({\n  \"id\": zod.string().uuid().nullish(),\n  \"currentPropertyAliases\": zod.array(zod.string()),\n  \"currentCompositeIds\": zod.array(zod.string().uuid())\n})\n\nexport const postMediaTypeAvailableCompositionsResponseItem = zod.object({\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string(),\n  \"icon\": zod.string(),\n  \"folderPath\": zod.array(zod.string()),\n  \"isCompatible\": zod.boolean()\n})\nexport const postMediaTypeAvailableCompositionsResponse = zod.array(postMediaTypeAvailableCompositionsResponseItem)\n\n\nexport const getMediaTypeConfigurationResponse = zod.object({\n  \"reservedFieldNames\": zod.array(zod.string())\n})\n\n\nexport const postMediaTypeFolderBody = zod.object({\n  \"name\": zod.string().min(1),\n  \"id\": zod.string().uuid().nullish(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n})\n\n\nexport const getMediaTypeFolderByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getMediaTypeFolderByIdResponse = zod.object({\n  \"name\": zod.string().min(1),\n  \"id\": zod.string().uuid()\n})\n\n\nexport const deleteMediaTypeFolderByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\n\nexport const putMediaTypeFolderByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putMediaTypeFolderByIdBody = zod.object({\n  \"name\": zod.string().min(1)\n})\n\n\nexport const postMediaTypeImportBody = zod.object({\n  \"file\": zod.object({\n  \"id\": zod.string().uuid()\n})\n})\n\n\nexport const getTreeMediaTypeAncestorsQueryParams = zod.object({\n  \"descendantId\": zod.string().uuid().optional()\n})\n\nexport const getTreeMediaTypeAncestorsResponseItem = zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"id\": zod.string().uuid(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"name\": zod.string(),\n  \"isFolder\": zod.boolean(),\n  \"icon\": zod.string(),\n  \"isDeletable\": zod.boolean()\n})\nexport const getTreeMediaTypeAncestorsResponse = zod.array(getTreeMediaTypeAncestorsResponseItem)\n\n\nexport const getTreeMediaTypeChildrenQuerySkipDefault = 0;export const getTreeMediaTypeChildrenQueryTakeDefault = 100;export const getTreeMediaTypeChildrenQueryFoldersOnlyDefault = false;\n\nexport const getTreeMediaTypeChildrenQueryParams = zod.object({\n  \"parentId\": zod.string().uuid().optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getTreeMediaTypeChildrenQueryTakeDefault),\n  \"foldersOnly\": zod.coerce.boolean().optional()\n})\n\nexport const getTreeMediaTypeChildrenResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"id\": zod.string().uuid(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"name\": zod.string(),\n  \"isFolder\": zod.boolean(),\n  \"icon\": zod.string(),\n  \"isDeletable\": zod.boolean()\n}))\n})\n\n\nexport const getTreeMediaTypeRootQuerySkipDefault = 0;export const getTreeMediaTypeRootQueryTakeDefault = 100;export const getTreeMediaTypeRootQueryFoldersOnlyDefault = false;\n\nexport const getTreeMediaTypeRootQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getTreeMediaTypeRootQueryTakeDefault),\n  \"foldersOnly\": zod.coerce.boolean().optional()\n})\n\nexport const getTreeMediaTypeRootResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"id\": zod.string().uuid(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"name\": zod.string(),\n  \"isFolder\": zod.boolean(),\n  \"icon\": zod.string(),\n  \"isDeletable\": zod.boolean()\n}))\n})\n\n\nexport const getCollectionMediaQueryOrderByDefault = \"updateDate\";export const getCollectionMediaQuerySkipDefault = 0;export const getCollectionMediaQueryTakeDefault = 100;\n\nexport const getCollectionMediaQueryParams = zod.object({\n  \"id\": zod.string().uuid().optional(),\n  \"dataTypeId\": zod.string().uuid().optional(),\n  \"orderBy\": zod.string().default(getCollectionMediaQueryOrderByDefault),\n  \"orderDirection\": zod.enum(['Ascending', 'Descending']).optional(),\n  \"filter\": zod.string().optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getCollectionMediaQueryTakeDefault)\n})\n\nexport const getCollectionMediaResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"values\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"alias\": zod.string().min(1),\n  \"value\": zod.any().nullish(),\n  \"editorAlias\": zod.string().min(1)\n})),\n  \"variants\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"name\": zod.string().min(1),\n  \"createDate\": zod.string().datetime({\"local\":true}),\n  \"updateDate\": zod.string().datetime({\"local\":true})\n})),\n  \"id\": zod.string().uuid(),\n  \"creator\": zod.string().nullish(),\n  \"sortOrder\": zod.number(),\n  \"mediaType\": zod.object({\n  \"id\": zod.string().uuid(),\n  \"alias\": zod.string(),\n  \"icon\": zod.string()\n})\n}))\n})\n\n\nexport const getItemMediaQueryParams = zod.object({\n  \"id\": zod.array(zod.string().uuid()).optional()\n})\n\nexport const getItemMediaResponseItem = zod.object({\n  \"id\": zod.string().uuid(),\n  \"isTrashed\": zod.boolean(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"hasChildren\": zod.boolean(),\n  \"mediaType\": zod.object({\n  \"id\": zod.string().uuid(),\n  \"icon\": zod.string(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n}),\n  \"variants\": zod.array(zod.object({\n  \"name\": zod.string(),\n  \"culture\": zod.string().nullish()\n}))\n})\nexport const getItemMediaResponse = zod.array(getItemMediaResponseItem)\n\n\nexport const getItemMediaSearchQuerySkipDefault = 0;export const getItemMediaSearchQueryTakeDefault = 100;\n\nexport const getItemMediaSearchQueryParams = zod.object({\n  \"query\": zod.string().optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getItemMediaSearchQueryTakeDefault),\n  \"parentId\": zod.string().uuid().optional(),\n  \"allowedMediaTypes\": zod.array(zod.string().uuid()).optional()\n})\n\nexport const getItemMediaSearchResponse = zod.object({\n  \"items\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"isTrashed\": zod.boolean(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"hasChildren\": zod.boolean(),\n  \"mediaType\": zod.object({\n  \"id\": zod.string().uuid(),\n  \"icon\": zod.string(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n}),\n  \"variants\": zod.array(zod.object({\n  \"name\": zod.string(),\n  \"culture\": zod.string().nullish()\n}))\n})),\n  \"total\": zod.number()\n})\n\n\nexport const postMediaBody = zod.object({\n  \"values\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"alias\": zod.string().min(1),\n  \"value\": zod.any().nullish()\n})),\n  \"variants\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"name\": zod.string().min(1)\n})),\n  \"id\": zod.string().uuid().nullish(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"mediaType\": zod.object({\n  \"id\": zod.string().uuid()\n})\n})\n\n\nexport const getMediaByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getMediaByIdResponse = zod.object({\n  \"values\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"alias\": zod.string().min(1),\n  \"value\": zod.any().nullish(),\n  \"editorAlias\": zod.string().min(1)\n})),\n  \"variants\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"name\": zod.string().min(1),\n  \"createDate\": zod.string().datetime({\"local\":true}),\n  \"updateDate\": zod.string().datetime({\"local\":true})\n})),\n  \"id\": zod.string().uuid(),\n  \"urls\": zod.array(zod.object({\n  \"culture\": zod.string().nullable(),\n  \"url\": zod.string()\n})),\n  \"isTrashed\": zod.boolean(),\n  \"mediaType\": zod.object({\n  \"id\": zod.string().uuid(),\n  \"icon\": zod.string(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n})\n})\n\n\nexport const deleteMediaByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\n\nexport const putMediaByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putMediaByIdBody = zod.object({\n  \"values\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"alias\": zod.string().min(1),\n  \"value\": zod.any().nullish()\n})),\n  \"variants\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"name\": zod.string().min(1)\n}))\n})\n\n\nexport const getMediaByIdAuditLogParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getMediaByIdAuditLogQuerySkipDefault = 0;export const getMediaByIdAuditLogQueryTakeDefault = 100;\n\nexport const getMediaByIdAuditLogQueryParams = zod.object({\n  \"orderDirection\": zod.enum(['Ascending', 'Descending']).optional(),\n  \"sinceDate\": zod.string().datetime({\"local\":true}).optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getMediaByIdAuditLogQueryTakeDefault)\n})\n\nexport const getMediaByIdAuditLogResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"user\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"timestamp\": zod.string().datetime({\"local\":true}),\n  \"logType\": zod.enum(['New', 'Save', 'SaveVariant', 'Open', 'Delete', 'Publish', 'PublishVariant', 'SendToPublish', 'SendToPublishVariant', 'Unpublish', 'UnpublishVariant', 'Move', 'Copy', 'AssignDomain', 'PublicAccess', 'Sort', 'Notify', 'System', 'RollBack', 'PackagerInstall', 'PackagerUninstall', 'Custom', 'ContentVersionPreventCleanup', 'ContentVersionEnableCleanup']),\n  \"comment\": zod.string().nullish(),\n  \"parameters\": zod.string().nullish()\n}))\n})\n\n\nexport const putMediaByIdMoveParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putMediaByIdMoveBody = zod.object({\n  \"target\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n})\n\n\nexport const putMediaByIdMoveToRecycleBinParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\n\nexport const getMediaByIdReferencedByParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getMediaByIdReferencedByQuerySkipDefault = 0;export const getMediaByIdReferencedByQueryTakeDefault = 20;\n\nexport const getMediaByIdReferencedByQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getMediaByIdReferencedByQueryTakeDefault)\n})\n\nexport const getMediaByIdReferencedByResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"$type\": zod.enum(['DefaultReferenceResponseModel']),\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string().nullish(),\n  \"type\": zod.string().nullish(),\n  \"icon\": zod.string().nullish()\n}).or(zod.object({\n  \"$type\": zod.enum(['DocumentReferenceResponseModel']),\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string().nullish(),\n  \"published\": zod.boolean().nullish(),\n  \"documentType\": zod.object({\n  \"icon\": zod.string().nullish(),\n  \"alias\": zod.string().nullish(),\n  \"name\": zod.string().nullish()\n})\n})).or(zod.object({\n  \"$type\": zod.enum(['MediaReferenceResponseModel']),\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string().nullish(),\n  \"mediaType\": zod.object({\n  \"icon\": zod.string().nullish(),\n  \"alias\": zod.string().nullish(),\n  \"name\": zod.string().nullish()\n})\n})))\n})\n\n\nexport const getMediaByIdReferencedDescendantsParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getMediaByIdReferencedDescendantsQuerySkipDefault = 0;export const getMediaByIdReferencedDescendantsQueryTakeDefault = 20;\n\nexport const getMediaByIdReferencedDescendantsQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getMediaByIdReferencedDescendantsQueryTakeDefault)\n})\n\nexport const getMediaByIdReferencedDescendantsResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"id\": zod.string().uuid()\n}))\n})\n\n\nexport const putMediaByIdValidateParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putMediaByIdValidateBody = zod.object({\n  \"values\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"alias\": zod.string().min(1),\n  \"value\": zod.any().nullish()\n})),\n  \"variants\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"name\": zod.string().min(1)\n}))\n})\n\n\nexport const getMediaAreReferencedQuerySkipDefault = 0;export const getMediaAreReferencedQueryTakeDefault = 20;\n\nexport const getMediaAreReferencedQueryParams = zod.object({\n  \"id\": zod.array(zod.string().uuid()).optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getMediaAreReferencedQueryTakeDefault)\n})\n\nexport const getMediaAreReferencedResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"id\": zod.string().uuid()\n}))\n})\n\n\nexport const getMediaConfigurationResponse = zod.object({\n  \"disableDeleteWhenReferenced\": zod.boolean(),\n  \"disableUnpublishWhenReferenced\": zod.boolean(),\n  \"reservedFieldNames\": zod.array(zod.string())\n})\n\n\nexport const putMediaSortBody = zod.object({\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"sorting\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"sortOrder\": zod.number()\n}))\n})\n\n\nexport const getMediaUrlsQueryParams = zod.object({\n  \"id\": zod.array(zod.string().uuid()).optional()\n})\n\nexport const getMediaUrlsResponseItem = zod.object({\n  \"id\": zod.string().uuid(),\n  \"urlInfos\": zod.array(zod.object({\n  \"culture\": zod.string().nullable(),\n  \"url\": zod.string()\n}))\n})\nexport const getMediaUrlsResponse = zod.array(getMediaUrlsResponseItem)\n\n\nexport const postMediaValidateBody = zod.object({\n  \"values\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"alias\": zod.string().min(1),\n  \"value\": zod.any().nullish()\n})),\n  \"variants\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"name\": zod.string().min(1)\n})),\n  \"id\": zod.string().uuid().nullish(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"mediaType\": zod.object({\n  \"id\": zod.string().uuid()\n})\n})\n\n\nexport const deleteRecycleBinMediaByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\n\nexport const getRecycleBinMediaByIdOriginalParentParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getRecycleBinMediaByIdOriginalParentResponse = zod.object({\n  \"id\": zod.string().uuid()\n})\n\n\nexport const putRecycleBinMediaByIdRestoreParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putRecycleBinMediaByIdRestoreBody = zod.object({\n  \"target\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n})\n\n\nexport const getRecycleBinMediaChildrenQuerySkipDefault = 0;export const getRecycleBinMediaChildrenQueryTakeDefault = 100;\n\nexport const getRecycleBinMediaChildrenQueryParams = zod.object({\n  \"parentId\": zod.string().uuid().optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getRecycleBinMediaChildrenQueryTakeDefault)\n})\n\nexport const getRecycleBinMediaChildrenResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"createDate\": zod.string().datetime({\"local\":true}),\n  \"hasChildren\": zod.boolean(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"mediaType\": zod.object({\n  \"id\": zod.string().uuid(),\n  \"icon\": zod.string(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n}),\n  \"variants\": zod.array(zod.object({\n  \"name\": zod.string(),\n  \"culture\": zod.string().nullish()\n}))\n}))\n})\n\n\nexport const getRecycleBinMediaRootQuerySkipDefault = 0;export const getRecycleBinMediaRootQueryTakeDefault = 100;\n\nexport const getRecycleBinMediaRootQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getRecycleBinMediaRootQueryTakeDefault)\n})\n\nexport const getRecycleBinMediaRootResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"createDate\": zod.string().datetime({\"local\":true}),\n  \"hasChildren\": zod.boolean(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"mediaType\": zod.object({\n  \"id\": zod.string().uuid(),\n  \"icon\": zod.string(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n}),\n  \"variants\": zod.array(zod.object({\n  \"name\": zod.string(),\n  \"culture\": zod.string().nullish()\n}))\n}))\n})\n\n\nexport const getTreeMediaAncestorsQueryParams = zod.object({\n  \"descendantId\": zod.string().uuid().optional()\n})\n\nexport const getTreeMediaAncestorsResponseItem = zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"noAccess\": zod.boolean(),\n  \"isTrashed\": zod.boolean(),\n  \"id\": zod.string().uuid(),\n  \"createDate\": zod.string().datetime({\"local\":true}),\n  \"mediaType\": zod.object({\n  \"id\": zod.string().uuid(),\n  \"icon\": zod.string(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n}),\n  \"variants\": zod.array(zod.object({\n  \"name\": zod.string(),\n  \"culture\": zod.string().nullish()\n}))\n})\nexport const getTreeMediaAncestorsResponse = zod.array(getTreeMediaAncestorsResponseItem)\n\n\nexport const getTreeMediaChildrenQuerySkipDefault = 0;export const getTreeMediaChildrenQueryTakeDefault = 100;\n\nexport const getTreeMediaChildrenQueryParams = zod.object({\n  \"parentId\": zod.string().uuid().optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getTreeMediaChildrenQueryTakeDefault),\n  \"dataTypeId\": zod.string().uuid().optional()\n})\n\nexport const getTreeMediaChildrenResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"noAccess\": zod.boolean(),\n  \"isTrashed\": zod.boolean(),\n  \"id\": zod.string().uuid(),\n  \"createDate\": zod.string().datetime({\"local\":true}),\n  \"mediaType\": zod.object({\n  \"id\": zod.string().uuid(),\n  \"icon\": zod.string(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n}),\n  \"variants\": zod.array(zod.object({\n  \"name\": zod.string(),\n  \"culture\": zod.string().nullish()\n}))\n}))\n})\n\n\nexport const getTreeMediaRootQuerySkipDefault = 0;export const getTreeMediaRootQueryTakeDefault = 100;\n\nexport const getTreeMediaRootQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getTreeMediaRootQueryTakeDefault),\n  \"dataTypeId\": zod.string().uuid().optional()\n})\n\nexport const getTreeMediaRootResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"noAccess\": zod.boolean(),\n  \"isTrashed\": zod.boolean(),\n  \"id\": zod.string().uuid(),\n  \"createDate\": zod.string().datetime({\"local\":true}),\n  \"mediaType\": zod.object({\n  \"id\": zod.string().uuid(),\n  \"icon\": zod.string(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n}),\n  \"variants\": zod.array(zod.object({\n  \"name\": zod.string(),\n  \"culture\": zod.string().nullish()\n}))\n}))\n})\n\n\nexport const getItemMemberGroupQueryParams = zod.object({\n  \"id\": zod.array(zod.string().uuid()).optional()\n})\n\nexport const getItemMemberGroupResponseItem = zod.object({\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string()\n})\nexport const getItemMemberGroupResponse = zod.array(getItemMemberGroupResponseItem)\n\n\nexport const getMemberGroupQuerySkipDefault = 0;export const getMemberGroupQueryTakeDefault = 100;\n\nexport const getMemberGroupQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getMemberGroupQueryTakeDefault)\n})\n\nexport const getMemberGroupResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"name\": zod.string(),\n  \"id\": zod.string().uuid()\n}))\n})\n\n\nexport const postMemberGroupBody = zod.object({\n  \"name\": zod.string(),\n  \"id\": zod.string().uuid().nullish()\n})\n\n\nexport const getMemberGroupByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getMemberGroupByIdResponse = zod.object({\n  \"name\": zod.string(),\n  \"id\": zod.string().uuid()\n})\n\n\nexport const deleteMemberGroupByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\n\nexport const putMemberGroupByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putMemberGroupByIdBody = zod.object({\n  \"name\": zod.string()\n})\n\n\nexport const getTreeMemberGroupRootQuerySkipDefault = 0;export const getTreeMemberGroupRootQueryTakeDefault = 100;\n\nexport const getTreeMemberGroupRootQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getTreeMemberGroupRootQueryTakeDefault)\n})\n\nexport const getTreeMemberGroupRootResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"id\": zod.string().uuid(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"name\": zod.string()\n}))\n})\n\n\nexport const getItemMemberTypeQueryParams = zod.object({\n  \"id\": zod.array(zod.string().uuid()).optional()\n})\n\nexport const getItemMemberTypeResponseItem = zod.object({\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string(),\n  \"icon\": zod.string().nullish()\n})\nexport const getItemMemberTypeResponse = zod.array(getItemMemberTypeResponseItem)\n\n\nexport const getItemMemberTypeSearchQuerySkipDefault = 0;export const getItemMemberTypeSearchQueryTakeDefault = 100;\n\nexport const getItemMemberTypeSearchQueryParams = zod.object({\n  \"query\": zod.string().optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getItemMemberTypeSearchQueryTakeDefault)\n})\n\nexport const getItemMemberTypeSearchResponse = zod.object({\n  \"items\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string(),\n  \"icon\": zod.string().nullish()\n})),\n  \"total\": zod.number()\n})\n\n\nexport const postMemberTypeBody = zod.object({\n  \"alias\": zod.string().min(1),\n  \"name\": zod.string().min(1),\n  \"description\": zod.string().nullish(),\n  \"icon\": zod.string().min(1),\n  \"allowedAsRoot\": zod.boolean(),\n  \"variesByCulture\": zod.boolean(),\n  \"variesBySegment\": zod.boolean(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"isElement\": zod.boolean(),\n  \"properties\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"container\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"sortOrder\": zod.number(),\n  \"alias\": zod.string().min(1),\n  \"name\": zod.string().min(1),\n  \"description\": zod.string().nullish(),\n  \"dataType\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"variesByCulture\": zod.boolean(),\n  \"variesBySegment\": zod.boolean(),\n  \"validation\": zod.object({\n  \"mandatory\": zod.boolean(),\n  \"mandatoryMessage\": zod.string().nullish(),\n  \"regEx\": zod.string().nullish(),\n  \"regExMessage\": zod.string().nullish()\n}),\n  \"appearance\": zod.object({\n  \"labelOnTop\": zod.boolean()\n}),\n  \"isSensitive\": zod.boolean(),\n  \"visibility\": zod.object({\n  \"memberCanView\": zod.boolean(),\n  \"memberCanEdit\": zod.boolean()\n})\n})),\n  \"containers\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"name\": zod.string().nullish(),\n  \"type\": zod.string().min(1),\n  \"sortOrder\": zod.number()\n})),\n  \"id\": zod.string().uuid().nullish(),\n  \"compositions\": zod.array(zod.object({\n  \"memberType\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"compositionType\": zod.enum(['Composition', 'Inheritance'])\n}))\n})\n\n\nexport const getMemberTypeByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getMemberTypeByIdResponse = zod.object({\n  \"alias\": zod.string().min(1),\n  \"name\": zod.string().min(1),\n  \"description\": zod.string().nullish(),\n  \"icon\": zod.string().min(1),\n  \"allowedAsRoot\": zod.boolean(),\n  \"variesByCulture\": zod.boolean(),\n  \"variesBySegment\": zod.boolean(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"isElement\": zod.boolean(),\n  \"properties\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"container\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"sortOrder\": zod.number(),\n  \"alias\": zod.string().min(1),\n  \"name\": zod.string().min(1),\n  \"description\": zod.string().nullish(),\n  \"dataType\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"variesByCulture\": zod.boolean(),\n  \"variesBySegment\": zod.boolean(),\n  \"validation\": zod.object({\n  \"mandatory\": zod.boolean(),\n  \"mandatoryMessage\": zod.string().nullish(),\n  \"regEx\": zod.string().nullish(),\n  \"regExMessage\": zod.string().nullish()\n}),\n  \"appearance\": zod.object({\n  \"labelOnTop\": zod.boolean()\n}),\n  \"isSensitive\": zod.boolean(),\n  \"visibility\": zod.object({\n  \"memberCanView\": zod.boolean(),\n  \"memberCanEdit\": zod.boolean()\n})\n})),\n  \"containers\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"name\": zod.string().nullish(),\n  \"type\": zod.string().min(1),\n  \"sortOrder\": zod.number()\n})),\n  \"id\": zod.string().uuid(),\n  \"compositions\": zod.array(zod.object({\n  \"memberType\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"compositionType\": zod.enum(['Composition', 'Inheritance'])\n}))\n})\n\n\nexport const deleteMemberTypeByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\n\nexport const putMemberTypeByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putMemberTypeByIdBody = zod.object({\n  \"alias\": zod.string().min(1),\n  \"name\": zod.string().min(1),\n  \"description\": zod.string().nullish(),\n  \"icon\": zod.string().min(1),\n  \"allowedAsRoot\": zod.boolean(),\n  \"variesByCulture\": zod.boolean(),\n  \"variesBySegment\": zod.boolean(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"isElement\": zod.boolean(),\n  \"properties\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"container\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"sortOrder\": zod.number(),\n  \"alias\": zod.string().min(1),\n  \"name\": zod.string().min(1),\n  \"description\": zod.string().nullish(),\n  \"dataType\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"variesByCulture\": zod.boolean(),\n  \"variesBySegment\": zod.boolean(),\n  \"validation\": zod.object({\n  \"mandatory\": zod.boolean(),\n  \"mandatoryMessage\": zod.string().nullish(),\n  \"regEx\": zod.string().nullish(),\n  \"regExMessage\": zod.string().nullish()\n}),\n  \"appearance\": zod.object({\n  \"labelOnTop\": zod.boolean()\n}),\n  \"isSensitive\": zod.boolean(),\n  \"visibility\": zod.object({\n  \"memberCanView\": zod.boolean(),\n  \"memberCanEdit\": zod.boolean()\n})\n})),\n  \"containers\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"name\": zod.string().nullish(),\n  \"type\": zod.string().min(1),\n  \"sortOrder\": zod.number()\n})),\n  \"compositions\": zod.array(zod.object({\n  \"memberType\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"compositionType\": zod.enum(['Composition', 'Inheritance'])\n}))\n})\n\n\nexport const getMemberTypeByIdCompositionReferencesParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getMemberTypeByIdCompositionReferencesResponseItem = zod.object({\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string(),\n  \"icon\": zod.string()\n})\nexport const getMemberTypeByIdCompositionReferencesResponse = zod.array(getMemberTypeByIdCompositionReferencesResponseItem)\n\n\nexport const postMemberTypeByIdCopyParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\n\nexport const postMemberTypeAvailableCompositionsBody = zod.object({\n  \"id\": zod.string().uuid().nullish(),\n  \"currentPropertyAliases\": zod.array(zod.string()),\n  \"currentCompositeIds\": zod.array(zod.string().uuid())\n})\n\nexport const postMemberTypeAvailableCompositionsResponseItem = zod.object({\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string(),\n  \"icon\": zod.string(),\n  \"folderPath\": zod.array(zod.string()),\n  \"isCompatible\": zod.boolean()\n})\nexport const postMemberTypeAvailableCompositionsResponse = zod.array(postMemberTypeAvailableCompositionsResponseItem)\n\n\nexport const getMemberTypeConfigurationResponse = zod.object({\n  \"reservedFieldNames\": zod.array(zod.string())\n})\n\n\nexport const getTreeMemberTypeRootQuerySkipDefault = 0;export const getTreeMemberTypeRootQueryTakeDefault = 100;\n\nexport const getTreeMemberTypeRootQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getTreeMemberTypeRootQueryTakeDefault)\n})\n\nexport const getTreeMemberTypeRootResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"id\": zod.string().uuid(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"name\": zod.string(),\n  \"icon\": zod.string()\n}))\n})\n\n\nexport const getFilterMemberQueryOrderByDefault = \"username\";export const getFilterMemberQuerySkipDefault = 0;export const getFilterMemberQueryTakeDefault = 100;\n\nexport const getFilterMemberQueryParams = zod.object({\n  \"memberTypeId\": zod.string().uuid().optional(),\n  \"memberGroupName\": zod.string().optional(),\n  \"isApproved\": zod.coerce.boolean().optional(),\n  \"isLockedOut\": zod.coerce.boolean().optional(),\n  \"orderBy\": zod.string().default(getFilterMemberQueryOrderByDefault),\n  \"orderDirection\": zod.enum(['Ascending', 'Descending']).optional(),\n  \"filter\": zod.string().optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getFilterMemberQueryTakeDefault)\n})\n\nexport const getFilterMemberResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"values\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"alias\": zod.string().min(1),\n  \"value\": zod.any().nullish(),\n  \"editorAlias\": zod.string().min(1)\n})),\n  \"variants\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"name\": zod.string().min(1),\n  \"createDate\": zod.string().datetime({\"local\":true}),\n  \"updateDate\": zod.string().datetime({\"local\":true})\n})),\n  \"id\": zod.string().uuid(),\n  \"email\": zod.string(),\n  \"username\": zod.string(),\n  \"memberType\": zod.object({\n  \"id\": zod.string().uuid(),\n  \"icon\": zod.string(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n}),\n  \"isApproved\": zod.boolean(),\n  \"isLockedOut\": zod.boolean(),\n  \"isTwoFactorEnabled\": zod.boolean(),\n  \"failedPasswordAttempts\": zod.number(),\n  \"lastLoginDate\": zod.string().datetime({\"local\":true}).nullish(),\n  \"lastLockoutDate\": zod.string().datetime({\"local\":true}).nullish(),\n  \"lastPasswordChangeDate\": zod.string().datetime({\"local\":true}).nullish(),\n  \"groups\": zod.array(zod.string().uuid()),\n  \"kind\": zod.enum(['Default', 'Api'])\n}))\n})\n\n\nexport const getItemMemberQueryParams = zod.object({\n  \"id\": zod.array(zod.string().uuid()).optional()\n})\n\nexport const getItemMemberResponseItem = zod.object({\n  \"id\": zod.string().uuid(),\n  \"memberType\": zod.object({\n  \"id\": zod.string().uuid(),\n  \"icon\": zod.string(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n}),\n  \"variants\": zod.array(zod.object({\n  \"name\": zod.string(),\n  \"culture\": zod.string().nullish()\n})),\n  \"kind\": zod.enum(['Default', 'Api'])\n})\nexport const getItemMemberResponse = zod.array(getItemMemberResponseItem)\n\n\nexport const getItemMemberSearchQuerySkipDefault = 0;export const getItemMemberSearchQueryTakeDefault = 100;\n\nexport const getItemMemberSearchQueryParams = zod.object({\n  \"query\": zod.string().optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getItemMemberSearchQueryTakeDefault),\n  \"allowedMemberTypes\": zod.array(zod.string().uuid()).optional()\n})\n\nexport const getItemMemberSearchResponse = zod.object({\n  \"items\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"memberType\": zod.object({\n  \"id\": zod.string().uuid(),\n  \"icon\": zod.string(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n}),\n  \"variants\": zod.array(zod.object({\n  \"name\": zod.string(),\n  \"culture\": zod.string().nullish()\n})),\n  \"kind\": zod.enum(['Default', 'Api'])\n})),\n  \"total\": zod.number()\n})\n\n\nexport const postMemberBody = zod.object({\n  \"values\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"alias\": zod.string().min(1),\n  \"value\": zod.any().nullish()\n})),\n  \"variants\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"name\": zod.string().min(1)\n})),\n  \"id\": zod.string().uuid().nullish(),\n  \"email\": zod.string(),\n  \"username\": zod.string(),\n  \"password\": zod.string(),\n  \"memberType\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"groups\": zod.array(zod.string().uuid()).nullish(),\n  \"isApproved\": zod.boolean()\n})\n\n\nexport const getMemberByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getMemberByIdResponse = zod.object({\n  \"values\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"alias\": zod.string().min(1),\n  \"value\": zod.any().nullish(),\n  \"editorAlias\": zod.string().min(1)\n})),\n  \"variants\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"name\": zod.string().min(1),\n  \"createDate\": zod.string().datetime({\"local\":true}),\n  \"updateDate\": zod.string().datetime({\"local\":true})\n})),\n  \"id\": zod.string().uuid(),\n  \"email\": zod.string(),\n  \"username\": zod.string(),\n  \"memberType\": zod.object({\n  \"id\": zod.string().uuid(),\n  \"icon\": zod.string(),\n  \"collection\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n}),\n  \"isApproved\": zod.boolean(),\n  \"isLockedOut\": zod.boolean(),\n  \"isTwoFactorEnabled\": zod.boolean(),\n  \"failedPasswordAttempts\": zod.number(),\n  \"lastLoginDate\": zod.string().datetime({\"local\":true}).nullish(),\n  \"lastLockoutDate\": zod.string().datetime({\"local\":true}).nullish(),\n  \"lastPasswordChangeDate\": zod.string().datetime({\"local\":true}).nullish(),\n  \"groups\": zod.array(zod.string().uuid()),\n  \"kind\": zod.enum(['Default', 'Api'])\n})\n\n\nexport const deleteMemberByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\n\nexport const putMemberByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putMemberByIdBody = zod.object({\n  \"values\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"alias\": zod.string().min(1),\n  \"value\": zod.any().nullish()\n})),\n  \"variants\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"name\": zod.string().min(1)\n})),\n  \"email\": zod.string(),\n  \"username\": zod.string(),\n  \"oldPassword\": zod.string().nullish(),\n  \"newPassword\": zod.string().nullish(),\n  \"groups\": zod.array(zod.string().uuid()).nullish(),\n  \"isApproved\": zod.boolean(),\n  \"isLockedOut\": zod.boolean(),\n  \"isTwoFactorEnabled\": zod.boolean()\n})\n\n\nexport const putMemberByIdValidateParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putMemberByIdValidateBody = zod.object({\n  \"values\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"alias\": zod.string().min(1),\n  \"value\": zod.any().nullish()\n})),\n  \"variants\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"name\": zod.string().min(1)\n})),\n  \"email\": zod.string(),\n  \"username\": zod.string(),\n  \"oldPassword\": zod.string().nullish(),\n  \"newPassword\": zod.string().nullish(),\n  \"groups\": zod.array(zod.string().uuid()).nullish(),\n  \"isApproved\": zod.boolean(),\n  \"isLockedOut\": zod.boolean(),\n  \"isTwoFactorEnabled\": zod.boolean()\n})\n\n\nexport const getMemberConfigurationResponse = zod.object({\n  \"reservedFieldNames\": zod.array(zod.string())\n})\n\n\nexport const postMemberValidateBody = zod.object({\n  \"values\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"alias\": zod.string().min(1),\n  \"value\": zod.any().nullish()\n})),\n  \"variants\": zod.array(zod.object({\n  \"culture\": zod.string().nullish(),\n  \"segment\": zod.string().nullish(),\n  \"name\": zod.string().min(1)\n})),\n  \"id\": zod.string().uuid().nullish(),\n  \"email\": zod.string(),\n  \"username\": zod.string(),\n  \"password\": zod.string(),\n  \"memberType\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"groups\": zod.array(zod.string().uuid()).nullish(),\n  \"isApproved\": zod.boolean()\n})\n\n\nexport const getModelsBuilderDashboardResponse = zod.object({\n  \"mode\": zod.enum(['Nothing', 'InMemoryAuto', 'SourceCodeManual', 'SourceCodeAuto']),\n  \"canGenerate\": zod.boolean(),\n  \"outOfDateModels\": zod.boolean(),\n  \"lastError\": zod.string().nullish(),\n  \"version\": zod.string().nullish(),\n  \"modelsNamespace\": zod.string().nullish(),\n  \"trackingOutOfDateModels\": zod.boolean()\n})\n\n\nexport const getModelsBuilderStatusResponse = zod.object({\n  \"status\": zod.enum(['OutOfDate', 'Current', 'Unknown'])\n})\n\n\nexport const getObjectTypesQuerySkipDefault = 0;export const getObjectTypesQueryTakeDefault = 100;\n\nexport const getObjectTypesQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getObjectTypesQueryTakeDefault)\n})\n\nexport const getObjectTypesResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"name\": zod.string().nullish(),\n  \"id\": zod.string().uuid()\n}))\n})\n\n\nexport const getOembedQueryQueryParams = zod.object({\n  \"url\": zod.string().url().optional(),\n  \"maxWidth\": zod.coerce.number().optional(),\n  \"maxHeight\": zod.coerce.number().optional()\n})\n\nexport const getOembedQueryResponse = zod.object({\n  \"markup\": zod.string()\n})\n\n\nexport const postPackageByNameRunMigrationParams = zod.object({\n  \"name\": zod.string()\n})\n\n\nexport const getPackageConfigurationResponse = zod.object({\n  \"marketplaceUrl\": zod.string()\n})\n\n\nexport const getPackageCreatedQuerySkipDefault = 0;export const getPackageCreatedQueryTakeDefault = 100;\n\nexport const getPackageCreatedQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getPackageCreatedQueryTakeDefault)\n})\n\nexport const getPackageCreatedResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"name\": zod.string(),\n  \"contentNodeId\": zod.string().nullish(),\n  \"contentLoadChildNodes\": zod.boolean(),\n  \"mediaIds\": zod.array(zod.string().uuid()),\n  \"mediaLoadChildNodes\": zod.boolean(),\n  \"documentTypes\": zod.array(zod.string()),\n  \"mediaTypes\": zod.array(zod.string()),\n  \"dataTypes\": zod.array(zod.string()),\n  \"templates\": zod.array(zod.string()),\n  \"partialViews\": zod.array(zod.string()),\n  \"stylesheets\": zod.array(zod.string()),\n  \"scripts\": zod.array(zod.string()),\n  \"languages\": zod.array(zod.string()),\n  \"dictionaryItems\": zod.array(zod.string()),\n  \"id\": zod.string().uuid(),\n  \"packagePath\": zod.string()\n}))\n})\n\n\nexport const postPackageCreatedBody = zod.object({\n  \"name\": zod.string(),\n  \"contentNodeId\": zod.string().nullish(),\n  \"contentLoadChildNodes\": zod.boolean(),\n  \"mediaIds\": zod.array(zod.string().uuid()),\n  \"mediaLoadChildNodes\": zod.boolean(),\n  \"documentTypes\": zod.array(zod.string()),\n  \"mediaTypes\": zod.array(zod.string()),\n  \"dataTypes\": zod.array(zod.string()),\n  \"templates\": zod.array(zod.string()),\n  \"partialViews\": zod.array(zod.string()),\n  \"stylesheets\": zod.array(zod.string()),\n  \"scripts\": zod.array(zod.string()),\n  \"languages\": zod.array(zod.string()),\n  \"dictionaryItems\": zod.array(zod.string()),\n  \"id\": zod.string().uuid().nullish()\n})\n\n\nexport const getPackageCreatedByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getPackageCreatedByIdResponse = zod.object({\n  \"name\": zod.string(),\n  \"contentNodeId\": zod.string().nullish(),\n  \"contentLoadChildNodes\": zod.boolean(),\n  \"mediaIds\": zod.array(zod.string().uuid()),\n  \"mediaLoadChildNodes\": zod.boolean(),\n  \"documentTypes\": zod.array(zod.string()),\n  \"mediaTypes\": zod.array(zod.string()),\n  \"dataTypes\": zod.array(zod.string()),\n  \"templates\": zod.array(zod.string()),\n  \"partialViews\": zod.array(zod.string()),\n  \"stylesheets\": zod.array(zod.string()),\n  \"scripts\": zod.array(zod.string()),\n  \"languages\": zod.array(zod.string()),\n  \"dictionaryItems\": zod.array(zod.string()),\n  \"id\": zod.string().uuid(),\n  \"packagePath\": zod.string()\n})\n\n\nexport const deletePackageCreatedByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\n\nexport const putPackageCreatedByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putPackageCreatedByIdBody = zod.object({\n  \"name\": zod.string(),\n  \"contentNodeId\": zod.string().nullish(),\n  \"contentLoadChildNodes\": zod.boolean(),\n  \"mediaIds\": zod.array(zod.string().uuid()),\n  \"mediaLoadChildNodes\": zod.boolean(),\n  \"documentTypes\": zod.array(zod.string()),\n  \"mediaTypes\": zod.array(zod.string()),\n  \"dataTypes\": zod.array(zod.string()),\n  \"templates\": zod.array(zod.string()),\n  \"partialViews\": zod.array(zod.string()),\n  \"stylesheets\": zod.array(zod.string()),\n  \"scripts\": zod.array(zod.string()),\n  \"languages\": zod.array(zod.string()),\n  \"dictionaryItems\": zod.array(zod.string()),\n  \"packagePath\": zod.string()\n})\n\n\nexport const getPackageCreatedByIdDownloadParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getPackageCreatedByIdDownloadResponse = zod.instanceof(FileLike)\n\n\nexport const getPackageMigrationStatusQuerySkipDefault = 0;export const getPackageMigrationStatusQueryTakeDefault = 100;\n\nexport const getPackageMigrationStatusQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getPackageMigrationStatusQueryTakeDefault)\n})\n\nexport const getPackageMigrationStatusResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"packageName\": zod.string(),\n  \"hasPendingMigrations\": zod.boolean()\n}))\n})\n\n\nexport const getItemPartialViewQueryParams = zod.object({\n  \"path\": zod.array(zod.string()).optional()\n})\n\nexport const getItemPartialViewResponseItem = zod.object({\n  \"path\": zod.string(),\n  \"name\": zod.string(),\n  \"parent\": zod.object({\n  \"path\": zod.string()\n}).nullish(),\n  \"isFolder\": zod.boolean()\n})\nexport const getItemPartialViewResponse = zod.array(getItemPartialViewResponseItem)\n\n\nexport const postPartialViewBody = zod.object({\n  \"name\": zod.string(),\n  \"parent\": zod.object({\n  \"path\": zod.string()\n}).nullish(),\n  \"content\": zod.string()\n})\n\n\nexport const getPartialViewByPathParams = zod.object({\n  \"path\": zod.string()\n})\n\nexport const getPartialViewByPathResponse = zod.object({\n  \"path\": zod.string(),\n  \"name\": zod.string(),\n  \"parent\": zod.object({\n  \"path\": zod.string()\n}).nullish(),\n  \"content\": zod.string()\n})\n\n\nexport const deletePartialViewByPathParams = zod.object({\n  \"path\": zod.string()\n})\n\n\nexport const putPartialViewByPathParams = zod.object({\n  \"path\": zod.string()\n})\n\nexport const putPartialViewByPathBody = zod.object({\n  \"content\": zod.string()\n})\n\n\nexport const putPartialViewByPathRenameParams = zod.object({\n  \"path\": zod.string()\n})\n\nexport const putPartialViewByPathRenameBody = zod.object({\n  \"name\": zod.string()\n})\n\n\nexport const postPartialViewFolderBody = zod.object({\n  \"name\": zod.string(),\n  \"parent\": zod.object({\n  \"path\": zod.string()\n}).nullish()\n})\n\n\nexport const getPartialViewFolderByPathParams = zod.object({\n  \"path\": zod.string()\n})\n\nexport const getPartialViewFolderByPathResponse = zod.object({\n  \"path\": zod.string(),\n  \"name\": zod.string(),\n  \"parent\": zod.object({\n  \"path\": zod.string()\n}).nullish()\n})\n\n\nexport const deletePartialViewFolderByPathParams = zod.object({\n  \"path\": zod.string()\n})\n\n\nexport const getPartialViewSnippetQuerySkipDefault = 0;export const getPartialViewSnippetQueryTakeDefault = 100;\n\nexport const getPartialViewSnippetQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getPartialViewSnippetQueryTakeDefault)\n})\n\nexport const getPartialViewSnippetResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"id\": zod.string(),\n  \"name\": zod.string()\n}))\n})\n\n\nexport const getPartialViewSnippetByIdParams = zod.object({\n  \"id\": zod.string()\n})\n\nexport const getPartialViewSnippetByIdResponse = zod.object({\n  \"id\": zod.string(),\n  \"name\": zod.string(),\n  \"content\": zod.string()\n})\n\n\nexport const getTreePartialViewAncestorsQueryParams = zod.object({\n  \"descendantPath\": zod.string().optional()\n})\n\nexport const getTreePartialViewAncestorsResponseItem = zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"name\": zod.string(),\n  \"path\": zod.string(),\n  \"parent\": zod.object({\n  \"path\": zod.string()\n}).nullish(),\n  \"isFolder\": zod.boolean()\n})\nexport const getTreePartialViewAncestorsResponse = zod.array(getTreePartialViewAncestorsResponseItem)\n\n\nexport const getTreePartialViewChildrenQuerySkipDefault = 0;export const getTreePartialViewChildrenQueryTakeDefault = 100;\n\nexport const getTreePartialViewChildrenQueryParams = zod.object({\n  \"parentPath\": zod.string().optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getTreePartialViewChildrenQueryTakeDefault)\n})\n\nexport const getTreePartialViewChildrenResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"name\": zod.string(),\n  \"path\": zod.string(),\n  \"parent\": zod.object({\n  \"path\": zod.string()\n}).nullish(),\n  \"isFolder\": zod.boolean()\n}))\n})\n\n\nexport const getTreePartialViewRootQuerySkipDefault = 0;export const getTreePartialViewRootQueryTakeDefault = 100;\n\nexport const getTreePartialViewRootQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getTreePartialViewRootQueryTakeDefault)\n})\n\nexport const getTreePartialViewRootResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"name\": zod.string(),\n  \"path\": zod.string(),\n  \"parent\": zod.object({\n  \"path\": zod.string()\n}).nullish(),\n  \"isFolder\": zod.boolean()\n}))\n})\n\n\nexport const getProfilingStatusResponse = zod.object({\n  \"enabled\": zod.boolean()\n})\n\n\nexport const putProfilingStatusBody = zod.object({\n  \"enabled\": zod.boolean()\n})\n\n\nexport const getPropertyTypeIsUsedQueryParams = zod.object({\n  \"contentTypeId\": zod.string().uuid().optional(),\n  \"propertyAlias\": zod.string().optional()\n})\n\nexport const getPropertyTypeIsUsedResponse = zod.boolean()\n\n\nexport const getRedirectManagementQuerySkipDefault = 0;export const getRedirectManagementQueryTakeDefault = 100;\n\nexport const getRedirectManagementQueryParams = zod.object({\n  \"filter\": zod.string().optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getRedirectManagementQueryTakeDefault)\n})\n\nexport const getRedirectManagementResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"originalUrl\": zod.string(),\n  \"destinationUrl\": zod.string(),\n  \"created\": zod.string().datetime({\"local\":true}),\n  \"document\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"culture\": zod.string().nullish()\n}))\n})\n\n\nexport const getRedirectManagementByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getRedirectManagementByIdQuerySkipDefault = 0;export const getRedirectManagementByIdQueryTakeDefault = 100;\n\nexport const getRedirectManagementByIdQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getRedirectManagementByIdQueryTakeDefault)\n})\n\nexport const getRedirectManagementByIdResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"originalUrl\": zod.string(),\n  \"destinationUrl\": zod.string(),\n  \"created\": zod.string().datetime({\"local\":true}),\n  \"document\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"culture\": zod.string().nullish()\n}))\n})\n\n\nexport const deleteRedirectManagementByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\n\nexport const getRedirectManagementStatusResponse = zod.object({\n  \"status\": zod.enum(['Enabled', 'Disabled']),\n  \"userIsAdmin\": zod.boolean()\n})\n\n\nexport const postRedirectManagementStatusQueryParams = zod.object({\n  \"status\": zod.enum(['Enabled', 'Disabled']).optional()\n})\n\n\nexport const getItemRelationTypeQueryParams = zod.object({\n  \"id\": zod.array(zod.string().uuid()).optional()\n})\n\nexport const getItemRelationTypeResponseItem = zod.object({\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string(),\n  \"isDeletable\": zod.boolean()\n})\nexport const getItemRelationTypeResponse = zod.array(getItemRelationTypeResponseItem)\n\n\nexport const getRelationTypeQuerySkipDefault = 0;export const getRelationTypeQueryTakeDefault = 100;\n\nexport const getRelationTypeQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getRelationTypeQueryTakeDefault)\n})\n\nexport const getRelationTypeResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"name\": zod.string().min(1),\n  \"isBidirectional\": zod.boolean(),\n  \"isDependency\": zod.boolean(),\n  \"id\": zod.string().uuid(),\n  \"alias\": zod.string().nullish(),\n  \"parentObject\": zod.object({\n  \"name\": zod.string().nullish(),\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"childObject\": zod.object({\n  \"name\": zod.string().nullish(),\n  \"id\": zod.string().uuid()\n}).nullish()\n}))\n})\n\n\nexport const getRelationTypeByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getRelationTypeByIdResponse = zod.object({\n  \"name\": zod.string().min(1),\n  \"isBidirectional\": zod.boolean(),\n  \"isDependency\": zod.boolean(),\n  \"id\": zod.string().uuid(),\n  \"alias\": zod.string().nullish(),\n  \"parentObject\": zod.object({\n  \"name\": zod.string().nullish(),\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"childObject\": zod.object({\n  \"name\": zod.string().nullish(),\n  \"id\": zod.string().uuid()\n}).nullish()\n})\n\n\nexport const getRelationByRelationTypeIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getRelationByRelationTypeIdQuerySkipDefault = 0;export const getRelationByRelationTypeIdQueryTakeDefault = 100;\n\nexport const getRelationByRelationTypeIdQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getRelationByRelationTypeIdQueryTakeDefault)\n})\n\nexport const getRelationByRelationTypeIdResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"relationType\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string().nullish()\n}),\n  \"child\": zod.object({\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string().nullish()\n}),\n  \"createDate\": zod.string().datetime({\"local\":true}),\n  \"comment\": zod.string().nullish()\n}))\n})\n\n\nexport const getItemScriptQueryParams = zod.object({\n  \"path\": zod.array(zod.string()).optional()\n})\n\nexport const getItemScriptResponseItem = zod.object({\n  \"path\": zod.string(),\n  \"name\": zod.string(),\n  \"parent\": zod.object({\n  \"path\": zod.string()\n}).nullish(),\n  \"isFolder\": zod.boolean()\n})\nexport const getItemScriptResponse = zod.array(getItemScriptResponseItem)\n\n\nexport const postScriptBody = zod.object({\n  \"name\": zod.string(),\n  \"parent\": zod.object({\n  \"path\": zod.string()\n}).nullish(),\n  \"content\": zod.string()\n})\n\n\nexport const getScriptByPathParams = zod.object({\n  \"path\": zod.string()\n})\n\nexport const getScriptByPathResponse = zod.object({\n  \"path\": zod.string(),\n  \"name\": zod.string(),\n  \"parent\": zod.object({\n  \"path\": zod.string()\n}).nullish(),\n  \"content\": zod.string()\n})\n\n\nexport const deleteScriptByPathParams = zod.object({\n  \"path\": zod.string()\n})\n\n\nexport const putScriptByPathParams = zod.object({\n  \"path\": zod.string()\n})\n\nexport const putScriptByPathBody = zod.object({\n  \"content\": zod.string()\n})\n\n\nexport const putScriptByPathRenameParams = zod.object({\n  \"path\": zod.string()\n})\n\nexport const putScriptByPathRenameBody = zod.object({\n  \"name\": zod.string()\n})\n\n\nexport const postScriptFolderBody = zod.object({\n  \"name\": zod.string(),\n  \"parent\": zod.object({\n  \"path\": zod.string()\n}).nullish()\n})\n\n\nexport const getScriptFolderByPathParams = zod.object({\n  \"path\": zod.string()\n})\n\nexport const getScriptFolderByPathResponse = zod.object({\n  \"path\": zod.string(),\n  \"name\": zod.string(),\n  \"parent\": zod.object({\n  \"path\": zod.string()\n}).nullish()\n})\n\n\nexport const deleteScriptFolderByPathParams = zod.object({\n  \"path\": zod.string()\n})\n\n\nexport const getTreeScriptAncestorsQueryParams = zod.object({\n  \"descendantPath\": zod.string().optional()\n})\n\nexport const getTreeScriptAncestorsResponseItem = zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"name\": zod.string(),\n  \"path\": zod.string(),\n  \"parent\": zod.object({\n  \"path\": zod.string()\n}).nullish(),\n  \"isFolder\": zod.boolean()\n})\nexport const getTreeScriptAncestorsResponse = zod.array(getTreeScriptAncestorsResponseItem)\n\n\nexport const getTreeScriptChildrenQuerySkipDefault = 0;export const getTreeScriptChildrenQueryTakeDefault = 100;\n\nexport const getTreeScriptChildrenQueryParams = zod.object({\n  \"parentPath\": zod.string().optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getTreeScriptChildrenQueryTakeDefault)\n})\n\nexport const getTreeScriptChildrenResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"name\": zod.string(),\n  \"path\": zod.string(),\n  \"parent\": zod.object({\n  \"path\": zod.string()\n}).nullish(),\n  \"isFolder\": zod.boolean()\n}))\n})\n\n\nexport const getTreeScriptRootQuerySkipDefault = 0;export const getTreeScriptRootQueryTakeDefault = 100;\n\nexport const getTreeScriptRootQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getTreeScriptRootQueryTakeDefault)\n})\n\nexport const getTreeScriptRootResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"name\": zod.string(),\n  \"path\": zod.string(),\n  \"parent\": zod.object({\n  \"path\": zod.string()\n}).nullish(),\n  \"isFolder\": zod.boolean()\n}))\n})\n\n\nexport const getSearcherQuerySkipDefault = 0;export const getSearcherQueryTakeDefault = 100;\n\nexport const getSearcherQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getSearcherQueryTakeDefault)\n})\n\nexport const getSearcherResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"name\": zod.string().min(1)\n}))\n})\n\n\nexport const getSearcherBySearcherNameQueryParams = zod.object({\n  \"searcherName\": zod.string()\n})\n\nexport const getSearcherBySearcherNameQueryQuerySkipDefault = 0;export const getSearcherBySearcherNameQueryQueryTakeDefault = 100;\n\nexport const getSearcherBySearcherNameQueryQueryParams = zod.object({\n  \"term\": zod.string().optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getSearcherBySearcherNameQueryQueryTakeDefault)\n})\n\nexport const getSearcherBySearcherNameQueryResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"id\": zod.string().min(1),\n  \"score\": zod.number(),\n  \"fieldCount\": zod.number(),\n  \"fields\": zod.array(zod.object({\n  \"name\": zod.string(),\n  \"values\": zod.array(zod.string())\n}))\n}))\n})\n\n\nexport const getSecurityConfigurationResponse = zod.object({\n  \"passwordConfiguration\": zod.object({\n  \"minimumPasswordLength\": zod.number(),\n  \"requireNonLetterOrDigit\": zod.boolean(),\n  \"requireDigit\": zod.boolean(),\n  \"requireLowercase\": zod.boolean(),\n  \"requireUppercase\": zod.boolean()\n})\n})\n\n\nexport const postSecurityForgotPasswordBody = zod.object({\n  \"email\": zod.string().min(1)\n})\n\n\nexport const postSecurityForgotPasswordResetBody = zod.object({\n  \"user\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"resetCode\": zod.string(),\n  \"password\": zod.string().min(1)\n})\n\n\nexport const postSecurityForgotPasswordVerifyBody = zod.object({\n  \"user\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"resetCode\": zod.string()\n})\n\nexport const postSecurityForgotPasswordVerifyResponse = zod.object({\n  \"passwordConfiguration\": zod.object({\n  \"minimumPasswordLength\": zod.number(),\n  \"requireNonLetterOrDigit\": zod.boolean(),\n  \"requireDigit\": zod.boolean(),\n  \"requireLowercase\": zod.boolean(),\n  \"requireUppercase\": zod.boolean()\n})\n})\n\n\nexport const getSegmentQuerySkipDefault = 0;export const getSegmentQueryTakeDefault = 100;\n\nexport const getSegmentQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getSegmentQueryTakeDefault)\n})\n\nexport const getSegmentResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"name\": zod.string(),\n  \"alias\": zod.string()\n}))\n})\n\n\nexport const getServerConfigurationResponse = zod.object({\n  \"allowPasswordReset\": zod.boolean(),\n  \"versionCheckPeriod\": zod.number(),\n  \"allowLocalLogin\": zod.boolean()\n})\n\n\nexport const getServerInformationResponse = zod.object({\n  \"version\": zod.string(),\n  \"assemblyVersion\": zod.string(),\n  \"baseUtcOffset\": zod.string(),\n  \"runtimeMode\": zod.enum(['BackofficeDevelopment', 'Development', 'Production'])\n})\n\n\nexport const getServerStatusResponse = zod.object({\n  \"serverStatus\": zod.enum(['Unknown', 'Boot', 'Install', 'Upgrade', 'Run', 'BootFailed'])\n})\n\n\nexport const getServerTroubleshootingResponse = zod.object({\n  \"items\": zod.array(zod.object({\n  \"name\": zod.string(),\n  \"data\": zod.string()\n}))\n})\n\n\nexport const getServerUpgradeCheckResponse = zod.object({\n  \"type\": zod.string(),\n  \"comment\": zod.string(),\n  \"url\": zod.string()\n})\n\n\nexport const getItemStaticFileQueryParams = zod.object({\n  \"path\": zod.array(zod.string()).optional()\n})\n\nexport const getItemStaticFileResponseItem = zod.object({\n  \"path\": zod.string(),\n  \"name\": zod.string(),\n  \"parent\": zod.object({\n  \"path\": zod.string()\n}).nullish(),\n  \"isFolder\": zod.boolean()\n})\nexport const getItemStaticFileResponse = zod.array(getItemStaticFileResponseItem)\n\n\nexport const getTreeStaticFileAncestorsQueryParams = zod.object({\n  \"descendantPath\": zod.string().optional()\n})\n\nexport const getTreeStaticFileAncestorsResponseItem = zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"name\": zod.string(),\n  \"path\": zod.string(),\n  \"parent\": zod.object({\n  \"path\": zod.string()\n}).nullish(),\n  \"isFolder\": zod.boolean()\n})\nexport const getTreeStaticFileAncestorsResponse = zod.array(getTreeStaticFileAncestorsResponseItem)\n\n\nexport const getTreeStaticFileChildrenQuerySkipDefault = 0;export const getTreeStaticFileChildrenQueryTakeDefault = 100;\n\nexport const getTreeStaticFileChildrenQueryParams = zod.object({\n  \"parentPath\": zod.string().optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getTreeStaticFileChildrenQueryTakeDefault)\n})\n\nexport const getTreeStaticFileChildrenResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"name\": zod.string(),\n  \"path\": zod.string(),\n  \"parent\": zod.object({\n  \"path\": zod.string()\n}).nullish(),\n  \"isFolder\": zod.boolean()\n}))\n})\n\n\nexport const getTreeStaticFileRootQuerySkipDefault = 0;export const getTreeStaticFileRootQueryTakeDefault = 100;\n\nexport const getTreeStaticFileRootQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getTreeStaticFileRootQueryTakeDefault)\n})\n\nexport const getTreeStaticFileRootResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"name\": zod.string(),\n  \"path\": zod.string(),\n  \"parent\": zod.object({\n  \"path\": zod.string()\n}).nullish(),\n  \"isFolder\": zod.boolean()\n}))\n})\n\n\nexport const getItemStylesheetQueryParams = zod.object({\n  \"path\": zod.array(zod.string()).optional()\n})\n\nexport const getItemStylesheetResponseItem = zod.object({\n  \"path\": zod.string(),\n  \"name\": zod.string(),\n  \"parent\": zod.object({\n  \"path\": zod.string()\n}).nullish(),\n  \"isFolder\": zod.boolean()\n})\nexport const getItemStylesheetResponse = zod.array(getItemStylesheetResponseItem)\n\n\nexport const postStylesheetBody = zod.object({\n  \"name\": zod.string(),\n  \"parent\": zod.object({\n  \"path\": zod.string()\n}).nullish(),\n  \"content\": zod.string()\n})\n\n\nexport const getStylesheetByPathParams = zod.object({\n  \"path\": zod.string()\n})\n\nexport const getStylesheetByPathResponse = zod.object({\n  \"path\": zod.string(),\n  \"name\": zod.string(),\n  \"parent\": zod.object({\n  \"path\": zod.string()\n}).nullish(),\n  \"content\": zod.string()\n})\n\n\nexport const deleteStylesheetByPathParams = zod.object({\n  \"path\": zod.string()\n})\n\n\nexport const putStylesheetByPathParams = zod.object({\n  \"path\": zod.string()\n})\n\nexport const putStylesheetByPathBody = zod.object({\n  \"content\": zod.string()\n})\n\n\nexport const putStylesheetByPathRenameParams = zod.object({\n  \"path\": zod.string()\n})\n\nexport const putStylesheetByPathRenameBody = zod.object({\n  \"name\": zod.string()\n})\n\n\nexport const postStylesheetFolderBody = zod.object({\n  \"name\": zod.string(),\n  \"parent\": zod.object({\n  \"path\": zod.string()\n}).nullish()\n})\n\n\nexport const getStylesheetFolderByPathParams = zod.object({\n  \"path\": zod.string()\n})\n\nexport const getStylesheetFolderByPathResponse = zod.object({\n  \"path\": zod.string(),\n  \"name\": zod.string(),\n  \"parent\": zod.object({\n  \"path\": zod.string()\n}).nullish()\n})\n\n\nexport const deleteStylesheetFolderByPathParams = zod.object({\n  \"path\": zod.string()\n})\n\n\nexport const getTreeStylesheetAncestorsQueryParams = zod.object({\n  \"descendantPath\": zod.string().optional()\n})\n\nexport const getTreeStylesheetAncestorsResponseItem = zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"name\": zod.string(),\n  \"path\": zod.string(),\n  \"parent\": zod.object({\n  \"path\": zod.string()\n}).nullish(),\n  \"isFolder\": zod.boolean()\n})\nexport const getTreeStylesheetAncestorsResponse = zod.array(getTreeStylesheetAncestorsResponseItem)\n\n\nexport const getTreeStylesheetChildrenQuerySkipDefault = 0;export const getTreeStylesheetChildrenQueryTakeDefault = 100;\n\nexport const getTreeStylesheetChildrenQueryParams = zod.object({\n  \"parentPath\": zod.string().optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getTreeStylesheetChildrenQueryTakeDefault)\n})\n\nexport const getTreeStylesheetChildrenResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"name\": zod.string(),\n  \"path\": zod.string(),\n  \"parent\": zod.object({\n  \"path\": zod.string()\n}).nullish(),\n  \"isFolder\": zod.boolean()\n}))\n})\n\n\nexport const getTreeStylesheetRootQuerySkipDefault = 0;export const getTreeStylesheetRootQueryTakeDefault = 100;\n\nexport const getTreeStylesheetRootQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getTreeStylesheetRootQueryTakeDefault)\n})\n\nexport const getTreeStylesheetRootResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"name\": zod.string(),\n  \"path\": zod.string(),\n  \"parent\": zod.object({\n  \"path\": zod.string()\n}).nullish(),\n  \"isFolder\": zod.boolean()\n}))\n})\n\n\nexport const getTagQuerySkipDefault = 0;export const getTagQueryTakeDefault = 100;\n\nexport const getTagQueryParams = zod.object({\n  \"query\": zod.string().optional(),\n  \"tagGroup\": zod.string().optional(),\n  \"culture\": zod.string().optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getTagQueryTakeDefault)\n})\n\nexport const getTagResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"text\": zod.string().nullish(),\n  \"group\": zod.string().nullish(),\n  \"nodeCount\": zod.number()\n}))\n})\n\n\nexport const getTelemetryQuerySkipDefault = 0;export const getTelemetryQueryTakeDefault = 100;\n\nexport const getTelemetryQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getTelemetryQueryTakeDefault)\n})\n\nexport const getTelemetryResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"telemetryLevel\": zod.enum(['Minimal', 'Basic', 'Detailed'])\n}))\n})\n\n\nexport const getTelemetryLevelResponse = zod.object({\n  \"telemetryLevel\": zod.enum(['Minimal', 'Basic', 'Detailed'])\n})\n\n\nexport const postTelemetryLevelBody = zod.object({\n  \"telemetryLevel\": zod.enum(['Minimal', 'Basic', 'Detailed'])\n})\n\n\nexport const getItemTemplateQueryParams = zod.object({\n  \"id\": zod.array(zod.string().uuid()).optional()\n})\n\nexport const getItemTemplateResponseItem = zod.object({\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string(),\n  \"alias\": zod.string()\n})\nexport const getItemTemplateResponse = zod.array(getItemTemplateResponseItem)\n\n\nexport const getItemTemplateSearchQuerySkipDefault = 0;export const getItemTemplateSearchQueryTakeDefault = 100;\n\nexport const getItemTemplateSearchQueryParams = zod.object({\n  \"query\": zod.string().optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getItemTemplateSearchQueryTakeDefault)\n})\n\nexport const getItemTemplateSearchResponse = zod.object({\n  \"items\": zod.array(zod.object({\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string(),\n  \"alias\": zod.string()\n})),\n  \"total\": zod.number()\n})\n\n\nexport const postTemplateBody = zod.object({\n  \"name\": zod.string().min(1),\n  \"alias\": zod.string().min(1),\n  \"content\": zod.string().nullish(),\n  \"id\": zod.string().uuid().nullish()\n})\n\n\nexport const getTemplateByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getTemplateByIdResponse = zod.object({\n  \"name\": zod.string().min(1),\n  \"alias\": zod.string().min(1),\n  \"content\": zod.string().nullish(),\n  \"id\": zod.string().uuid(),\n  \"masterTemplate\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish()\n})\n\n\nexport const deleteTemplateByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\n\nexport const putTemplateByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putTemplateByIdBody = zod.object({\n  \"name\": zod.string().min(1),\n  \"alias\": zod.string().min(1),\n  \"content\": zod.string().nullish()\n})\n\n\nexport const getTemplateConfigurationResponse = zod.object({\n  \"disabled\": zod.boolean()\n})\n\n\nexport const postTemplateQueryExecuteBody = zod.object({\n  \"rootDocument\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"documentTypeAlias\": zod.string().nullish(),\n  \"filters\": zod.array(zod.object({\n  \"propertyAlias\": zod.string().min(1),\n  \"constraintValue\": zod.string().min(1),\n  \"operator\": zod.enum(['Equals', 'NotEquals', 'Contains', 'NotContains', 'LessThan', 'LessThanEqualTo', 'GreaterThan', 'GreaterThanEqualTo'])\n})).nullish(),\n  \"sort\": zod.object({\n  \"propertyAlias\": zod.string(),\n  \"direction\": zod.string().nullish()\n}).nullish(),\n  \"take\": zod.number()\n})\n\nexport const postTemplateQueryExecuteResponse = zod.object({\n  \"queryExpression\": zod.string(),\n  \"sampleResults\": zod.array(zod.object({\n  \"icon\": zod.string(),\n  \"name\": zod.string()\n})),\n  \"resultCount\": zod.number(),\n  \"executionTime\": zod.number()\n})\n\n\nexport const getTemplateQuerySettingsResponse = zod.object({\n  \"documentTypeAliases\": zod.array(zod.string()),\n  \"properties\": zod.array(zod.object({\n  \"alias\": zod.string(),\n  \"type\": zod.enum(['String', 'DateTime', 'Integer'])\n})),\n  \"operators\": zod.array(zod.object({\n  \"operator\": zod.enum(['Equals', 'NotEquals', 'Contains', 'NotContains', 'LessThan', 'LessThanEqualTo', 'GreaterThan', 'GreaterThanEqualTo']),\n  \"applicableTypes\": zod.array(zod.enum(['String', 'DateTime', 'Integer']))\n}))\n})\n\n\nexport const getTreeTemplateAncestorsQueryParams = zod.object({\n  \"descendantId\": zod.string().uuid().optional()\n})\n\nexport const getTreeTemplateAncestorsResponseItem = zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"id\": zod.string().uuid(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"name\": zod.string()\n})\nexport const getTreeTemplateAncestorsResponse = zod.array(getTreeTemplateAncestorsResponseItem)\n\n\nexport const getTreeTemplateChildrenQuerySkipDefault = 0;export const getTreeTemplateChildrenQueryTakeDefault = 100;\n\nexport const getTreeTemplateChildrenQueryParams = zod.object({\n  \"parentId\": zod.string().uuid().optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getTreeTemplateChildrenQueryTakeDefault)\n})\n\nexport const getTreeTemplateChildrenResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"id\": zod.string().uuid(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"name\": zod.string()\n}))\n})\n\n\nexport const getTreeTemplateRootQuerySkipDefault = 0;export const getTreeTemplateRootQueryTakeDefault = 100;\n\nexport const getTreeTemplateRootQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getTreeTemplateRootQueryTakeDefault)\n})\n\nexport const getTreeTemplateRootResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"hasChildren\": zod.boolean(),\n  \"id\": zod.string().uuid(),\n  \"parent\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"name\": zod.string()\n}))\n})\n\n\nexport const postTemporaryFileBody = zod.object({\n  \"Id\": zod.string().uuid(),\n  \"File\": zod.instanceof(FileLike)\n})\n\n\nexport const getTemporaryFileByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getTemporaryFileByIdResponse = zod.object({\n  \"id\": zod.string().uuid(),\n  \"availableUntil\": zod.string().datetime({\"local\":true}).nullish(),\n  \"fileName\": zod.string().min(1)\n})\n\n\nexport const deleteTemporaryFileByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\n\nexport const getTemporaryFileConfigurationResponse = zod.object({\n  \"imageFileTypes\": zod.array(zod.string()),\n  \"disallowedUploadedFilesExtensions\": zod.array(zod.string()),\n  \"allowedUploadedFileExtensions\": zod.array(zod.string()),\n  \"maxFileSize\": zod.number().nullish()\n})\n\n\nexport const getUpgradeSettingsResponse = zod.object({\n  \"currentState\": zod.string().min(1),\n  \"newState\": zod.string().min(1),\n  \"newVersion\": zod.string().min(1),\n  \"oldVersion\": zod.string().min(1),\n  \"reportUrl\": zod.string()\n})\n\n\nexport const postUserDataBody = zod.object({\n  \"group\": zod.string(),\n  \"identifier\": zod.string(),\n  \"value\": zod.string(),\n  \"key\": zod.string().uuid().nullish()\n})\n\n\nexport const getUserDataQuerySkipDefault = 0;export const getUserDataQueryTakeDefault = 100;\n\nexport const getUserDataQueryParams = zod.object({\n  \"groups\": zod.array(zod.string()).optional(),\n  \"identifiers\": zod.array(zod.string()).optional(),\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getUserDataQueryTakeDefault)\n})\n\nexport const getUserDataResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"group\": zod.string(),\n  \"identifier\": zod.string(),\n  \"value\": zod.string(),\n  \"key\": zod.string().uuid()\n}))\n})\n\n\nexport const putUserDataBody = zod.object({\n  \"group\": zod.string(),\n  \"identifier\": zod.string(),\n  \"value\": zod.string(),\n  \"key\": zod.string().uuid()\n})\n\n\nexport const getUserDataByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getUserDataByIdResponse = zod.object({\n  \"group\": zod.string(),\n  \"identifier\": zod.string(),\n  \"value\": zod.string()\n})\n\n\nexport const getFilterUserGroupQuerySkipDefault = 0;export const getFilterUserGroupQueryTakeDefault = 100;export const getFilterUserGroupQueryFilterDefault = \"\";\n\nexport const getFilterUserGroupQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getFilterUserGroupQueryTakeDefault),\n  \"filter\": zod.string().optional()\n})\n\nexport const getFilterUserGroupResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"name\": zod.string(),\n  \"alias\": zod.string(),\n  \"icon\": zod.string().nullish(),\n  \"sections\": zod.array(zod.string()),\n  \"languages\": zod.array(zod.string()),\n  \"hasAccessToAllLanguages\": zod.boolean(),\n  \"documentStartNode\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"documentRootAccess\": zod.boolean(),\n  \"mediaStartNode\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"mediaRootAccess\": zod.boolean(),\n  \"fallbackPermissions\": zod.array(zod.string()),\n  \"permissions\": zod.array(zod.object({\n  \"$type\": zod.enum(['DocumentPermissionPresentationModel']),\n  \"document\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"verbs\": zod.array(zod.string())\n}).or(zod.object({\n  \"$type\": zod.enum(['UnknownTypePermissionPresentationModel']),\n  \"verbs\": zod.array(zod.string()),\n  \"context\": zod.string()\n}))),\n  \"id\": zod.string().uuid(),\n  \"isDeletable\": zod.boolean(),\n  \"aliasCanBeChanged\": zod.boolean()\n}))\n})\n\n\nexport const getItemUserGroupQueryParams = zod.object({\n  \"id\": zod.array(zod.string().uuid()).optional()\n})\n\nexport const getItemUserGroupResponseItem = zod.object({\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string(),\n  \"icon\": zod.string().nullish(),\n  \"alias\": zod.string().nullish()\n})\nexport const getItemUserGroupResponse = zod.array(getItemUserGroupResponseItem)\n\n\nexport const deleteUserGroupBody = zod.object({\n  \"userGroupIds\": zod.array(zod.object({\n  \"id\": zod.string().uuid()\n}))\n})\n\n\nexport const postUserGroupBody = zod.object({\n  \"name\": zod.string(),\n  \"alias\": zod.string(),\n  \"icon\": zod.string().nullish(),\n  \"sections\": zod.array(zod.string()),\n  \"languages\": zod.array(zod.string()),\n  \"hasAccessToAllLanguages\": zod.boolean(),\n  \"documentStartNode\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"documentRootAccess\": zod.boolean(),\n  \"mediaStartNode\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"mediaRootAccess\": zod.boolean(),\n  \"fallbackPermissions\": zod.array(zod.string()),\n  \"permissions\": zod.array(zod.object({\n  \"$type\": zod.enum(['DocumentPermissionPresentationModel']),\n  \"document\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"verbs\": zod.array(zod.string())\n}).or(zod.object({\n  \"$type\": zod.enum(['UnknownTypePermissionPresentationModel']),\n  \"verbs\": zod.array(zod.string()),\n  \"context\": zod.string()\n}))),\n  \"id\": zod.string().uuid().nullish()\n})\n\n\nexport const getUserGroupQuerySkipDefault = 0;export const getUserGroupQueryTakeDefault = 100;\n\nexport const getUserGroupQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getUserGroupQueryTakeDefault)\n})\n\nexport const getUserGroupResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"name\": zod.string(),\n  \"alias\": zod.string(),\n  \"icon\": zod.string().nullish(),\n  \"sections\": zod.array(zod.string()),\n  \"languages\": zod.array(zod.string()),\n  \"hasAccessToAllLanguages\": zod.boolean(),\n  \"documentStartNode\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"documentRootAccess\": zod.boolean(),\n  \"mediaStartNode\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"mediaRootAccess\": zod.boolean(),\n  \"fallbackPermissions\": zod.array(zod.string()),\n  \"permissions\": zod.array(zod.object({\n  \"$type\": zod.enum(['DocumentPermissionPresentationModel']),\n  \"document\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"verbs\": zod.array(zod.string())\n}).or(zod.object({\n  \"$type\": zod.enum(['UnknownTypePermissionPresentationModel']),\n  \"verbs\": zod.array(zod.string()),\n  \"context\": zod.string()\n}))),\n  \"id\": zod.string().uuid(),\n  \"isDeletable\": zod.boolean(),\n  \"aliasCanBeChanged\": zod.boolean()\n}))\n})\n\n\nexport const getUserGroupByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getUserGroupByIdResponse = zod.object({\n  \"name\": zod.string(),\n  \"alias\": zod.string(),\n  \"icon\": zod.string().nullish(),\n  \"sections\": zod.array(zod.string()),\n  \"languages\": zod.array(zod.string()),\n  \"hasAccessToAllLanguages\": zod.boolean(),\n  \"documentStartNode\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"documentRootAccess\": zod.boolean(),\n  \"mediaStartNode\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"mediaRootAccess\": zod.boolean(),\n  \"fallbackPermissions\": zod.array(zod.string()),\n  \"permissions\": zod.array(zod.object({\n  \"$type\": zod.enum(['DocumentPermissionPresentationModel']),\n  \"document\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"verbs\": zod.array(zod.string())\n}).or(zod.object({\n  \"$type\": zod.enum(['UnknownTypePermissionPresentationModel']),\n  \"verbs\": zod.array(zod.string()),\n  \"context\": zod.string()\n}))),\n  \"id\": zod.string().uuid(),\n  \"isDeletable\": zod.boolean(),\n  \"aliasCanBeChanged\": zod.boolean()\n})\n\n\nexport const deleteUserGroupByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\n\nexport const putUserGroupByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putUserGroupByIdBody = zod.object({\n  \"name\": zod.string(),\n  \"alias\": zod.string(),\n  \"icon\": zod.string().nullish(),\n  \"sections\": zod.array(zod.string()),\n  \"languages\": zod.array(zod.string()),\n  \"hasAccessToAllLanguages\": zod.boolean(),\n  \"documentStartNode\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"documentRootAccess\": zod.boolean(),\n  \"mediaStartNode\": zod.object({\n  \"id\": zod.string().uuid()\n}).nullish(),\n  \"mediaRootAccess\": zod.boolean(),\n  \"fallbackPermissions\": zod.array(zod.string()),\n  \"permissions\": zod.array(zod.object({\n  \"$type\": zod.enum(['DocumentPermissionPresentationModel']),\n  \"document\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"verbs\": zod.array(zod.string())\n}).or(zod.object({\n  \"$type\": zod.enum(['UnknownTypePermissionPresentationModel']),\n  \"verbs\": zod.array(zod.string()),\n  \"context\": zod.string()\n})))\n})\n\n\nexport const deleteUserGroupByIdUsersParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const deleteUserGroupByIdUsersBodyItem = zod.object({\n  \"id\": zod.string().uuid()\n})\nexport const deleteUserGroupByIdUsersBody = zod.array(deleteUserGroupByIdUsersBodyItem)\n\n\nexport const postUserGroupByIdUsersParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const postUserGroupByIdUsersBodyItem = zod.object({\n  \"id\": zod.string().uuid()\n})\nexport const postUserGroupByIdUsersBody = zod.array(postUserGroupByIdUsersBodyItem)\n\n\nexport const getFilterUserQuerySkipDefault = 0;export const getFilterUserQueryTakeDefault = 100;export const getFilterUserQueryFilterDefault = \"\";\n\nexport const getFilterUserQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getFilterUserQueryTakeDefault),\n  \"orderBy\": zod.enum(['UserName', 'Language', 'Name', 'Email', 'Id', 'CreateDate', 'UpdateDate', 'IsApproved', 'IsLockedOut', 'LastLoginDate']).optional(),\n  \"orderDirection\": zod.enum(['Ascending', 'Descending']).optional(),\n  \"userGroupIds\": zod.array(zod.string().uuid()).optional(),\n  \"userStates\": zod.array(zod.enum(['Active', 'Disabled', 'LockedOut', 'Invited', 'Inactive', 'All'])).optional(),\n  \"filter\": zod.string().optional()\n})\n\nexport const getFilterUserResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"email\": zod.string(),\n  \"userName\": zod.string(),\n  \"name\": zod.string(),\n  \"userGroupIds\": zod.array(zod.object({\n  \"id\": zod.string().uuid()\n})),\n  \"id\": zod.string().uuid(),\n  \"languageIsoCode\": zod.string().nullish(),\n  \"documentStartNodeIds\": zod.array(zod.object({\n  \"id\": zod.string().uuid()\n})),\n  \"hasDocumentRootAccess\": zod.boolean(),\n  \"mediaStartNodeIds\": zod.array(zod.object({\n  \"id\": zod.string().uuid()\n})),\n  \"hasMediaRootAccess\": zod.boolean(),\n  \"avatarUrls\": zod.array(zod.string()),\n  \"state\": zod.enum(['Active', 'Disabled', 'LockedOut', 'Invited', 'Inactive', 'All']),\n  \"failedLoginAttempts\": zod.number(),\n  \"createDate\": zod.string().datetime({\"local\":true}),\n  \"updateDate\": zod.string().datetime({\"local\":true}),\n  \"lastLoginDate\": zod.string().datetime({\"local\":true}).nullish(),\n  \"lastLockoutDate\": zod.string().datetime({\"local\":true}).nullish(),\n  \"lastPasswordChangeDate\": zod.string().datetime({\"local\":true}).nullish(),\n  \"isAdmin\": zod.boolean(),\n  \"kind\": zod.enum(['Default', 'Api'])\n}))\n})\n\n\nexport const getItemUserQueryParams = zod.object({\n  \"id\": zod.array(zod.string().uuid()).optional()\n})\n\nexport const getItemUserResponseItem = zod.object({\n  \"id\": zod.string().uuid(),\n  \"name\": zod.string(),\n  \"avatarUrls\": zod.array(zod.string()),\n  \"kind\": zod.enum(['Default', 'Api'])\n})\nexport const getItemUserResponse = zod.array(getItemUserResponseItem)\n\n\nexport const postUserBody = zod.object({\n  \"email\": zod.string(),\n  \"userName\": zod.string(),\n  \"name\": zod.string(),\n  \"userGroupIds\": zod.array(zod.object({\n  \"id\": zod.string().uuid()\n})),\n  \"id\": zod.string().uuid().nullish(),\n  \"kind\": zod.enum(['Default', 'Api'])\n})\n\n\nexport const deleteUserBody = zod.object({\n  \"userIds\": zod.array(zod.object({\n  \"id\": zod.string().uuid()\n}))\n})\n\n\nexport const getUserQuerySkipDefault = 0;export const getUserQueryTakeDefault = 100;\n\nexport const getUserQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getUserQueryTakeDefault)\n})\n\nexport const getUserResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"email\": zod.string(),\n  \"userName\": zod.string(),\n  \"name\": zod.string(),\n  \"userGroupIds\": zod.array(zod.object({\n  \"id\": zod.string().uuid()\n})),\n  \"id\": zod.string().uuid(),\n  \"languageIsoCode\": zod.string().nullish(),\n  \"documentStartNodeIds\": zod.array(zod.object({\n  \"id\": zod.string().uuid()\n})),\n  \"hasDocumentRootAccess\": zod.boolean(),\n  \"mediaStartNodeIds\": zod.array(zod.object({\n  \"id\": zod.string().uuid()\n})),\n  \"hasMediaRootAccess\": zod.boolean(),\n  \"avatarUrls\": zod.array(zod.string()),\n  \"state\": zod.enum(['Active', 'Disabled', 'LockedOut', 'Invited', 'Inactive', 'All']),\n  \"failedLoginAttempts\": zod.number(),\n  \"createDate\": zod.string().datetime({\"local\":true}),\n  \"updateDate\": zod.string().datetime({\"local\":true}),\n  \"lastLoginDate\": zod.string().datetime({\"local\":true}).nullish(),\n  \"lastLockoutDate\": zod.string().datetime({\"local\":true}).nullish(),\n  \"lastPasswordChangeDate\": zod.string().datetime({\"local\":true}).nullish(),\n  \"isAdmin\": zod.boolean(),\n  \"kind\": zod.enum(['Default', 'Api'])\n}))\n})\n\n\nexport const getUserByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getUserByIdResponse = zod.object({\n  \"email\": zod.string(),\n  \"userName\": zod.string(),\n  \"name\": zod.string(),\n  \"userGroupIds\": zod.array(zod.object({\n  \"id\": zod.string().uuid()\n})),\n  \"id\": zod.string().uuid(),\n  \"languageIsoCode\": zod.string().nullish(),\n  \"documentStartNodeIds\": zod.array(zod.object({\n  \"id\": zod.string().uuid()\n})),\n  \"hasDocumentRootAccess\": zod.boolean(),\n  \"mediaStartNodeIds\": zod.array(zod.object({\n  \"id\": zod.string().uuid()\n})),\n  \"hasMediaRootAccess\": zod.boolean(),\n  \"avatarUrls\": zod.array(zod.string()),\n  \"state\": zod.enum(['Active', 'Disabled', 'LockedOut', 'Invited', 'Inactive', 'All']),\n  \"failedLoginAttempts\": zod.number(),\n  \"createDate\": zod.string().datetime({\"local\":true}),\n  \"updateDate\": zod.string().datetime({\"local\":true}),\n  \"lastLoginDate\": zod.string().datetime({\"local\":true}).nullish(),\n  \"lastLockoutDate\": zod.string().datetime({\"local\":true}).nullish(),\n  \"lastPasswordChangeDate\": zod.string().datetime({\"local\":true}).nullish(),\n  \"isAdmin\": zod.boolean(),\n  \"kind\": zod.enum(['Default', 'Api'])\n})\n\n\nexport const deleteUserByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\n\nexport const putUserByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putUserByIdBody = zod.object({\n  \"email\": zod.string(),\n  \"userName\": zod.string(),\n  \"name\": zod.string(),\n  \"userGroupIds\": zod.array(zod.object({\n  \"id\": zod.string().uuid()\n})),\n  \"languageIsoCode\": zod.string(),\n  \"documentStartNodeIds\": zod.array(zod.object({\n  \"id\": zod.string().uuid()\n})),\n  \"hasDocumentRootAccess\": zod.boolean(),\n  \"mediaStartNodeIds\": zod.array(zod.object({\n  \"id\": zod.string().uuid()\n})),\n  \"hasMediaRootAccess\": zod.boolean()\n})\n\n\nexport const getUserById2faParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getUserById2faResponseItem = zod.object({\n  \"providerName\": zod.string(),\n  \"isEnabledOnUser\": zod.boolean()\n})\nexport const getUserById2faResponse = zod.array(getUserById2faResponseItem)\n\n\nexport const deleteUserById2faByProviderNameParams = zod.object({\n  \"id\": zod.string().uuid(),\n  \"providerName\": zod.string()\n})\n\n\nexport const getUserByIdCalculateStartNodesParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getUserByIdCalculateStartNodesResponse = zod.object({\n  \"id\": zod.string().uuid(),\n  \"documentStartNodeIds\": zod.array(zod.object({\n  \"id\": zod.string().uuid()\n})),\n  \"hasDocumentRootAccess\": zod.boolean(),\n  \"mediaStartNodeIds\": zod.array(zod.object({\n  \"id\": zod.string().uuid()\n})),\n  \"hasMediaRootAccess\": zod.boolean()\n})\n\n\nexport const postUserByIdChangePasswordParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const postUserByIdChangePasswordBody = zod.object({\n  \"newPassword\": zod.string()\n})\n\n\nexport const postUserByIdClientCredentialsParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const postUserByIdClientCredentialsBody = zod.object({\n  \"clientId\": zod.string(),\n  \"clientSecret\": zod.string()\n})\n\n\nexport const getUserByIdClientCredentialsParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getUserByIdClientCredentialsResponseItem = zod.string()\nexport const getUserByIdClientCredentialsResponse = zod.array(getUserByIdClientCredentialsResponseItem)\n\n\nexport const deleteUserByIdClientCredentialsByClientIdParams = zod.object({\n  \"id\": zod.string().uuid(),\n  \"clientId\": zod.string()\n})\n\n\nexport const postUserByIdResetPasswordParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const postUserByIdResetPasswordResponse = zod.object({\n  \"resetPassword\": zod.string().nullish()\n})\n\n\nexport const deleteUserAvatarByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\n\nexport const postUserAvatarByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const postUserAvatarByIdBody = zod.object({\n  \"file\": zod.object({\n  \"id\": zod.string().uuid()\n})\n})\n\n\nexport const getUserConfigurationResponse = zod.object({\n  \"canInviteUsers\": zod.boolean(),\n  \"usernameIsEmail\": zod.boolean(),\n  \"passwordConfiguration\": zod.object({\n  \"minimumPasswordLength\": zod.number(),\n  \"requireNonLetterOrDigit\": zod.boolean(),\n  \"requireDigit\": zod.boolean(),\n  \"requireLowercase\": zod.boolean(),\n  \"requireUppercase\": zod.boolean()\n}),\n  \"allowChangePassword\": zod.boolean(),\n  \"allowTwoFactor\": zod.boolean()\n})\n\n\nexport const getUserCurrentResponse = zod.object({\n  \"email\": zod.string(),\n  \"userName\": zod.string(),\n  \"name\": zod.string(),\n  \"userGroupIds\": zod.array(zod.object({\n  \"id\": zod.string().uuid()\n})),\n  \"id\": zod.string().uuid(),\n  \"languageIsoCode\": zod.string().nullable(),\n  \"documentStartNodeIds\": zod.array(zod.object({\n  \"id\": zod.string().uuid()\n})),\n  \"hasDocumentRootAccess\": zod.boolean(),\n  \"mediaStartNodeIds\": zod.array(zod.object({\n  \"id\": zod.string().uuid()\n})),\n  \"hasMediaRootAccess\": zod.boolean(),\n  \"avatarUrls\": zod.array(zod.string()),\n  \"languages\": zod.array(zod.string()),\n  \"hasAccessToAllLanguages\": zod.boolean(),\n  \"hasAccessToSensitiveData\": zod.boolean(),\n  \"fallbackPermissions\": zod.array(zod.string()),\n  \"permissions\": zod.array(zod.object({\n  \"$type\": zod.enum(['DocumentPermissionPresentationModel']),\n  \"document\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"verbs\": zod.array(zod.string())\n}).or(zod.object({\n  \"$type\": zod.enum(['UnknownTypePermissionPresentationModel']),\n  \"verbs\": zod.array(zod.string()),\n  \"context\": zod.string()\n}))),\n  \"allowedSections\": zod.array(zod.string()),\n  \"isAdmin\": zod.boolean()\n})\n\n\nexport const getUserCurrent2faResponseItem = zod.object({\n  \"providerName\": zod.string(),\n  \"isEnabledOnUser\": zod.boolean()\n})\nexport const getUserCurrent2faResponse = zod.array(getUserCurrent2faResponseItem)\n\n\nexport const deleteUserCurrent2faByProviderNameParams = zod.object({\n  \"providerName\": zod.string()\n})\n\nexport const deleteUserCurrent2faByProviderNameQueryParams = zod.object({\n  \"code\": zod.string().optional()\n})\n\n\nexport const postUserCurrent2faByProviderNameParams = zod.object({\n  \"providerName\": zod.string()\n})\n\nexport const postUserCurrent2faByProviderNameBody = zod.object({\n  \"code\": zod.string(),\n  \"secret\": zod.string()\n})\n\nexport const postUserCurrent2faByProviderNameResponse = zod.object({\n\n})\n\n\nexport const getUserCurrent2faByProviderNameParams = zod.object({\n  \"providerName\": zod.string()\n})\n\nexport const getUserCurrent2faByProviderNameResponse = zod.object({\n\n})\n\n\nexport const postUserCurrentAvatarBody = zod.object({\n  \"file\": zod.object({\n  \"id\": zod.string().uuid()\n})\n})\n\n\nexport const postUserCurrentChangePasswordBody = zod.object({\n  \"newPassword\": zod.string(),\n  \"oldPassword\": zod.string().nullish()\n})\n\n\nexport const getUserCurrentConfigurationResponse = zod.object({\n  \"keepUserLoggedIn\": zod.boolean(),\n  \"usernameIsEmail\": zod.boolean(),\n  \"passwordConfiguration\": zod.object({\n  \"minimumPasswordLength\": zod.number(),\n  \"requireNonLetterOrDigit\": zod.boolean(),\n  \"requireDigit\": zod.boolean(),\n  \"requireLowercase\": zod.boolean(),\n  \"requireUppercase\": zod.boolean()\n}),\n  \"allowChangePassword\": zod.boolean(),\n  \"allowTwoFactor\": zod.boolean()\n})\n\n\nexport const getUserCurrentLoginProvidersResponseItem = zod.object({\n  \"providerSchemeName\": zod.string(),\n  \"providerKey\": zod.string().nullish(),\n  \"isLinkedOnUser\": zod.boolean(),\n  \"hasManualLinkingEnabled\": zod.boolean()\n})\nexport const getUserCurrentLoginProvidersResponse = zod.array(getUserCurrentLoginProvidersResponseItem)\n\n\nexport const getUserCurrentPermissionsQueryParams = zod.object({\n  \"id\": zod.array(zod.string().uuid()).optional()\n})\n\nexport const getUserCurrentPermissionsResponse = zod.object({\n  \"permissions\": zod.array(zod.object({\n  \"nodeKey\": zod.string().uuid(),\n  \"permissions\": zod.array(zod.string())\n}))\n})\n\n\nexport const getUserCurrentPermissionsDocumentQueryParams = zod.object({\n  \"id\": zod.array(zod.string().uuid()).optional()\n})\n\nexport const getUserCurrentPermissionsDocumentResponseItem = zod.object({\n  \"permissions\": zod.array(zod.object({\n  \"nodeKey\": zod.string().uuid(),\n  \"permissions\": zod.array(zod.string())\n}))\n})\nexport const getUserCurrentPermissionsDocumentResponse = zod.array(getUserCurrentPermissionsDocumentResponseItem)\n\n\nexport const getUserCurrentPermissionsMediaQueryParams = zod.object({\n  \"id\": zod.array(zod.string().uuid()).optional()\n})\n\nexport const getUserCurrentPermissionsMediaResponse = zod.object({\n  \"permissions\": zod.array(zod.object({\n  \"nodeKey\": zod.string().uuid(),\n  \"permissions\": zod.array(zod.string())\n}))\n})\n\n\nexport const postUserDisableBody = zod.object({\n  \"userIds\": zod.array(zod.object({\n  \"id\": zod.string().uuid()\n}))\n})\n\n\nexport const postUserEnableBody = zod.object({\n  \"userIds\": zod.array(zod.object({\n  \"id\": zod.string().uuid()\n}))\n})\n\n\nexport const postUserInviteBody = zod.object({\n  \"email\": zod.string(),\n  \"userName\": zod.string(),\n  \"name\": zod.string(),\n  \"userGroupIds\": zod.array(zod.object({\n  \"id\": zod.string().uuid()\n})),\n  \"id\": zod.string().uuid().nullish(),\n  \"message\": zod.string().nullish()\n})\n\n\nexport const postUserInviteCreatePasswordBody = zod.object({\n  \"user\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"token\": zod.string().min(1),\n  \"password\": zod.string()\n})\n\n\nexport const postUserInviteResendBody = zod.object({\n  \"user\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"message\": zod.string().nullish()\n})\n\n\nexport const postUserInviteVerifyBody = zod.object({\n  \"user\": zod.object({\n  \"id\": zod.string().uuid()\n}),\n  \"token\": zod.string().min(1)\n})\n\nexport const postUserInviteVerifyResponse = zod.object({\n  \"passwordConfiguration\": zod.object({\n  \"minimumPasswordLength\": zod.number(),\n  \"requireNonLetterOrDigit\": zod.boolean(),\n  \"requireDigit\": zod.boolean(),\n  \"requireLowercase\": zod.boolean(),\n  \"requireUppercase\": zod.boolean()\n})\n})\n\n\nexport const postUserSetUserGroupsBody = zod.object({\n  \"userIds\": zod.array(zod.object({\n  \"id\": zod.string().uuid()\n})),\n  \"userGroupIds\": zod.array(zod.object({\n  \"id\": zod.string().uuid()\n}))\n})\n\n\nexport const postUserUnlockBody = zod.object({\n  \"userIds\": zod.array(zod.object({\n  \"id\": zod.string().uuid()\n}))\n})\n\n\nexport const getItemWebhookQueryParams = zod.object({\n  \"id\": zod.array(zod.string().uuid()).optional()\n})\n\nexport const getItemWebhookResponseItem = zod.object({\n  \"enabled\": zod.boolean(),\n  \"name\": zod.string(),\n  \"events\": zod.string(),\n  \"url\": zod.string(),\n  \"types\": zod.string()\n})\nexport const getItemWebhookResponse = zod.array(getItemWebhookResponseItem)\n\n\nexport const getWebhookQuerySkipDefault = 0;export const getWebhookQueryTakeDefault = 100;\n\nexport const getWebhookQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getWebhookQueryTakeDefault)\n})\n\nexport const getWebhookResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"enabled\": zod.boolean(),\n  \"name\": zod.string().nullish(),\n  \"description\": zod.string().nullish(),\n  \"url\": zod.string().min(1),\n  \"contentTypeKeys\": zod.array(zod.string().uuid()),\n  \"headers\": zod.record(zod.string(), zod.string()),\n  \"id\": zod.string().uuid(),\n  \"events\": zod.array(zod.object({\n  \"eventName\": zod.string(),\n  \"eventType\": zod.string(),\n  \"alias\": zod.string()\n}))\n}))\n})\n\n\nexport const postWebhookBody = zod.object({\n  \"enabled\": zod.boolean(),\n  \"name\": zod.string().nullish(),\n  \"description\": zod.string().nullish(),\n  \"url\": zod.string().min(1),\n  \"contentTypeKeys\": zod.array(zod.string().uuid()),\n  \"headers\": zod.record(zod.string(), zod.string()),\n  \"id\": zod.string().uuid().nullish(),\n  \"events\": zod.array(zod.string())\n})\n\n\nexport const getWebhookByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getWebhookByIdResponse = zod.object({\n  \"enabled\": zod.boolean(),\n  \"name\": zod.string().nullish(),\n  \"description\": zod.string().nullish(),\n  \"url\": zod.string().min(1),\n  \"contentTypeKeys\": zod.array(zod.string().uuid()),\n  \"headers\": zod.record(zod.string(), zod.string()),\n  \"id\": zod.string().uuid(),\n  \"events\": zod.array(zod.object({\n  \"eventName\": zod.string(),\n  \"eventType\": zod.string(),\n  \"alias\": zod.string()\n}))\n})\n\n\nexport const deleteWebhookByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\n\nexport const putWebhookByIdParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const putWebhookByIdBody = zod.object({\n  \"enabled\": zod.boolean(),\n  \"name\": zod.string().nullish(),\n  \"description\": zod.string().nullish(),\n  \"url\": zod.string().min(1),\n  \"contentTypeKeys\": zod.array(zod.string().uuid()),\n  \"headers\": zod.record(zod.string(), zod.string()),\n  \"events\": zod.array(zod.string())\n})\n\n\nexport const getWebhookByIdLogsParams = zod.object({\n  \"id\": zod.string().uuid()\n})\n\nexport const getWebhookByIdLogsQuerySkipDefault = 0;export const getWebhookByIdLogsQueryTakeDefault = 100;\n\nexport const getWebhookByIdLogsQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getWebhookByIdLogsQueryTakeDefault)\n})\n\nexport const getWebhookByIdLogsResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"key\": zod.string().uuid(),\n  \"webhookKey\": zod.string().uuid(),\n  \"statusCode\": zod.string(),\n  \"isSuccessStatusCode\": zod.boolean(),\n  \"date\": zod.string().datetime({\"local\":true}),\n  \"eventAlias\": zod.string(),\n  \"url\": zod.string(),\n  \"retryCount\": zod.number(),\n  \"requestHeaders\": zod.string(),\n  \"requestBody\": zod.string(),\n  \"responseHeaders\": zod.string(),\n  \"responseBody\": zod.string(),\n  \"exceptionOccured\": zod.boolean()\n}))\n})\n\n\nexport const getWebhookEventsQuerySkipDefault = 0;export const getWebhookEventsQueryTakeDefault = 100;\n\nexport const getWebhookEventsQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getWebhookEventsQueryTakeDefault)\n})\n\nexport const getWebhookEventsResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"eventName\": zod.string(),\n  \"eventType\": zod.string(),\n  \"alias\": zod.string()\n}))\n})\n\n\nexport const getWebhookLogsQuerySkipDefault = 0;export const getWebhookLogsQueryTakeDefault = 100;\n\nexport const getWebhookLogsQueryParams = zod.object({\n  \"skip\": zod.coerce.number().optional(),\n  \"take\": zod.coerce.number().default(getWebhookLogsQueryTakeDefault)\n})\n\nexport const getWebhookLogsResponse = zod.object({\n  \"total\": zod.number(),\n  \"items\": zod.array(zod.object({\n  \"key\": zod.string().uuid(),\n  \"webhookKey\": zod.string().uuid(),\n  \"statusCode\": zod.string(),\n  \"isSuccessStatusCode\": zod.boolean(),\n  \"date\": zod.string().datetime({\"local\":true}),\n  \"eventAlias\": zod.string(),\n  \"url\": zod.string(),\n  \"retryCount\": zod.number(),\n  \"requestHeaders\": zod.string(),\n  \"requestBody\": zod.string(),\n  \"responseHeaders\": zod.string(),\n  \"responseBody\": zod.string(),\n  \"exceptionOccured\": zod.boolean()\n}))\n})\n\n\n","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\nimport { CreateUmbracoTool } from \"@/helpers/create-umbraco-tool.js\";\nimport { GetCultureParams } from \"@/umb-management-api/schemas/index.js\";\nimport { getCultureQueryParams } from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\n\nconst GetCulturesTool = CreateUmbracoTool(\n  \"get-culture\",\n  \"Retrieves a paginated list of cultures that Umbraco can be configured to use\",\n  getCultureQueryParams.shape,\n  async (params: GetCultureParams) => {\n    const client = UmbracoManagementClient.getClient();\n    var response = await client.getCulture(params);\n    return {\n      content: [\n        {\n          type: \"text\" as const,\n          text: JSON.stringify(response),\n        },\n      ],\n    };\n  }\n);\n\nexport default GetCulturesTool;\n","import GetCulturesTool from \"./get-cultures.js\";\n\nexport const CultureTools = [GetCulturesTool];\n","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\nimport { CreateUmbracoTool } from \"@/helpers/create-umbraco-tool.js\";\nimport { GetTreeDataTypeRootParams } from \"@/umb-management-api/schemas/index.js\";\nimport { getTreeDataTypeRootQueryParams } from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\n\nconst GetDataTypeRootTool = CreateUmbracoTool(\n  \"get-data-type-root\",\n  \"Gets the root level of the data type tree.\",\n  getTreeDataTypeRootQueryParams.shape,\n  async (params: GetTreeDataTypeRootParams) => {\n    const client = UmbracoManagementClient.getClient();\n    var response = await client.getTreeDataTypeRoot(params);\n    return {\n      content: [\n        {\n          type: \"text\" as const,\n          text: JSON.stringify(response),\n        },\n      ],\n    };\n  }\n);\n\nexport default GetDataTypeRootTool;\n","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\nimport { CreateUmbracoTool } from \"@/helpers/create-umbraco-tool.js\";\nimport { CreateDataTypeRequestModel } from \"@/umb-management-api/schemas/index.js\";\nimport { postDataTypeBody } from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\n\nconst CreateDataTypeTool = CreateUmbracoTool(\n  \"create-data-type\",\n  \"Creates a new data type\",\n  postDataTypeBody.shape,\n  async (model: CreateDataTypeRequestModel) => {\n    try {\n      const client = UmbracoManagementClient.getClient();\n      var response = await client.postDataType(model);\n\n      return {\n        content: [\n          {\n            type: \"text\" as const,\n            text: JSON.stringify(response),\n          },\n        ],\n      };\n    } catch (error) {\n      console.error(\"Error creating data type:\", error);\n      return {\n        content: [\n          {\n            type: \"text\" as const,\n            text: `Error: ${error}`,\n          },\n        ],\n      };\n    }\n  }\n);\n\nexport default CreateDataTypeTool;\n","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\nimport { CreateUmbracoTool } from \"@/helpers/create-umbraco-tool.js\";\nimport { deleteDataTypeByIdParams } from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\n\nconst DeleteDataTypeTool = CreateUmbracoTool(\n  \"delete-data-type\",\n  \"Deletes a data type by Id\",\n  deleteDataTypeByIdParams.shape,\n  async ({ id }) => {\n    try {\n      const client = UmbracoManagementClient.getClient();\n      var response = await client.deleteDataTypeById(id);\n\n      return {\n        content: [\n          {\n            type: \"text\" as const,\n            text: JSON.stringify(response),\n          },\n        ],\n      };\n    } catch (error) {\n      console.error(\"Error creating data type:\", error);\n      return {\n        content: [\n          {\n            type: \"text\" as const,\n            text: `Error: ${error}`,\n          },\n        ],\n      };\n    }\n  }\n);\n\nexport default DeleteDataTypeTool;\n","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\nimport { CreateUmbracoTool } from \"@/helpers/create-umbraco-tool.js\";\nimport { GetFilterDataTypeParams } from \"@/umb-management-api/schemas/index.js\";\nimport { getFilterDataTypeQueryParams } from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\n\nconst FindDataTypeTool = CreateUmbracoTool(\n  \"find-data-type\",\n  \"Finds a data type by Id or name\",\n  getFilterDataTypeQueryParams.shape,\n  async (model: GetFilterDataTypeParams) => {\n    try {\n      const client = UmbracoManagementClient.getClient();\n      var response = await client.getFilterDataType(model);\n\n      return {\n        content: [\n          {\n            type: \"text\" as const,\n            text: JSON.stringify(response),\n          },\n        ],\n      };\n    } catch (error) {\n      console.error(\"Error creating data type:\", error);\n      return {\n        content: [\n          {\n            type: \"text\" as const,\n            text: `Error: ${error}`,\n          },\n        ],\n      };\n    }\n  }\n);\n\nexport default FindDataTypeTool;\n","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\nimport { CreateUmbracoTool } from \"@/helpers/create-umbraco-tool.js\";\nimport { getDataTypeByIdParams } from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\n\nconst GetDataTypeTool = CreateUmbracoTool(\n  \"get-data-type\",\n  \"Gets a data type by Id\",\n  getDataTypeByIdParams.shape,\n  async ({ id }) => {\n    try {\n      const client = UmbracoManagementClient.getClient();\n      const response = await client.getDataTypeById(id);\n\n      return {\n        content: [\n          {\n            type: \"text\" as const,\n            text: JSON.stringify(response),\n          },\n        ],\n        resource: {\n          type: \"data-type\" as const,\n          ...response,\n          uri: `${process.env.UMBRACO_BASE_URL}/umbraco/section/settings/workspace/data-type/edit/${response.id}`,\n        },\n      };\n    } catch (error) {\n      console.error(\"Error creating data type:\", error);\n      return {\n        content: [\n          {\n            type: \"text\" as const,\n            text: `Error: ${error}`,\n          },\n        ],\n      };\n    }\n  }\n);\n\nexport default GetDataTypeTool;\n","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\nimport { CreateUmbracoTool } from \"@/helpers/create-umbraco-tool.js\";\nimport { UpdateDataTypeRequestModel } from \"@/umb-management-api/schemas/index.js\";\nimport {\n  putDataTypeByIdBody,\n  putDataTypeByIdParams,\n} from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\n\nimport { z } from \"zod\";\n\nconst UpdateDataTypeTool = CreateUmbracoTool(\n  \"update-data-type\",\n  \"Updates a data type by Id\",\n  {\n    id: putDataTypeByIdParams.shape.id,\n    data: z.object(putDataTypeByIdBody.shape),\n  },\n  async (model: { id: string; data: UpdateDataTypeRequestModel }) => {\n    try {\n      const client = UmbracoManagementClient.getClient();\n      var response = await client.putDataTypeById(model.id, model.data);\n\n      return {\n        content: [\n          {\n            type: \"text\" as const,\n            text: JSON.stringify(response),\n          },\n        ],\n      };\n    } catch (error) {\n      console.error(\"Error creating data type:\", error);\n      return {\n        content: [\n          {\n            type: \"text\" as const,\n            text: `Error: ${error}`,\n          },\n        ],\n      };\n    }\n  }\n);\n\nexport default UpdateDataTypeTool;\n","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\nimport { CreateUmbracoTool } from \"@/helpers/create-umbraco-tool.js\";\nimport { CopyDataTypeRequestModel } from \"@/umb-management-api/schemas/index.js\";\nimport {\n  postDataTypeByIdCopyParams,\n  postDataTypeByIdCopyBody,\n} from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\nimport { z } from \"zod\";\n\nconst CopyDataTypeTool = CreateUmbracoTool(\n  \"copy-data-type\",\n  \"Copy a data type by Id\",\n  {\n    id: postDataTypeByIdCopyParams.shape.id,\n    body: z.object(postDataTypeByIdCopyBody.shape),\n  },\n  async ({ id, body }: { id: string; body: CopyDataTypeRequestModel }) => {\n    try {\n      const client = UmbracoManagementClient.getClient();\n      var response = await client.postDataTypeByIdCopy(id, body);\n\n      return {\n        content: [\n          {\n            type: \"text\" as const,\n            text: JSON.stringify(response),\n          },\n        ],\n      };\n    } catch (error) {\n      console.error(\"Error copying data type:\", error);\n      return {\n        content: [\n          {\n            type: \"text\" as const,\n            text: `Error: ${error}`,\n          },\n        ],\n      };\n    }\n  }\n);\n\nexport default CopyDataTypeTool;\n","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\nimport { CreateUmbracoTool } from \"@/helpers/create-umbraco-tool.js\";\nimport { getDataTypeByIdIsUsedParams } from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\n\nconst IsUsedDataTypeTool = CreateUmbracoTool(\n  \"is-used-data-type\",\n  \"Checks if a data type is used within Umbraco\",\n  getDataTypeByIdIsUsedParams.shape,\n  async ({ id }) => {\n    try {\n      const client = UmbracoManagementClient.getClient();\n      var response = await client.getDataTypeByIdIsUsed(id);\n\n      return {\n        content: [\n          {\n            type: \"text\" as const,\n            text: JSON.stringify(response),\n          },\n        ],\n      };\n    } catch (error) {\n      console.error(\"Error creating data type:\", error);\n      return {\n        content: [\n          {\n            type: \"text\" as const,\n            text: `Error: ${error}`,\n          },\n        ],\n      };\n    }\n  }\n);\n\nexport default IsUsedDataTypeTool;\n","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\nimport { CreateUmbracoTool } from \"@/helpers/create-umbraco-tool.js\";\nimport { MoveDataTypeRequestModel } from \"@/umb-management-api/schemas/index.js\";\nimport {\n  putDataTypeByIdMoveParams,\n  putDataTypeByIdMoveBody,\n} from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\n\nimport { z } from \"zod\";\n\nconst MoveDataTypeTool = CreateUmbracoTool(\n  \"move-data-type\",\n  \"Updates a data type by Id\",\n  {\n    id: putDataTypeByIdMoveParams.shape.id,\n    data: z.object(putDataTypeByIdMoveBody.shape),\n  },\n  async (model: { id: string; data: MoveDataTypeRequestModel }) => {\n    try {\n      const client = UmbracoManagementClient.getClient();\n      var response = await client.putDataTypeByIdMove(model.id, model.data);\n\n      return {\n        content: [\n          {\n            type: \"text\" as const,\n            text: JSON.stringify(response),\n          },\n        ],\n      };\n    } catch (error) {\n      console.error(\"Error creating data type:\", error);\n      return {\n        content: [\n          {\n            type: \"text\" as const,\n            text: `Error: ${error}`,\n          },\n        ],\n      };\n    }\n  }\n);\n\nexport default MoveDataTypeTool;\n","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\nimport { CreateUmbracoTool } from \"@/helpers/create-umbraco-tool.js\";\nimport { getDataTypeByIdReferencesParams } from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\n\nconst GetReferencesDataTypeTool = CreateUmbracoTool(\n  \"get-references-data-type\",\n  \"Gets a data type by Id\",\n  getDataTypeByIdReferencesParams.shape,\n  async ({ id }) => {\n    try {\n      const client = UmbracoManagementClient.getClient();\n      var response = await client.getDataTypeByIdReferences(id);\n\n      return {\n        content: [\n          {\n            type: \"text\" as const,\n            text: JSON.stringify(response),\n          },\n        ],\n      };\n    } catch (error) {\n      console.error(\"Error creating data type:\", error);\n      return {\n        content: [\n          {\n            type: \"text\" as const,\n            text: `Error: ${error}`,\n          },\n        ],\n      };\n    }\n  }\n);\n\nexport default GetReferencesDataTypeTool;\n","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\nimport { CreateUmbracoTool } from \"@/helpers/create-umbraco-tool.js\";\nimport { CreateFolderRequestModel } from \"@/umb-management-api/schemas/index.js\";\nimport { postDataTypeFolderBody } from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\n\nconst CreateDataTypeFolderTool = CreateUmbracoTool(\n  \"create-data-type-folder\",\n  \"Creates a new data type folder\",\n  postDataTypeFolderBody.shape,\n  async (model: CreateFolderRequestModel) => {\n    try {\n      const client = UmbracoManagementClient.getClient();\n      var response = await client.postDataTypeFolder(model);\n\n      return {\n        content: [\n          {\n            type: \"text\" as const,\n            text: JSON.stringify(response),\n          },\n        ],\n      };\n    } catch (error) {\n      console.error(\"Error creating data type:\", error);\n      return {\n        content: [\n          {\n            type: \"text\" as const,\n            text: `Error: ${error}`,\n          },\n        ],\n      };\n    }\n  }\n);\n\nexport default CreateDataTypeFolderTool;\n","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\nimport { CreateUmbracoTool } from \"@/helpers/create-umbraco-tool.js\";\nimport { deleteDataTypeFolderByIdParams } from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\n\nconst DeleteDataTypeFolderTool = CreateUmbracoTool(\n  \"delete-data-type-folder\",\n  \"Deletes a data type folder by Id\",\n  deleteDataTypeFolderByIdParams.shape,\n  async ({ id }) => {\n    try {\n      const client = UmbracoManagementClient.getClient();\n      var response = await client.deleteDataTypeFolderById(id);\n\n      return {\n        content: [\n          {\n            type: \"text\" as const,\n            text: JSON.stringify(response),\n          },\n        ],\n      };\n    } catch (error) {\n      console.error(\"Error creating data type:\", error);\n      return {\n        content: [\n          {\n            type: \"text\" as const,\n            text: `Error: ${error}`,\n          },\n        ],\n      };\n    }\n  }\n);\n\nexport default DeleteDataTypeFolderTool;\n","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\nimport { CreateUmbracoTool } from \"@/helpers/create-umbraco-tool.js\";\nimport { getDataTypeFolderByIdParams } from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\n\nconst GetDataTypeFolderTool = CreateUmbracoTool(\n  \"get-data-type-folder\",\n  \"Gets a data type folder by Id\",\n  getDataTypeFolderByIdParams.shape,\n  async ({ id }) => {\n    try {\n      const client = UmbracoManagementClient.getClient();\n      var response = await client.getDataTypeFolderById(id);\n\n      return {\n        content: [\n          {\n            type: \"text\" as const,\n            text: JSON.stringify(response),\n          },\n        ],\n      };\n    } catch (error) {\n      console.error(\"Error creating data type:\", error);\n      return {\n        content: [\n          {\n            type: \"text\" as const,\n            text: `Error: ${error}`,\n          },\n        ],\n      };\n    }\n  }\n);\n\nexport default GetDataTypeFolderTool;\n","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\nimport { CreateUmbracoTool } from \"@/helpers/create-umbraco-tool.js\";\nimport { GetTreeDataTypeRootParams } from \"@/umb-management-api/schemas/index.js\";\nimport { getTreeDataTypeRootQueryParams } from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\n\nconst GetDataTypeSearchTool = CreateUmbracoTool(\n  \"get-data-type-search\",\n  \"Searches the data type tree for a data type or a folder.\",\n  getTreeDataTypeRootQueryParams.shape,\n  async (params: GetTreeDataTypeRootParams) => {\n    const client = UmbracoManagementClient.getClient();\n    var response = await client.getItemDataTypeSearch(params);\n    return {\n      content: [\n        { \n          type: \"text\" as const,\n          text: JSON.stringify(response),\n        },\n      ],\n    };\n  }\n);\n \nexport default GetDataTypeSearchTool;\n","import GetDataTypeRootTool from \"./get/get-root.js\";\nimport CreateDataTypeTool from \"./post/create-data-type.js\";\nimport DeleteDataTypeTool from \"./delete/delete-data-type.js\";\nimport FindDataTypeTool from \"./get/find-data-type.js\";\nimport GetDataTypeTool from \"./get/get-data-type.js\";\nimport UpdateDataTypeTool from \"./put/update-data-type.js\";\nimport CopyDataTypeTool from \"./post/copy-data-type.js\";\nimport IsUsedDataTypeTool from \"./get/is-used-data-type.js\";\nimport MoveDataTypeTool from \"./put/move-data-type.js\";\nimport GetReferencesDataTypeTool from \"./get/get-references-data-type.js\";\nimport CreateDataTypeFolderTool from \"./folders/post/create-folder.js\";\nimport DeleteDataTypeFolderTool from \"./folders/delete/delete-folder.js\";\nimport GetDataTypeFolderTool from \"./folders/get/get-folder.js\";\nimport GetDataTypeSearchTool from \"./get/get-search.js\";\n\nexport const DataTypeTools = [\n  GetDataTypeRootTool,\n  GetDataTypeSearchTool,\n  CreateDataTypeTool,\n  DeleteDataTypeTool,\n  FindDataTypeTool,\n  GetDataTypeTool,\n  UpdateDataTypeTool,\n  CopyDataTypeTool,\n  IsUsedDataTypeTool,\n  MoveDataTypeTool,\n  GetReferencesDataTypeTool,\n  CreateDataTypeFolderTool,\n  DeleteDataTypeFolderTool,\n  GetDataTypeFolderTool,\n];\n","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\nimport { CreateUmbracoTool } from \"@/helpers/create-umbraco-tool.js\";\nimport { deleteDictionaryByIdParams } from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\n\nconst DeleteDictionaryItemTool = CreateUmbracoTool(\n  \"delete-dictionary-item\",\n  \"Deletes a dictionary item by Id\",\n  deleteDictionaryByIdParams.shape,\n  async ({ id }) => {\n    try {\n      const client = UmbracoManagementClient.getClient();\n      var response = await client.deleteDictionaryById(id);\n\n      return {\n        content: [\n          {\n            type: \"text\" as const,\n            text: JSON.stringify(response),\n          },\n        ],\n      };\n    } catch (error) {\n      console.error(\"Error creating data type:\", error);\n      return {\n        content: [\n          {\n            type: \"text\" as const,\n            text: `Error: ${error}`,\n          },\n        ],\n      };\n    }\n  }\n);\n\nexport default DeleteDictionaryItemTool;\n","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\nimport { CreateUmbracoTool } from \"@/helpers/create-umbraco-tool.js\";\nimport { GetDictionaryParams } from \"@/umb-management-api/schemas/index.js\";\nimport { getDictionaryQueryParams } from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\n\nconst FindDictionaryItemTool = CreateUmbracoTool(\n  \"find-dictionary\",\n  \"Finds a dictionary by Id or name\",\n  getDictionaryQueryParams.shape,\n  async (model: GetDictionaryParams) => {\n    try {\n      const client = UmbracoManagementClient.getClient();\n      var response = await client.getDictionary(model);\n\n      return {\n        content: [\n          {\n            type: \"text\" as const,\n            text: JSON.stringify(response),\n          },\n        ],\n      };\n    } catch (error) {\n      console.error(\"Error creating data type:\", error);\n      return {\n        content: [\n          {\n            type: \"text\" as const,\n            text: `Error: ${error}`,\n          },\n        ],\n      };\n    }\n  }\n);\n\nexport default FindDictionaryItemTool;\n","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\nimport { CreateUmbracoTool } from \"@/helpers/create-umbraco-tool.js\";\nimport { getDictionaryByIdParams } from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\n\nconst GetDictionaryItemTool = CreateUmbracoTool(\n  \"get-dictionary\",\n  \"Gets a dictionary by Id\",\n  getDictionaryByIdParams.shape,\n  async ({ id }) => {\n    try {\n      const client = UmbracoManagementClient.getClient();\n      const response = await client.getDictionaryById(id);\n\n      return {\n        content: [\n          {\n            type: \"text\" as const,\n            text: JSON.stringify(response),\n          },\n        ],\n      };\n    } catch (error) {\n      console.error(\"Error getting dictionary:\", error);\n      return {\n        content: [\n          {\n            type: \"text\" as const,\n            text: `Error: ${error}`,\n          },\n        ],\n      };\n    }\n  }\n);\n\nexport default GetDictionaryItemTool;\n","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\nimport { CreateUmbracoTool } from \"@/helpers/create-umbraco-tool.js\";\nimport { CreateDictionaryItemRequestModel } from \"@/umb-management-api/schemas/index.js\";\nimport { postDictionaryBody } from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\n\nconst CreateDictionaryItemTool = CreateUmbracoTool(\n  \"create-dictionary\",\n  \"Creates a new dictionary item\",\n  postDictionaryBody.shape,\n  async (model: CreateDictionaryItemRequestModel) => {\n    try {\n      const client = UmbracoManagementClient.getClient();\n      var response = await client.postDictionary(model);\n\n      return {\n        content: [\n          {\n            type: \"text\" as const,\n            text: JSON.stringify(response),\n          },\n        ],\n      };\n    } catch (error) {\n      console.error(\"Error creating data type:\", error);\n      return {\n        content: [\n          {\n            type: \"text\" as const,\n            text: `Error: ${error}`,\n          },\n        ],\n      };\n    }\n  }\n);\n\nexport default CreateDictionaryItemTool;\n","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\nimport { CreateUmbracoTool } from \"@/helpers/create-umbraco-tool.js\";\nimport { UpdateDictionaryItemRequestModel } from \"@/umb-management-api/schemas/index.js\";\nimport {\n  putDictionaryByIdBody,\n  putDictionaryByIdParams,\n} from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\n\nimport { z } from \"zod\";\n\nconst UpdateDictionaryItemTool = CreateUmbracoTool(\n  \"update-dictionary-item\",\n  \"Updates a dictionary item by Id\",\n  {\n    id: putDictionaryByIdParams.shape.id,\n    data: z.object(putDictionaryByIdBody.shape),\n  },\n  async (model: { id: string; data: UpdateDictionaryItemRequestModel }) => {\n    try {\n      const client = UmbracoManagementClient.getClient();\n      var response = await client.putDictionaryById(model.id, model.data);\n\n      return {\n        content: [\n          {\n            type: \"text\" as const,\n            text: JSON.stringify(response),\n          },\n        ],\n      };\n    } catch (error) {\n      console.error(\"Error creating data type:\", error);\n      return {\n        content: [\n          {\n            type: \"text\" as const,\n            text: `Error: ${error}`,\n          },\n        ],\n      };\n    }\n  }\n);\n\nexport default UpdateDictionaryItemTool;\n","import DeleteDictionaryItemTool from \"./delete/delete-dictionary-item.js\";\nimport FindDictionaryItemTool from \"./get/find-dictionary-item.js\";\nimport GetDictionaryItemTool from \"./get/get-dictionary-item.js\";\nimport CreateDictionaryItemTool from \"./post/create-dictionary-item.js\";\nimport UpdateDictionaryItemTool from \"./put/update-dictionary-item.js\";\n\nexport const DictionaryTools = [\n  GetDictionaryItemTool,\n  FindDictionaryItemTool,\n  CreateDictionaryItemTool,\n  DeleteDictionaryItemTool,\n  UpdateDictionaryItemTool\n];\n","import { McpServer } from \"@modelcontextprotocol/sdk/server/mcp.js\";\n\nimport { CultureTools } from \"./culture/index.js\";\nimport { DataTypeTools } from \"./data-types/index.js\";\nimport { DictionaryTools } from \"./dictionary/index.js\";\n\nexport function ToolFactory(server: McpServer) {\n  CultureTools.map((tool) => tool()).forEach((tool) =>\n    server.tool(tool.name, tool.description, tool.schema, tool.handler)\n  );\n  DataTypeTools.map((tool) => tool()).forEach((tool) =>\n    server.tool(tool.name, tool.description, tool.schema, tool.handler)\n  );\n  DictionaryTools.map((tool) => tool()).forEach((tool) =>\n    server.tool(tool.name, tool.description, tool.schema, tool.handler)\n  );\n}\n","import { ReadResourceTemplateCallback, ResourceTemplate } from \"@modelcontextprotocol/sdk/server/mcp.js\";\nimport { ResourceTemplateDefinition } from \"types/resource-template-definition.js\";\n\nexport const CreateUmbracoTemplateResource = (\n  name: string,\n  description: string,\n  template: ResourceTemplate,\n  handler: ReadResourceTemplateCallback\n): (() => ResourceTemplateDefinition) =>\n  () => ({\n    name,\n    description,\n    template,\n    handler\n  }); ","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\nimport { CreateUmbracoTemplateResource } from \"@/helpers/create-umbraco-template-resource.js\";\nimport { getTreeDataTypeRootQueryParams } from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\nimport { ResourceTemplate } from \"@modelcontextprotocol/sdk/server/mcp.js\";\n\nconst GetDataTypeRootResource = CreateUmbracoTemplateResource(\n  \"List Data Types at Root\",\n  new ResourceTemplate(\"umbraco://data-type/root?skip={skip}&take={take}&foldersOnly={foldersOnly}\", {\n    list: undefined,\n    complete: {\n      skip: (value: string) => [\"0\", \"10\", \"20\", \"30\", \"40\", \"50\", \"60\", \"70\", \"80\", \"90\", \"100\"],\n      take: (value: string) => [\"10\", \"20\", \"50\", \"100\"],\n      foldersOnly: (value: string) => [\"true\", \"false\"]\n    }\n  }),\n  async (uri, variables) => {\n    try {\n      const client = UmbracoManagementClient.getClient();\n      const params = getTreeDataTypeRootQueryParams.parse(variables);\n      const response = await client.getTreeDataTypeRoot(params);\n      return {\n        contents: [{\n          uri: uri.href,\n          text: JSON.stringify(response, null, 2),\n          mimeType: \"application/json\"\n        }]\n      };\n    } catch (error) {\n      console.error('Error in GetDataTypeRootResource:', error);\n      throw error;\n    }\n  }\n);\n\nexport default GetDataTypeRootResource;\n","import GetDataTypeRootResource from \"./get/get-root.js\";\n\nexport const DataTypeTemplateResources = [\n  GetDataTypeRootResource,\n];\n","import { ReadResourceCallback } from \"@modelcontextprotocol/sdk/server/mcp.js\";\nimport { ResourceDefinition } from \"../types/resource-definition.js\";\n\nexport const CreateUmbracoReadResource =\n  (\n    uri: string,\n    name: string,\n    description: string,\n    handler: ReadResourceCallback\n  ): (() => ResourceDefinition) =>\n    () => ({\n      uri,\n      name,\n      description,\n      handler\n    });","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\nimport { CreateUmbracoReadResource } from \"@/helpers/create-umbraco-read-resource.js\";\n\nconst GetLangagueDefaultResource = CreateUmbracoReadResource(\n  \"umbraco://item/langage/default\",\n  \"List default language\",\n  \"List the default language for the current Umbraco instance\",\n  async (uri) => {\n    try {\n      const client = UmbracoManagementClient.getClient();\n      const response = await client.getItemLanguageDefault();\n      return {\n        contents: [{\n          uri: uri.href,\n          text: JSON.stringify(response, null, 2),\n          mimeType: \"application/json\"\n        }]\n      };\n    } catch (error) {\n      console.error('Error in GetItemLanguageDefault:', error);\n      throw error;\n    }\n  }\n);\n\nexport default GetLangagueDefaultResource;","import GetLangagueDefaultResource from \"./get/get-default.js\";\n\nexport const LanugageReadResources = [\n  GetLangagueDefaultResource,\n];\n","import { McpServer } from \"@modelcontextprotocol/sdk/server/mcp.js\";\nimport { DataTypeTemplateResources } from \"./data-types/index.js\";\nimport { LanugageReadResources } from \"./language/index.js\";\n\nexport function ResourceFactory(server: McpServer) {\n  LanugageReadResources.map((resource) => resource()).forEach((resource) =>\n    server.resource(resource.name, resource.uri, { description: resource.description }, resource.handler)\n  );\n\n  DataTypeTemplateResources.map((resource) => resource()).forEach((resource) =>\n    server.resource(resource.name, resource.template, { description: resource.description }, resource.handler)\n  );\n}\n"],"mappings":"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","names":["postTemporaryFileBody","UmbracoManagementClient","UmbracoManagementClient","UmbracoManagementClient","UmbracoManagementClient","UmbracoManagementClient","UmbracoManagementClient","UmbracoManagementClient","UmbracoManagementClient","z","UmbracoManagementClient","UmbracoManagementClient","z","UmbracoManagementClient","UmbracoManagementClient","UmbracoManagementClient","UmbracoManagementClient","UmbracoManagementClient","UmbracoManagementClient","UmbracoManagementClient","UmbracoManagementClient","UmbracoManagementClient","UmbracoManagementClient","z","UmbracoManagementClient","UmbracoManagementClient","get_root_default","get_root_default","UmbracoManagementClient"]}