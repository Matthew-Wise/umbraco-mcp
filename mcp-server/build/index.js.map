{"version":3,"sources":["../src/index.ts","../src/server/umbraco-mcp-server.ts","../src/api/umbraco/clients/umbraco-management-client.ts","../src/api/umbraco/management/umbracoManagementAPI.ts","../src/clients/umbraco-management-client.ts","../src/helpers/create-umbraco-tool.ts","../src/api/umbraco/management/umbracoManagementAPI.zod.ts","../src/tools/culture/get-cultures.ts","../src/tools/culture/index.ts","../src/tools/data-types/get/get-root.ts","../src/tools/data-types/post/create-data-type.ts","../src/tools/data-types/delete/delete-data-type.ts","../src/tools/data-types/get/find-data-type.ts","../src/tools/data-types/get/get-data-type.ts","../src/tools/data-types/put/update-data-type.ts","../src/tools/data-types/post/copy-data-type.ts","../src/tools/data-types/get/is-used-data-type.ts","../src/tools/data-types/put/move-data-type.ts","../src/tools/data-types/get/get-references-data-type.ts","../src/tools/data-types/folders/post/create-folder.ts","../src/tools/data-types/folders/delete/delete-folder.ts","../src/tools/data-types/folders/get/get-folder.ts","../src/tools/data-types/index.ts","../src/tools/tool-factory.ts"],"sourcesContent":["#!/usr/bin/env node\r\n\r\nimport { StdioServerTransport } from \"@modelcontextprotocol/sdk/server/stdio.js\";\r\nimport { UmbracoMcpServer } from \"./server/umbraco-mcp-server.js\";\r\nimport { ToolFactory } from \"./tools/tool-factory.js\";\r\n\r\nconst main = async () => {\r\n  // Create an MCP server\r\n  const server = UmbracoMcpServer.GetServer();\r\n\r\n  ToolFactory(server);\r\n\r\n  // Start receiving messages on stdin and sending messages on stdout\r\n  const transport = new StdioServerTransport();\r\n  await server.connect(transport);\r\n};\r\n\r\nmain().catch((error) => {\r\n  console.error(\"Error:\", error);\r\n  process.exit(1);\r\n});\r\n","import { McpServer } from \"@modelcontextprotocol/sdk/server/mcp.js\";\r\n\r\nexport class UmbracoMcpServer {\r\n  private static instance: McpServer | null = null;\r\n\r\n  private constructor() {}\r\n\r\n  public static GetServer(): McpServer {\r\n    if (UmbracoMcpServer.instance === null) {\r\n      UmbracoMcpServer.instance = new McpServer({\r\n        name: \"Umbraco Server\",\r\n        version: \"1.0.0\",\r\n        capabilities: {\r\n          tools: {},\r\n        },\r\n      });\r\n    }\r\n    return UmbracoMcpServer.instance;\r\n  }\r\n}\r\n","import Axios, { AxiosRequestConfig } from \"axios\";\r\n\r\nconst client_id = process.env.UMBRACO_CLIENT_ID;\r\nconst client_secret = process.env.UMBRACO_CLIENT_SECRET;\r\nconst grant_type = \"client_credentials\";\r\n\r\nconst baseURL = process.env.UMBRACO_BASE_URL;\r\n\r\nif (!baseURL)\r\n  throw new Error(\"Missing required environment variable: UMBRACO_BASE_URL\");\r\nif (!client_id)\r\n  throw new Error(\"Missing required environment variable: UMBRACO_CLIENT_ID\");\r\nif (!client_secret && client_id !== \"umbraco-swagger\")\r\n  throw new Error(\r\n    \"Missing required environment variable: UMBRACO_CLIENT_SECRET\"\r\n  );\r\n\r\nconst tokenPath = \"/umbraco/management/api/v1/security/back-office/token\";\r\n\r\nexport const UmbracoAxios = Axios.create({ baseURL }); // Set base URL from config\r\n\r\nlet accessToken: string | null = null;\r\nlet tokenExpiry: number | null = null;\r\n\r\n// Function to fetch a new access token\r\nconst fetchAccessToken = async (): Promise<string | null> => {\r\n  const response = await Axios.post(\r\n    `${baseURL}${tokenPath}`,\r\n    {\r\n      client_id,\r\n      client_secret: client_secret ?? \"\",\r\n      grant_type,\r\n    },\r\n    {\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n      },\r\n    }\r\n  );\r\n\r\n  const { access_token, expires_in } = response.data;\r\n  accessToken = access_token;\r\n  tokenExpiry = Date.now() + expires_in * 1000; // Calculate token expiry time\r\n  return accessToken;\r\n};\r\n\r\n// Axios request interceptor to add the Authorization header\r\nUmbracoAxios.interceptors.request.use(async (config) => {\r\n  if (!accessToken || (tokenExpiry && Date.now() >= tokenExpiry)) {\r\n    await fetchAccessToken(); // Fetch a new token if it doesn't exist or has expired\r\n  }\r\n\r\n  if (accessToken) {\r\n    config.headers.Authorization = `Bearer ${accessToken}`;\r\n  }\r\n\r\n  return config;\r\n});\r\n\r\n// Add a generic error handler to the Axios instance\r\nUmbracoAxios.interceptors.response.use(\r\n  (response) => response, // Pass through successful responses\r\n  (error) => {\r\n    if (error.response) {\r\n      // Server responded with a status code outside the 2xx range\r\n      console.error(\r\n        `HTTP Error: ${error.response.status}`,\r\n        error.response.data\r\n      );\r\n    } else if (error.request) {\r\n      // Request was made but no response was received\r\n      console.error(\"No response received:\", error.request);\r\n    } else {\r\n      // Something happened in setting up the request\r\n      console.error(\"Error setting up request:\", error.message);\r\n    }\r\n\r\n    // Optionally, you can throw the error to be handled by the caller\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// add a second `options` argument here if you want to pass extra options to each generated query\r\nexport const UmbracoManagementClient = <T>(\r\n  config: AxiosRequestConfig,\r\n  options?: AxiosRequestConfig\r\n): Promise<T> => {\r\n  const source = Axios.CancelToken.source();\r\n  const promise = UmbracoAxios({\r\n    ...config,\r\n    ...options,\r\n    cancelToken: source.token,\r\n  }).then(({ data }) => data);\r\n\r\n  // @ts-ignore\r\n  promise.cancel = () => {\r\n    source.cancel(\"Query was cancelled\");\r\n  };\r\n\r\n  return promise;\r\n};\r\n","/**\r\n * Generated by orval v7.8.0 üç∫\r\n * Do not edit manually.\r\n * Umbraco Management API\r\n * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility\r\n * OpenAPI spec version: Latest\r\n */\r\nimport type {\r\n  AvailableDocumentTypeCompositionResponseModel,\r\n  AvailableMediaTypeCompositionResponseModel,\r\n  AvailableMemberTypeCompositionResponseModel,\r\n  CalculatedUserStartNodesResponseModel,\r\n  ChangePasswordCurrentUserRequestModel,\r\n  ChangePasswordUserRequestModel,\r\n  CopyDataTypeRequestModel,\r\n  CopyDocumentRequestModel,\r\n  CopyDocumentTypeRequestModel,\r\n  CopyMediaTypeRequestModel,\r\n  CreateDataTypeRequestModel,\r\n  CreateDictionaryItemRequestModel,\r\n  CreateDocumentBlueprintFromDocumentRequestModel,\r\n  CreateDocumentBlueprintRequestModel,\r\n  CreateDocumentRequestModel,\r\n  CreateDocumentTypeRequestModel,\r\n  CreateFolderRequestModel,\r\n  CreateInitialPasswordUserRequestModel,\r\n  CreateLanguageRequestModel,\r\n  CreateMediaRequestModel,\r\n  CreateMediaTypeRequestModel,\r\n  CreateMemberGroupRequestModel,\r\n  CreateMemberRequestModel,\r\n  CreateMemberTypeRequestModel,\r\n  CreatePackageRequestModel,\r\n  CreatePartialViewFolderRequestModel,\r\n  CreatePartialViewRequestModel,\r\n  CreateScriptFolderRequestModel,\r\n  CreateScriptRequestModel,\r\n  CreateStylesheetFolderRequestModel,\r\n  CreateStylesheetRequestModel,\r\n  CreateTemplateRequestModel,\r\n  CreateUserClientCredentialsRequestModel,\r\n  CreateUserDataRequestModel,\r\n  CreateUserGroupRequestModel,\r\n  CreateUserRequestModel,\r\n  CreateWebhookRequestModel,\r\n  CurrenUserConfigurationResponseModel,\r\n  CurrentUserResponseModel,\r\n  DataTypeItemResponseModel,\r\n  DataTypeReferenceResponseModel,\r\n  DataTypeResponseModel,\r\n  DataTypeTreeItemResponseModel,\r\n  DatabaseInstallRequestModel,\r\n  DatatypeConfigurationResponseModel,\r\n  DeleteUserCurrent2faByProviderNameParams,\r\n  DeleteUserGroupsRequestModel,\r\n  DeleteUsersRequestModel,\r\n  DictionaryItemItemResponseModel,\r\n  DictionaryItemResponseModel,\r\n  DisableUserRequestModel,\r\n  DocumentBlueprintItemResponseModel,\r\n  DocumentBlueprintResponseModel,\r\n  DocumentBlueprintTreeItemResponseModel,\r\n  DocumentConfigurationResponseModel,\r\n  DocumentItemResponseModel,\r\n  DocumentNotificationResponseModel,\r\n  DocumentResponseModel,\r\n  DocumentTreeItemResponseModel,\r\n  DocumentTypeCompositionRequestModel,\r\n  DocumentTypeCompositionResponseModel,\r\n  DocumentTypeConfigurationResponseModel,\r\n  DocumentTypeItemResponseModel,\r\n  DocumentTypeResponseModel,\r\n  DocumentTypeTreeItemResponseModel,\r\n  DocumentUrlInfoResponseModel,\r\n  DocumentVersionResponseModel,\r\n  DomainsResponseModel,\r\n  DynamicRootRequestModel,\r\n  DynamicRootResponseModel,\r\n  EnableTwoFactorRequestModel,\r\n  EnableUserRequestModel,\r\n  EntityImportAnalysisResponseModel,\r\n  FileSystemTreeItemPresentationModel,\r\n  FolderResponseModel,\r\n  GetCollectionDocumentByIdParams,\r\n  GetCollectionMediaParams,\r\n  GetCultureParams,\r\n  GetDictionaryByIdExportParams,\r\n  GetDictionaryParams,\r\n  GetDocumentAreReferencedParams,\r\n  GetDocumentByIdAuditLogParams,\r\n  GetDocumentByIdReferencedByParams,\r\n  GetDocumentByIdReferencedDescendantsParams,\r\n  GetDocumentTypeAllowedAtRootParams,\r\n  GetDocumentTypeByIdAllowedChildrenParams,\r\n  GetDocumentTypeByIdBlueprintParams,\r\n  GetDocumentUrlsParams,\r\n  GetDocumentVersionParams,\r\n  GetFilterDataTypeParams,\r\n  GetFilterMemberParams,\r\n  GetFilterUserGroupParams,\r\n  GetFilterUserParams,\r\n  GetHealthCheckGroupParams,\r\n  GetHelpParams,\r\n  GetImagingResizeUrlsParams,\r\n  GetImportAnalyzeParams,\r\n  GetIndexerParams,\r\n  GetItemDataTypeParams,\r\n  GetItemDataTypeSearchParams,\r\n  GetItemDictionaryParams,\r\n  GetItemDocumentBlueprintParams,\r\n  GetItemDocumentParams,\r\n  GetItemDocumentSearchParams,\r\n  GetItemDocumentTypeParams,\r\n  GetItemDocumentTypeSearchParams,\r\n  GetItemLanguageParams,\r\n  GetItemMediaParams,\r\n  GetItemMediaSearchParams,\r\n  GetItemMediaTypeAllowedParams,\r\n  GetItemMediaTypeFoldersParams,\r\n  GetItemMediaTypeParams,\r\n  GetItemMediaTypeSearchParams,\r\n  GetItemMemberGroupParams,\r\n  GetItemMemberParams,\r\n  GetItemMemberSearchParams,\r\n  GetItemMemberTypeParams,\r\n  GetItemMemberTypeSearchParams,\r\n  GetItemPartialViewParams,\r\n  GetItemRelationTypeParams,\r\n  GetItemScriptParams,\r\n  GetItemStaticFileParams,\r\n  GetItemStylesheetParams,\r\n  GetItemTemplateParams,\r\n  GetItemTemplateSearchParams,\r\n  GetItemUserGroupParams,\r\n  GetItemUserParams,\r\n  GetItemWebhookParams,\r\n  GetLanguageParams,\r\n  GetLogViewerLevelCountParams,\r\n  GetLogViewerLevelParams,\r\n  GetLogViewerLogParams,\r\n  GetLogViewerMessageTemplateParams,\r\n  GetLogViewerSavedSearchParams,\r\n  GetLogViewerValidateLogsSizeParams,\r\n  GetMediaAreReferencedParams,\r\n  GetMediaByIdAuditLogParams,\r\n  GetMediaByIdReferencedByParams,\r\n  GetMediaByIdReferencedDescendantsParams,\r\n  GetMediaTypeAllowedAtRootParams,\r\n  GetMediaTypeByIdAllowedChildrenParams,\r\n  GetMediaUrlsParams,\r\n  GetMemberGroupParams,\r\n  GetObjectTypesParams,\r\n  GetOembedQueryParams,\r\n  GetPackageCreatedParams,\r\n  GetPackageMigrationStatusParams,\r\n  GetPartialViewSnippetParams,\r\n  GetPropertyTypeIsUsedParams,\r\n  GetRecycleBinDocumentChildrenParams,\r\n  GetRecycleBinDocumentRootParams,\r\n  GetRecycleBinMediaChildrenParams,\r\n  GetRecycleBinMediaRootParams,\r\n  GetRedirectManagementByIdParams,\r\n  GetRedirectManagementParams,\r\n  GetRelationByRelationTypeIdParams,\r\n  GetRelationTypeParams,\r\n  GetSearcherBySearcherNameQueryParams,\r\n  GetSearcherParams,\r\n  GetSegmentParams,\r\n  GetTagParams,\r\n  GetTelemetryParams,\r\n  GetTreeDataTypeAncestorsParams,\r\n  GetTreeDataTypeChildrenParams,\r\n  GetTreeDataTypeRootParams,\r\n  GetTreeDictionaryAncestorsParams,\r\n  GetTreeDictionaryChildrenParams,\r\n  GetTreeDictionaryRootParams,\r\n  GetTreeDocumentAncestorsParams,\r\n  GetTreeDocumentBlueprintAncestorsParams,\r\n  GetTreeDocumentBlueprintChildrenParams,\r\n  GetTreeDocumentBlueprintRootParams,\r\n  GetTreeDocumentChildrenParams,\r\n  GetTreeDocumentRootParams,\r\n  GetTreeDocumentTypeAncestorsParams,\r\n  GetTreeDocumentTypeChildrenParams,\r\n  GetTreeDocumentTypeRootParams,\r\n  GetTreeMediaAncestorsParams,\r\n  GetTreeMediaChildrenParams,\r\n  GetTreeMediaRootParams,\r\n  GetTreeMediaTypeAncestorsParams,\r\n  GetTreeMediaTypeChildrenParams,\r\n  GetTreeMediaTypeRootParams,\r\n  GetTreeMemberGroupRootParams,\r\n  GetTreeMemberTypeRootParams,\r\n  GetTreePartialViewAncestorsParams,\r\n  GetTreePartialViewChildrenParams,\r\n  GetTreePartialViewRootParams,\r\n  GetTreeScriptAncestorsParams,\r\n  GetTreeScriptChildrenParams,\r\n  GetTreeScriptRootParams,\r\n  GetTreeStaticFileAncestorsParams,\r\n  GetTreeStaticFileChildrenParams,\r\n  GetTreeStaticFileRootParams,\r\n  GetTreeStylesheetAncestorsParams,\r\n  GetTreeStylesheetChildrenParams,\r\n  GetTreeStylesheetRootParams,\r\n  GetTreeTemplateAncestorsParams,\r\n  GetTreeTemplateChildrenParams,\r\n  GetTreeTemplateRootParams,\r\n  GetUserCurrentPermissionsDocumentParams,\r\n  GetUserCurrentPermissionsMediaParams,\r\n  GetUserCurrentPermissionsParams,\r\n  GetUserDataParams,\r\n  GetUserGroupParams,\r\n  GetUserParams,\r\n  GetWebhookByIdLogsParams,\r\n  GetWebhookEventsParams,\r\n  GetWebhookLogsParams,\r\n  GetWebhookParams,\r\n  HealthCheckActionRequestModel,\r\n  HealthCheckGroupPresentationModel,\r\n  HealthCheckGroupWithResultResponseModel,\r\n  HealthCheckResultResponseModel,\r\n  ImportDictionaryRequestModel,\r\n  ImportDocumentTypeRequestModel,\r\n  ImportMediaTypeRequestModel,\r\n  IndexResponseModel,\r\n  InstallRequestModel,\r\n  InstallSettingsResponseModel,\r\n  InviteUserRequestModel,\r\n  LanguageItemResponseModel,\r\n  LanguageResponseModel,\r\n  LogLevelCountsReponseModel,\r\n  ManifestResponseModel,\r\n  MediaConfigurationResponseModel,\r\n  MediaItemResponseModel,\r\n  MediaResponseModel,\r\n  MediaTreeItemResponseModel,\r\n  MediaTypeCompositionRequestModel,\r\n  MediaTypeCompositionResponseModel,\r\n  MediaTypeConfigurationResponseModel,\r\n  MediaTypeItemResponseModel,\r\n  MediaTypeResponseModel,\r\n  MediaTypeTreeItemResponseModel,\r\n  MediaUrlInfoResponseModel,\r\n  MemberConfigurationResponseModel,\r\n  MemberGroupItemResponseModel,\r\n  MemberGroupResponseModel,\r\n  MemberItemResponseModel,\r\n  MemberResponseModel,\r\n  MemberTypeCompositionRequestModel,\r\n  MemberTypeCompositionResponseModel,\r\n  MemberTypeConfigurationResponseModel,\r\n  MemberTypeItemResponseModel,\r\n  MemberTypeResponseModel,\r\n  ModelsBuilderResponseModel,\r\n  MoveDataTypeRequestModel,\r\n  MoveDictionaryRequestModel,\r\n  MoveDocumentBlueprintRequestModel,\r\n  MoveDocumentRequestModel,\r\n  MoveDocumentTypeRequestModel,\r\n  MoveMediaRequestModel,\r\n  MoveMediaTypeRequestModel,\r\n  NamedEntityTreeItemResponseModel,\r\n  NoopSetupTwoFactorModel,\r\n  OEmbedResponseModel,\r\n  OutOfDateStatusResponseModel,\r\n  PackageConfigurationResponseModel,\r\n  PackageDefinitionResponseModel,\r\n  PagedAllowedDocumentTypeModel,\r\n  PagedAllowedMediaTypeModel,\r\n  PagedAuditLogResponseModel,\r\n  PagedCultureReponseModel,\r\n  PagedDataTypeItemResponseModel,\r\n  PagedDataTypeTreeItemResponseModel,\r\n  PagedDictionaryOverviewResponseModel,\r\n  PagedDocumentBlueprintTreeItemResponseModel,\r\n  PagedDocumentCollectionResponseModel,\r\n  PagedDocumentRecycleBinItemResponseModel,\r\n  PagedDocumentTreeItemResponseModel,\r\n  PagedDocumentTypeBlueprintItemResponseModel,\r\n  PagedDocumentTypeTreeItemResponseModel,\r\n  PagedDocumentVersionItemResponseModel,\r\n  PagedFileSystemTreeItemPresentationModel,\r\n  PagedHealthCheckGroupResponseModel,\r\n  PagedHelpPageResponseModel,\r\n  PagedIReferenceResponseModel,\r\n  PagedIndexResponseModel,\r\n  PagedLanguageResponseModel,\r\n  PagedLogMessageResponseModel,\r\n  PagedLogTemplateResponseModel,\r\n  PagedLoggerResponseModel,\r\n  PagedMediaCollectionResponseModel,\r\n  PagedMediaRecycleBinItemResponseModel,\r\n  PagedMediaTreeItemResponseModel,\r\n  PagedMediaTypeTreeItemResponseModel,\r\n  PagedMemberGroupResponseModel,\r\n  PagedMemberResponseModel,\r\n  PagedMemberTypeTreeItemResponseModel,\r\n  PagedModelDataTypeItemResponseModel,\r\n  PagedModelDocumentItemResponseModel,\r\n  PagedModelDocumentTypeItemResponseModel,\r\n  PagedModelMediaItemResponseModel,\r\n  PagedModelMediaTypeItemResponseModel,\r\n  PagedModelMemberItemResponseModel,\r\n  PagedModelMemberTypeItemResponseModel,\r\n  PagedModelTemplateItemResponseModel,\r\n  PagedNamedEntityTreeItemResponseModel,\r\n  PagedObjectTypeResponseModel,\r\n  PagedPackageDefinitionResponseModel,\r\n  PagedPackageMigrationStatusResponseModel,\r\n  PagedPartialViewSnippetItemResponseModel,\r\n  PagedRedirectUrlResponseModel,\r\n  PagedReferenceByIdModel,\r\n  PagedRelationResponseModel,\r\n  PagedRelationTypeResponseModel,\r\n  PagedSavedLogSearchResponseModel,\r\n  PagedSearchResultResponseModel,\r\n  PagedSearcherResponseModel,\r\n  PagedSegmentResponseModel,\r\n  PagedTagResponseModel,\r\n  PagedTelemetryResponseModel,\r\n  PagedUserDataResponseModel,\r\n  PagedUserGroupResponseModel,\r\n  PagedUserResponseModel,\r\n  PagedWebhookEventModel,\r\n  PagedWebhookLogResponseModel,\r\n  PagedWebhookResponseModel,\r\n  PartialViewFolderResponseModel,\r\n  PartialViewItemResponseModel,\r\n  PartialViewResponseModel,\r\n  PartialViewSnippetResponseModel,\r\n  PostDocumentVersionByIdRollbackParams,\r\n  PostRedirectManagementStatusParams,\r\n  PostTemporaryFileBody,\r\n  ProfilingStatusRequestModel,\r\n  ProfilingStatusResponseModel,\r\n  PublicAccessRequestModel,\r\n  PublicAccessResponseModel,\r\n  PublishDocumentRequestModel,\r\n  PublishDocumentWithDescendantsRequestModel,\r\n  PublishedDocumentResponseModel,\r\n  PutDocumentVersionByIdPreventCleanupParams,\r\n  RedirectUrlStatusResponseModel,\r\n  ReferenceByIdModel,\r\n  RelationTypeItemResponseModel,\r\n  RelationTypeResponseModel,\r\n  RenamePartialViewRequestModel,\r\n  RenameScriptRequestModel,\r\n  RenameStylesheetRequestModel,\r\n  ResendInviteUserRequestModel,\r\n  ResetPasswordRequestModel,\r\n  ResetPasswordTokenRequestModel,\r\n  ResetPasswordUserResponseModel,\r\n  SavedLogSearchRequestModel,\r\n  SavedLogSearchResponseModel,\r\n  ScriptFolderResponseModel,\r\n  ScriptItemResponseModel,\r\n  ScriptResponseModel,\r\n  SecurityConfigurationResponseModel,\r\n  ServerConfigurationResponseModel,\r\n  ServerInformationResponseModel,\r\n  ServerStatusResponseModel,\r\n  ServerTroubleshootingResponseModel,\r\n  SetAvatarRequestModel,\r\n  SortingRequestModel,\r\n  StaticFileItemResponseModel,\r\n  StylesheetFolderResponseModel,\r\n  StylesheetItemResponseModel,\r\n  StylesheetResponseModel,\r\n  TelemetryRequestModel,\r\n  TelemetryResponseModel,\r\n  TemplateConfigurationResponseModel,\r\n  TemplateItemResponseModel,\r\n  TemplateQueryExecuteModel,\r\n  TemplateQueryResultResponseModel,\r\n  TemplateQuerySettingsResponseModel,\r\n  TemplateResponseModel,\r\n  TemporaryFileConfigurationResponseModel,\r\n  TemporaryFileResponseModel,\r\n  UnlockUsersRequestModel,\r\n  UnpublishDocumentRequestModel,\r\n  UpdateDataTypeRequestModel,\r\n  UpdateDictionaryItemRequestModel,\r\n  UpdateDocumentBlueprintRequestModel,\r\n  UpdateDocumentNotificationsRequestModel,\r\n  UpdateDocumentRequestModel,\r\n  UpdateDocumentTypeRequestModel,\r\n  UpdateDomainsRequestModel,\r\n  UpdateFolderResponseModel,\r\n  UpdateLanguageRequestModel,\r\n  UpdateMediaRequestModel,\r\n  UpdateMediaTypeRequestModel,\r\n  UpdateMemberGroupRequestModel,\r\n  UpdateMemberRequestModel,\r\n  UpdateMemberTypeRequestModel,\r\n  UpdatePackageRequestModel,\r\n  UpdatePartialViewRequestModel,\r\n  UpdateScriptRequestModel,\r\n  UpdateStylesheetRequestModel,\r\n  UpdateTemplateRequestModel,\r\n  UpdateUserDataRequestModel,\r\n  UpdateUserGroupRequestModel,\r\n  UpdateUserGroupsOnUserRequestModel,\r\n  UpdateUserRequestModel,\r\n  UpdateWebhookRequestModel,\r\n  UpgradeCheckResponseModel,\r\n  UpgradeSettingsResponseModel,\r\n  UserConfigurationResponseModel,\r\n  UserDataModel,\r\n  UserExternalLoginProviderModel,\r\n  UserGroupItemResponseModel,\r\n  UserGroupResponseModel,\r\n  UserItemResponseModel,\r\n  UserPermissionsResponseModel,\r\n  UserResponseModel,\r\n  UserTwoFactorProviderModel,\r\n  ValidateUpdateDocumentRequestModel,\r\n  VerifyInviteUserRequestModel,\r\n  VerifyInviteUserResponseModel,\r\n  VerifyResetPasswordResponseModel,\r\n  VerifyResetPasswordTokenRequestModel,\r\n  WebhookItemResponseModel,\r\n  WebhookResponseModel\r\n} from './schemas';\r\n\r\nimport { UmbracoManagementClient } from '../clients/umbraco-management-client.js';\r\n\r\n// https://stackoverflow.com/questions/49579094/typescript-conditional-types-filter-out-readonly-properties-pick-only-requir/49579497#49579497\r\ntype IfEquals<X, Y, A = X, B = never> = (<T>() => T extends X ? 1 : 2) extends <\r\nT,\r\n>() => T extends Y ? 1 : 2\r\n? A\r\n: B;\r\n\r\ntype WritableKeys<T> = {\r\n[P in keyof T]-?: IfEquals<\r\n  { [Q in P]: T[P] },\r\n  { -readonly [Q in P]: T[P] },\r\n  P\r\n>;\r\n}[keyof T];\r\n\r\ntype UnionToIntersection<U> =\r\n  (U extends any ? (k: U)=>void : never) extends ((k: infer I)=>void) ? I : never;\r\ntype DistributeReadOnlyOverUnions<T> = T extends any ? NonReadonly<T> : never;\r\n\r\ntype Writable<T> = Pick<T, WritableKeys<T>>;\r\ntype NonReadonly<T> = [T] extends [UnionToIntersection<T>] ? {\r\n  [P in keyof Writable<T>]: T[P] extends object\r\n    ? NonReadonly<NonNullable<T[P]>>\r\n    : T[P];\r\n} : DistributeReadOnlyOverUnions<T>;\r\n\r\n\r\ntype SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];\r\n\r\n\r\n  export const getUmbracoManagementAPI = () => {\r\nconst getCulture = (\r\n    params?: GetCultureParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedCultureReponseModel>(\r\n      {url: `/umbraco/management/api/v1/culture`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postDataType = (\r\n    createDataTypeRequestModel: CreateDataTypeRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/data-type`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: createDataTypeRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getDataTypeById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<DataTypeResponseModel>(\r\n      {url: `/umbraco/management/api/v1/data-type/${id}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteDataTypeById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/data-type/${id}`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putDataTypeById = (\r\n    id: string,\r\n    updateDataTypeRequestModel: UpdateDataTypeRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/data-type/${id}`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: updateDataTypeRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postDataTypeByIdCopy = (\r\n    id: string,\r\n    copyDataTypeRequestModel: CopyDataTypeRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/data-type/${id}/copy`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: copyDataTypeRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getDataTypeByIdIsUsed = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<boolean>(\r\n      {url: `/umbraco/management/api/v1/data-type/${id}/is-used`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putDataTypeByIdMove = (\r\n    id: string,\r\n    moveDataTypeRequestModel: MoveDataTypeRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/data-type/${id}/move`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: moveDataTypeRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getDataTypeByIdReferences = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<DataTypeReferenceResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/data-type/${id}/references`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getDataTypeConfiguration = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<DatatypeConfigurationResponseModel>(\r\n      {url: `/umbraco/management/api/v1/data-type/configuration`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postDataTypeFolder = (\r\n    createFolderRequestModel: CreateFolderRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/data-type/folder`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: createFolderRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getDataTypeFolderById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<FolderResponseModel>(\r\n      {url: `/umbraco/management/api/v1/data-type/folder/${id}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteDataTypeFolderById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/data-type/folder/${id}`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putDataTypeFolderById = (\r\n    id: string,\r\n    updateFolderResponseModel: UpdateFolderResponseModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/data-type/folder/${id}`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: updateFolderResponseModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getFilterDataType = (\r\n    params?: GetFilterDataTypeParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedDataTypeItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/filter/data-type`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getItemDataType = (\r\n    params?: GetItemDataTypeParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<DataTypeItemResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/item/data-type`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getItemDataTypeSearch = (\r\n    params?: GetItemDataTypeSearchParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedModelDataTypeItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/item/data-type/search`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeDataTypeAncestors = (\r\n    params?: GetTreeDataTypeAncestorsParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<DataTypeTreeItemResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/tree/data-type/ancestors`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeDataTypeChildren = (\r\n    params?: GetTreeDataTypeChildrenParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedDataTypeTreeItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/tree/data-type/children`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeDataTypeRoot = (\r\n    params?: GetTreeDataTypeRootParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedDataTypeTreeItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/tree/data-type/root`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getDictionary = (\r\n    params?: GetDictionaryParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedDictionaryOverviewResponseModel>(\r\n      {url: `/umbraco/management/api/v1/dictionary`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postDictionary = (\r\n    createDictionaryItemRequestModel: CreateDictionaryItemRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/dictionary`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: createDictionaryItemRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getDictionaryById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<DictionaryItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/dictionary/${id}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteDictionaryById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/dictionary/${id}`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putDictionaryById = (\r\n    id: string,\r\n    updateDictionaryItemRequestModel: UpdateDictionaryItemRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/dictionary/${id}`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: updateDictionaryItemRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getDictionaryByIdExport = (\r\n    id: string,\r\n    params?: GetDictionaryByIdExportParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<Blob>(\r\n      {url: `/umbraco/management/api/v1/dictionary/${id}/export`, method: 'GET',\r\n        params,\r\n        responseType: 'blob'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putDictionaryByIdMove = (\r\n    id: string,\r\n    moveDictionaryRequestModel: MoveDictionaryRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/dictionary/${id}/move`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: moveDictionaryRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postDictionaryImport = (\r\n    importDictionaryRequestModel: ImportDictionaryRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/dictionary/import`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: importDictionaryRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getItemDictionary = (\r\n    params?: GetItemDictionaryParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<DictionaryItemItemResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/item/dictionary`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeDictionaryAncestors = (\r\n    params?: GetTreeDictionaryAncestorsParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<NamedEntityTreeItemResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/tree/dictionary/ancestors`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeDictionaryChildren = (\r\n    params?: GetTreeDictionaryChildrenParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedNamedEntityTreeItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/tree/dictionary/children`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeDictionaryRoot = (\r\n    params?: GetTreeDictionaryRootParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedNamedEntityTreeItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/tree/dictionary/root`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postDocumentBlueprint = (\r\n    createDocumentBlueprintRequestModel: CreateDocumentBlueprintRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document-blueprint`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: createDocumentBlueprintRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getDocumentBlueprintById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<DocumentBlueprintResponseModel>(\r\n      {url: `/umbraco/management/api/v1/document-blueprint/${id}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteDocumentBlueprintById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document-blueprint/${id}`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putDocumentBlueprintById = (\r\n    id: string,\r\n    updateDocumentBlueprintRequestModel: UpdateDocumentBlueprintRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document-blueprint/${id}`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: updateDocumentBlueprintRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putDocumentBlueprintByIdMove = (\r\n    id: string,\r\n    moveDocumentBlueprintRequestModel: MoveDocumentBlueprintRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document-blueprint/${id}/move`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: moveDocumentBlueprintRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postDocumentBlueprintFolder = (\r\n    createFolderRequestModel: CreateFolderRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document-blueprint/folder`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: createFolderRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getDocumentBlueprintFolderById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<FolderResponseModel>(\r\n      {url: `/umbraco/management/api/v1/document-blueprint/folder/${id}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteDocumentBlueprintFolderById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document-blueprint/folder/${id}`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putDocumentBlueprintFolderById = (\r\n    id: string,\r\n    updateFolderResponseModel: UpdateFolderResponseModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document-blueprint/folder/${id}`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: updateFolderResponseModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postDocumentBlueprintFromDocument = (\r\n    createDocumentBlueprintFromDocumentRequestModel: CreateDocumentBlueprintFromDocumentRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document-blueprint/from-document`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: createDocumentBlueprintFromDocumentRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getItemDocumentBlueprint = (\r\n    params?: GetItemDocumentBlueprintParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<DocumentBlueprintItemResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/item/document-blueprint`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeDocumentBlueprintAncestors = (\r\n    params?: GetTreeDocumentBlueprintAncestorsParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<DocumentBlueprintTreeItemResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/tree/document-blueprint/ancestors`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeDocumentBlueprintChildren = (\r\n    params?: GetTreeDocumentBlueprintChildrenParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedDocumentBlueprintTreeItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/tree/document-blueprint/children`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeDocumentBlueprintRoot = (\r\n    params?: GetTreeDocumentBlueprintRootParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedDocumentBlueprintTreeItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/tree/document-blueprint/root`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postDocumentType = (\r\n    createDocumentTypeRequestModel: CreateDocumentTypeRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document-type`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: createDocumentTypeRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getDocumentTypeById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<DocumentTypeResponseModel>(\r\n      {url: `/umbraco/management/api/v1/document-type/${id}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteDocumentTypeById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document-type/${id}`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putDocumentTypeById = (\r\n    id: string,\r\n    updateDocumentTypeRequestModel: UpdateDocumentTypeRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document-type/${id}`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: updateDocumentTypeRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getDocumentTypeByIdAllowedChildren = (\r\n    id: string,\r\n    params?: GetDocumentTypeByIdAllowedChildrenParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedAllowedDocumentTypeModel>(\r\n      {url: `/umbraco/management/api/v1/document-type/${id}/allowed-children`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getDocumentTypeByIdBlueprint = (\r\n    id: string,\r\n    params?: GetDocumentTypeByIdBlueprintParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedDocumentTypeBlueprintItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/document-type/${id}/blueprint`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getDocumentTypeByIdCompositionReferences = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<DocumentTypeCompositionResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/document-type/${id}/composition-references`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postDocumentTypeByIdCopy = (\r\n    id: string,\r\n    copyDocumentTypeRequestModel: CopyDocumentTypeRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document-type/${id}/copy`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: copyDocumentTypeRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getDocumentTypeByIdExport = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<Blob>(\r\n      {url: `/umbraco/management/api/v1/document-type/${id}/export`, method: 'GET',\r\n        responseType: 'blob'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putDocumentTypeByIdImport = (\r\n    id: string,\r\n    importDocumentTypeRequestModel: ImportDocumentTypeRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document-type/${id}/import`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: importDocumentTypeRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putDocumentTypeByIdMove = (\r\n    id: string,\r\n    moveDocumentTypeRequestModel: MoveDocumentTypeRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document-type/${id}/move`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: moveDocumentTypeRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getDocumentTypeAllowedAtRoot = (\r\n    params?: GetDocumentTypeAllowedAtRootParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedAllowedDocumentTypeModel>(\r\n      {url: `/umbraco/management/api/v1/document-type/allowed-at-root`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postDocumentTypeAvailableCompositions = (\r\n    documentTypeCompositionRequestModel: DocumentTypeCompositionRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<AvailableDocumentTypeCompositionResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/document-type/available-compositions`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: documentTypeCompositionRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getDocumentTypeConfiguration = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<DocumentTypeConfigurationResponseModel>(\r\n      {url: `/umbraco/management/api/v1/document-type/configuration`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postDocumentTypeFolder = (\r\n    createFolderRequestModel: CreateFolderRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document-type/folder`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: createFolderRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getDocumentTypeFolderById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<FolderResponseModel>(\r\n      {url: `/umbraco/management/api/v1/document-type/folder/${id}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteDocumentTypeFolderById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document-type/folder/${id}`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putDocumentTypeFolderById = (\r\n    id: string,\r\n    updateFolderResponseModel: UpdateFolderResponseModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document-type/folder/${id}`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: updateFolderResponseModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postDocumentTypeImport = (\r\n    importDocumentTypeRequestModel: ImportDocumentTypeRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document-type/import`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: importDocumentTypeRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getItemDocumentType = (\r\n    params?: GetItemDocumentTypeParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<DocumentTypeItemResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/item/document-type`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getItemDocumentTypeSearch = (\r\n    params?: GetItemDocumentTypeSearchParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedModelDocumentTypeItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/item/document-type/search`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeDocumentTypeAncestors = (\r\n    params?: GetTreeDocumentTypeAncestorsParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<DocumentTypeTreeItemResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/tree/document-type/ancestors`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeDocumentTypeChildren = (\r\n    params?: GetTreeDocumentTypeChildrenParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedDocumentTypeTreeItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/tree/document-type/children`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeDocumentTypeRoot = (\r\n    params?: GetTreeDocumentTypeRootParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedDocumentTypeTreeItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/tree/document-type/root`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getDocumentVersion = (\r\n    params: GetDocumentVersionParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedDocumentVersionItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/document-version`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getDocumentVersionById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<DocumentVersionResponseModel>(\r\n      {url: `/umbraco/management/api/v1/document-version/${id}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putDocumentVersionByIdPreventCleanup = (\r\n    id: string,\r\n    params?: PutDocumentVersionByIdPreventCleanupParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document-version/${id}/prevent-cleanup`, method: 'PUT',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postDocumentVersionByIdRollback = (\r\n    id: string,\r\n    params?: PostDocumentVersionByIdRollbackParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document-version/${id}/rollback`, method: 'POST',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getCollectionDocumentById = (\r\n    id: string,\r\n    params?: GetCollectionDocumentByIdParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedDocumentCollectionResponseModel>(\r\n      {url: `/umbraco/management/api/v1/collection/document/${id}`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postDocument = (\r\n    createDocumentRequestModel: CreateDocumentRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: createDocumentRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getDocumentById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<DocumentResponseModel>(\r\n      {url: `/umbraco/management/api/v1/document/${id}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteDocumentById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document/${id}`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putDocumentById = (\r\n    id: string,\r\n    updateDocumentRequestModel: UpdateDocumentRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document/${id}`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: updateDocumentRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getDocumentByIdAuditLog = (\r\n    id: string,\r\n    params?: GetDocumentByIdAuditLogParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedAuditLogResponseModel>(\r\n      {url: `/umbraco/management/api/v1/document/${id}/audit-log`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postDocumentByIdCopy = (\r\n    id: string,\r\n    copyDocumentRequestModel: CopyDocumentRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document/${id}/copy`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: copyDocumentRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getDocumentByIdDomains = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<DomainsResponseModel>(\r\n      {url: `/umbraco/management/api/v1/document/${id}/domains`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putDocumentByIdDomains = (\r\n    id: string,\r\n    updateDomainsRequestModel: UpdateDomainsRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document/${id}/domains`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: updateDomainsRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putDocumentByIdMove = (\r\n    id: string,\r\n    moveDocumentRequestModel: MoveDocumentRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document/${id}/move`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: moveDocumentRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putDocumentByIdMoveToRecycleBin = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document/${id}/move-to-recycle-bin`, method: 'PUT'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getDocumentByIdNotifications = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<DocumentNotificationResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/document/${id}/notifications`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putDocumentByIdNotifications = (\r\n    id: string,\r\n    updateDocumentNotificationsRequestModel: UpdateDocumentNotificationsRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document/${id}/notifications`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: updateDocumentNotificationsRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postDocumentByIdPublicAccess = (\r\n    id: string,\r\n    publicAccessRequestModel: PublicAccessRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document/${id}/public-access`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: publicAccessRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteDocumentByIdPublicAccess = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document/${id}/public-access`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getDocumentByIdPublicAccess = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PublicAccessResponseModel>(\r\n      {url: `/umbraco/management/api/v1/document/${id}/public-access`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putDocumentByIdPublicAccess = (\r\n    id: string,\r\n    publicAccessRequestModel: PublicAccessRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document/${id}/public-access`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: publicAccessRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putDocumentByIdPublish = (\r\n    id: string,\r\n    publishDocumentRequestModel: PublishDocumentRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document/${id}/publish`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: publishDocumentRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putDocumentByIdPublishWithDescendants = (\r\n    id: string,\r\n    publishDocumentWithDescendantsRequestModel: PublishDocumentWithDescendantsRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document/${id}/publish-with-descendants`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: publishDocumentWithDescendantsRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getDocumentByIdPublished = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PublishedDocumentResponseModel>(\r\n      {url: `/umbraco/management/api/v1/document/${id}/published`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getDocumentByIdReferencedBy = (\r\n    id: string,\r\n    params?: GetDocumentByIdReferencedByParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedIReferenceResponseModel>(\r\n      {url: `/umbraco/management/api/v1/document/${id}/referenced-by`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getDocumentByIdReferencedDescendants = (\r\n    id: string,\r\n    params?: GetDocumentByIdReferencedDescendantsParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedReferenceByIdModel>(\r\n      {url: `/umbraco/management/api/v1/document/${id}/referenced-descendants`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putDocumentByIdUnpublish = (\r\n    id: string,\r\n    unpublishDocumentRequestModel: UnpublishDocumentRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document/${id}/unpublish`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: unpublishDocumentRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\n/**\r\n * @deprecated\r\n */\r\nconst putDocumentByIdValidate = (\r\n    id: string,\r\n    updateDocumentRequestModel: UpdateDocumentRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document/${id}/validate`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: updateDocumentRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putUmbracoManagementApiV11DocumentByIdValidate11 = (\r\n    id: string,\r\n    validateUpdateDocumentRequestModel: ValidateUpdateDocumentRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1.1/document/${id}/validate`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: validateUpdateDocumentRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getDocumentAreReferenced = (\r\n    params?: GetDocumentAreReferencedParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedReferenceByIdModel>(\r\n      {url: `/umbraco/management/api/v1/document/are-referenced`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getDocumentConfiguration = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<DocumentConfigurationResponseModel>(\r\n      {url: `/umbraco/management/api/v1/document/configuration`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putDocumentSort = (\r\n    sortingRequestModel: SortingRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document/sort`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: sortingRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getDocumentUrls = (\r\n    params?: GetDocumentUrlsParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<DocumentUrlInfoResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/document/urls`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postDocumentValidate = (\r\n    createDocumentRequestModel: CreateDocumentRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/document/validate`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: createDocumentRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getItemDocument = (\r\n    params?: GetItemDocumentParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<DocumentItemResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/item/document`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getItemDocumentSearch = (\r\n    params?: GetItemDocumentSearchParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedModelDocumentItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/item/document/search`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteRecycleBinDocument = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/recycle-bin/document`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteRecycleBinDocumentById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/recycle-bin/document/${id}`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getRecycleBinDocumentByIdOriginalParent = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<ReferenceByIdModel>(\r\n      {url: `/umbraco/management/api/v1/recycle-bin/document/${id}/original-parent`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putRecycleBinDocumentByIdRestore = (\r\n    id: string,\r\n    moveMediaRequestModel: MoveMediaRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/recycle-bin/document/${id}/restore`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: moveMediaRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getRecycleBinDocumentChildren = (\r\n    params?: GetRecycleBinDocumentChildrenParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedDocumentRecycleBinItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/recycle-bin/document/children`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getRecycleBinDocumentRoot = (\r\n    params?: GetRecycleBinDocumentRootParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedDocumentRecycleBinItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/recycle-bin/document/root`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeDocumentAncestors = (\r\n    params?: GetTreeDocumentAncestorsParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<DocumentTreeItemResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/tree/document/ancestors`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeDocumentChildren = (\r\n    params?: GetTreeDocumentChildrenParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedDocumentTreeItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/tree/document/children`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeDocumentRoot = (\r\n    params?: GetTreeDocumentRootParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedDocumentTreeItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/tree/document/root`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postDynamicRootQuery = (\r\n    dynamicRootRequestModel: DynamicRootRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<DynamicRootResponseModel>(\r\n      {url: `/umbraco/management/api/v1/dynamic-root/query`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: dynamicRootRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getDynamicRootSteps = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<string[]>(\r\n      {url: `/umbraco/management/api/v1/dynamic-root/steps`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getHealthCheckGroup = (\r\n    params?: GetHealthCheckGroupParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedHealthCheckGroupResponseModel>(\r\n      {url: `/umbraco/management/api/v1/health-check-group`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getHealthCheckGroupByName = (\r\n    name: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<HealthCheckGroupPresentationModel>(\r\n      {url: `/umbraco/management/api/v1/health-check-group/${name}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postHealthCheckGroupByNameCheck = (\r\n    name: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<HealthCheckGroupWithResultResponseModel>(\r\n      {url: `/umbraco/management/api/v1/health-check-group/${name}/check`, method: 'POST'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postHealthCheckExecuteAction = (\r\n    healthCheckActionRequestModel: HealthCheckActionRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<HealthCheckResultResponseModel>(\r\n      {url: `/umbraco/management/api/v1/health-check/execute-action`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: healthCheckActionRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getHelp = (\r\n    params?: GetHelpParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedHelpPageResponseModel>(\r\n      {url: `/umbraco/management/api/v1/help`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getImagingResizeUrls = (\r\n    params?: GetImagingResizeUrlsParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<MediaUrlInfoResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/imaging/resize/urls`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getImportAnalyze = (\r\n    params?: GetImportAnalyzeParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<EntityImportAnalysisResponseModel>(\r\n      {url: `/umbraco/management/api/v1/import/analyze`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getIndexer = (\r\n    params?: GetIndexerParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedIndexResponseModel>(\r\n      {url: `/umbraco/management/api/v1/indexer`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getIndexerByIndexName = (\r\n    indexName: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<IndexResponseModel>(\r\n      {url: `/umbraco/management/api/v1/indexer/${indexName}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postIndexerByIndexNameRebuild = (\r\n    indexName: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/indexer/${indexName}/rebuild`, method: 'POST'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getInstallSettings = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<InstallSettingsResponseModel>(\r\n      {url: `/umbraco/management/api/v1/install/settings`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postInstallSetup = (\r\n    installRequestModel: InstallRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/install/setup`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: installRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postInstallValidateDatabase = (\r\n    databaseInstallRequestModel: DatabaseInstallRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/install/validate-database`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: databaseInstallRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getItemLanguage = (\r\n    params?: GetItemLanguageParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<LanguageItemResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/item/language`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getItemLanguageDefault = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<LanguageItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/item/language/default`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getLanguage = (\r\n    params?: GetLanguageParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedLanguageResponseModel>(\r\n      {url: `/umbraco/management/api/v1/language`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postLanguage = (\r\n    createLanguageRequestModel: CreateLanguageRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/language`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: createLanguageRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getLanguageByIsoCode = (\r\n    isoCode: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<LanguageResponseModel>(\r\n      {url: `/umbraco/management/api/v1/language/${isoCode}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteLanguageByIsoCode = (\r\n    isoCode: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/language/${isoCode}`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putLanguageByIsoCode = (\r\n    isoCode: string,\r\n    updateLanguageRequestModel: UpdateLanguageRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/language/${isoCode}`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: updateLanguageRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getLogViewerLevel = (\r\n    params?: GetLogViewerLevelParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedLoggerResponseModel>(\r\n      {url: `/umbraco/management/api/v1/log-viewer/level`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getLogViewerLevelCount = (\r\n    params?: GetLogViewerLevelCountParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<LogLevelCountsReponseModel>(\r\n      {url: `/umbraco/management/api/v1/log-viewer/level-count`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getLogViewerLog = (\r\n    params?: GetLogViewerLogParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedLogMessageResponseModel>(\r\n      {url: `/umbraco/management/api/v1/log-viewer/log`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getLogViewerMessageTemplate = (\r\n    params?: GetLogViewerMessageTemplateParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedLogTemplateResponseModel>(\r\n      {url: `/umbraco/management/api/v1/log-viewer/message-template`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getLogViewerSavedSearch = (\r\n    params?: GetLogViewerSavedSearchParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedSavedLogSearchResponseModel>(\r\n      {url: `/umbraco/management/api/v1/log-viewer/saved-search`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postLogViewerSavedSearch = (\r\n    savedLogSearchRequestModel: SavedLogSearchRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/log-viewer/saved-search`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: savedLogSearchRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getLogViewerSavedSearchByName = (\r\n    name: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<SavedLogSearchResponseModel>(\r\n      {url: `/umbraco/management/api/v1/log-viewer/saved-search/${name}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteLogViewerSavedSearchByName = (\r\n    name: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/log-viewer/saved-search/${name}`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getLogViewerValidateLogsSize = (\r\n    params?: GetLogViewerValidateLogsSizeParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/log-viewer/validate-logs-size`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getManifestManifest = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<ManifestResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/manifest/manifest`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getManifestManifestPrivate = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<ManifestResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/manifest/manifest/private`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getManifestManifestPublic = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<ManifestResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/manifest/manifest/public`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getItemMediaType = (\r\n    params?: GetItemMediaTypeParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<MediaTypeItemResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/item/media-type`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getItemMediaTypeAllowed = (\r\n    params?: GetItemMediaTypeAllowedParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedModelMediaTypeItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/item/media-type/allowed`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getItemMediaTypeFolders = (\r\n    params?: GetItemMediaTypeFoldersParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedModelMediaTypeItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/item/media-type/folders`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getItemMediaTypeSearch = (\r\n    params?: GetItemMediaTypeSearchParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedModelMediaTypeItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/item/media-type/search`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postMediaType = (\r\n    createMediaTypeRequestModel: CreateMediaTypeRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/media-type`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: createMediaTypeRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getMediaTypeById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<MediaTypeResponseModel>(\r\n      {url: `/umbraco/management/api/v1/media-type/${id}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteMediaTypeById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/media-type/${id}`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putMediaTypeById = (\r\n    id: string,\r\n    updateMediaTypeRequestModel: UpdateMediaTypeRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/media-type/${id}`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: updateMediaTypeRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getMediaTypeByIdAllowedChildren = (\r\n    id: string,\r\n    params?: GetMediaTypeByIdAllowedChildrenParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedAllowedMediaTypeModel>(\r\n      {url: `/umbraco/management/api/v1/media-type/${id}/allowed-children`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getMediaTypeByIdCompositionReferences = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<MediaTypeCompositionResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/media-type/${id}/composition-references`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postMediaTypeByIdCopy = (\r\n    id: string,\r\n    copyMediaTypeRequestModel: CopyMediaTypeRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/media-type/${id}/copy`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: copyMediaTypeRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getMediaTypeByIdExport = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<Blob>(\r\n      {url: `/umbraco/management/api/v1/media-type/${id}/export`, method: 'GET',\r\n        responseType: 'blob'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putMediaTypeByIdImport = (\r\n    id: string,\r\n    importMediaTypeRequestModel: ImportMediaTypeRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/media-type/${id}/import`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: importMediaTypeRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putMediaTypeByIdMove = (\r\n    id: string,\r\n    moveMediaTypeRequestModel: MoveMediaTypeRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/media-type/${id}/move`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: moveMediaTypeRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getMediaTypeAllowedAtRoot = (\r\n    params?: GetMediaTypeAllowedAtRootParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedAllowedMediaTypeModel>(\r\n      {url: `/umbraco/management/api/v1/media-type/allowed-at-root`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postMediaTypeAvailableCompositions = (\r\n    mediaTypeCompositionRequestModel: MediaTypeCompositionRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<AvailableMediaTypeCompositionResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/media-type/available-compositions`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: mediaTypeCompositionRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getMediaTypeConfiguration = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<MediaTypeConfigurationResponseModel>(\r\n      {url: `/umbraco/management/api/v1/media-type/configuration`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postMediaTypeFolder = (\r\n    createFolderRequestModel: CreateFolderRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/media-type/folder`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: createFolderRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getMediaTypeFolderById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<FolderResponseModel>(\r\n      {url: `/umbraco/management/api/v1/media-type/folder/${id}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteMediaTypeFolderById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/media-type/folder/${id}`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putMediaTypeFolderById = (\r\n    id: string,\r\n    updateFolderResponseModel: UpdateFolderResponseModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/media-type/folder/${id}`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: updateFolderResponseModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postMediaTypeImport = (\r\n    importMediaTypeRequestModel: ImportMediaTypeRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/media-type/import`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: importMediaTypeRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeMediaTypeAncestors = (\r\n    params?: GetTreeMediaTypeAncestorsParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<MediaTypeTreeItemResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/tree/media-type/ancestors`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeMediaTypeChildren = (\r\n    params?: GetTreeMediaTypeChildrenParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedMediaTypeTreeItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/tree/media-type/children`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeMediaTypeRoot = (\r\n    params?: GetTreeMediaTypeRootParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedMediaTypeTreeItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/tree/media-type/root`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getCollectionMedia = (\r\n    params?: GetCollectionMediaParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedMediaCollectionResponseModel>(\r\n      {url: `/umbraco/management/api/v1/collection/media`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getItemMedia = (\r\n    params?: GetItemMediaParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<MediaItemResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/item/media`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getItemMediaSearch = (\r\n    params?: GetItemMediaSearchParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedModelMediaItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/item/media/search`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postMedia = (\r\n    createMediaRequestModel: CreateMediaRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/media`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: createMediaRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getMediaById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<MediaResponseModel>(\r\n      {url: `/umbraco/management/api/v1/media/${id}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteMediaById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/media/${id}`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putMediaById = (\r\n    id: string,\r\n    updateMediaRequestModel: UpdateMediaRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/media/${id}`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: updateMediaRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getMediaByIdAuditLog = (\r\n    id: string,\r\n    params?: GetMediaByIdAuditLogParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedAuditLogResponseModel>(\r\n      {url: `/umbraco/management/api/v1/media/${id}/audit-log`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putMediaByIdMove = (\r\n    id: string,\r\n    moveMediaRequestModel: MoveMediaRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/media/${id}/move`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: moveMediaRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putMediaByIdMoveToRecycleBin = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/media/${id}/move-to-recycle-bin`, method: 'PUT'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getMediaByIdReferencedBy = (\r\n    id: string,\r\n    params?: GetMediaByIdReferencedByParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedIReferenceResponseModel>(\r\n      {url: `/umbraco/management/api/v1/media/${id}/referenced-by`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getMediaByIdReferencedDescendants = (\r\n    id: string,\r\n    params?: GetMediaByIdReferencedDescendantsParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedReferenceByIdModel>(\r\n      {url: `/umbraco/management/api/v1/media/${id}/referenced-descendants`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putMediaByIdValidate = (\r\n    id: string,\r\n    updateMediaRequestModel: UpdateMediaRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/media/${id}/validate`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: updateMediaRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getMediaAreReferenced = (\r\n    params?: GetMediaAreReferencedParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedReferenceByIdModel>(\r\n      {url: `/umbraco/management/api/v1/media/are-referenced`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getMediaConfiguration = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<MediaConfigurationResponseModel>(\r\n      {url: `/umbraco/management/api/v1/media/configuration`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putMediaSort = (\r\n    sortingRequestModel: SortingRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/media/sort`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: sortingRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getMediaUrls = (\r\n    params?: GetMediaUrlsParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<MediaUrlInfoResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/media/urls`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postMediaValidate = (\r\n    createMediaRequestModel: CreateMediaRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/media/validate`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: createMediaRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteRecycleBinMedia = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/recycle-bin/media`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteRecycleBinMediaById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/recycle-bin/media/${id}`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getRecycleBinMediaByIdOriginalParent = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<ReferenceByIdModel>(\r\n      {url: `/umbraco/management/api/v1/recycle-bin/media/${id}/original-parent`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putRecycleBinMediaByIdRestore = (\r\n    id: string,\r\n    moveMediaRequestModel: MoveMediaRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/recycle-bin/media/${id}/restore`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: moveMediaRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getRecycleBinMediaChildren = (\r\n    params?: GetRecycleBinMediaChildrenParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedMediaRecycleBinItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/recycle-bin/media/children`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getRecycleBinMediaRoot = (\r\n    params?: GetRecycleBinMediaRootParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedMediaRecycleBinItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/recycle-bin/media/root`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeMediaAncestors = (\r\n    params?: GetTreeMediaAncestorsParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<MediaTreeItemResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/tree/media/ancestors`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeMediaChildren = (\r\n    params?: GetTreeMediaChildrenParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedMediaTreeItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/tree/media/children`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeMediaRoot = (\r\n    params?: GetTreeMediaRootParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedMediaTreeItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/tree/media/root`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getItemMemberGroup = (\r\n    params?: GetItemMemberGroupParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<MemberGroupItemResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/item/member-group`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getMemberGroup = (\r\n    params?: GetMemberGroupParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedMemberGroupResponseModel>(\r\n      {url: `/umbraco/management/api/v1/member-group`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postMemberGroup = (\r\n    createMemberGroupRequestModel: CreateMemberGroupRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/member-group`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: createMemberGroupRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getMemberGroupById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<MemberGroupResponseModel>(\r\n      {url: `/umbraco/management/api/v1/member-group/${id}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteMemberGroupById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/member-group/${id}`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putMemberGroupById = (\r\n    id: string,\r\n    updateMemberGroupRequestModel: UpdateMemberGroupRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/member-group/${id}`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: updateMemberGroupRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeMemberGroupRoot = (\r\n    params?: GetTreeMemberGroupRootParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedNamedEntityTreeItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/tree/member-group/root`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getItemMemberType = (\r\n    params?: GetItemMemberTypeParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<MemberTypeItemResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/item/member-type`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getItemMemberTypeSearch = (\r\n    params?: GetItemMemberTypeSearchParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedModelMemberTypeItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/item/member-type/search`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postMemberType = (\r\n    createMemberTypeRequestModel: CreateMemberTypeRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/member-type`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: createMemberTypeRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getMemberTypeById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<MemberTypeResponseModel>(\r\n      {url: `/umbraco/management/api/v1/member-type/${id}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteMemberTypeById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/member-type/${id}`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putMemberTypeById = (\r\n    id: string,\r\n    updateMemberTypeRequestModel: UpdateMemberTypeRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/member-type/${id}`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: updateMemberTypeRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getMemberTypeByIdCompositionReferences = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<MemberTypeCompositionResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/member-type/${id}/composition-references`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postMemberTypeByIdCopy = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/member-type/${id}/copy`, method: 'POST'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postMemberTypeAvailableCompositions = (\r\n    memberTypeCompositionRequestModel: MemberTypeCompositionRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<AvailableMemberTypeCompositionResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/member-type/available-compositions`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: memberTypeCompositionRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getMemberTypeConfiguration = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<MemberTypeConfigurationResponseModel>(\r\n      {url: `/umbraco/management/api/v1/member-type/configuration`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeMemberTypeRoot = (\r\n    params?: GetTreeMemberTypeRootParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedMemberTypeTreeItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/tree/member-type/root`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getFilterMember = (\r\n    params?: GetFilterMemberParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedMemberResponseModel>(\r\n      {url: `/umbraco/management/api/v1/filter/member`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getItemMember = (\r\n    params?: GetItemMemberParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<MemberItemResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/item/member`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getItemMemberSearch = (\r\n    params?: GetItemMemberSearchParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedModelMemberItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/item/member/search`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postMember = (\r\n    createMemberRequestModel: CreateMemberRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/member`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: createMemberRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getMemberById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<MemberResponseModel>(\r\n      {url: `/umbraco/management/api/v1/member/${id}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteMemberById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/member/${id}`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putMemberById = (\r\n    id: string,\r\n    updateMemberRequestModel: UpdateMemberRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/member/${id}`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: updateMemberRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putMemberByIdValidate = (\r\n    id: string,\r\n    updateMemberRequestModel: UpdateMemberRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/member/${id}/validate`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: updateMemberRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getMemberConfiguration = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<MemberConfigurationResponseModel>(\r\n      {url: `/umbraco/management/api/v1/member/configuration`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postMemberValidate = (\r\n    createMemberRequestModel: CreateMemberRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/member/validate`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: createMemberRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postModelsBuilderBuild = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/models-builder/build`, method: 'POST'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getModelsBuilderDashboard = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<ModelsBuilderResponseModel>(\r\n      {url: `/umbraco/management/api/v1/models-builder/dashboard`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getModelsBuilderStatus = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<OutOfDateStatusResponseModel>(\r\n      {url: `/umbraco/management/api/v1/models-builder/status`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getObjectTypes = (\r\n    params?: GetObjectTypesParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedObjectTypeResponseModel>(\r\n      {url: `/umbraco/management/api/v1/object-types`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getOembedQuery = (\r\n    params?: GetOembedQueryParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<OEmbedResponseModel>(\r\n      {url: `/umbraco/management/api/v1/oembed/query`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postPackageByNameRunMigration = (\r\n    name: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/package/${name}/run-migration`, method: 'POST'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getPackageConfiguration = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PackageConfigurationResponseModel>(\r\n      {url: `/umbraco/management/api/v1/package/configuration`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getPackageCreated = (\r\n    params?: GetPackageCreatedParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedPackageDefinitionResponseModel>(\r\n      {url: `/umbraco/management/api/v1/package/created`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postPackageCreated = (\r\n    createPackageRequestModel: CreatePackageRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/package/created`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: createPackageRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getPackageCreatedById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PackageDefinitionResponseModel>(\r\n      {url: `/umbraco/management/api/v1/package/created/${id}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deletePackageCreatedById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/package/created/${id}`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putPackageCreatedById = (\r\n    id: string,\r\n    updatePackageRequestModel: NonReadonly<UpdatePackageRequestModel>,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/package/created/${id}`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: updatePackageRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getPackageCreatedByIdDownload = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<Blob>(\r\n      {url: `/umbraco/management/api/v1/package/created/${id}/download`, method: 'GET',\r\n        responseType: 'blob'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getPackageMigrationStatus = (\r\n    params?: GetPackageMigrationStatusParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedPackageMigrationStatusResponseModel>(\r\n      {url: `/umbraco/management/api/v1/package/migration-status`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getItemPartialView = (\r\n    params?: GetItemPartialViewParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PartialViewItemResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/item/partial-view`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postPartialView = (\r\n    createPartialViewRequestModel: CreatePartialViewRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/partial-view`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: createPartialViewRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getPartialViewByPath = (\r\n    path: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PartialViewResponseModel>(\r\n      {url: `/umbraco/management/api/v1/partial-view/${path}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deletePartialViewByPath = (\r\n    path: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/partial-view/${path}`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putPartialViewByPath = (\r\n    path: string,\r\n    updatePartialViewRequestModel: UpdatePartialViewRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/partial-view/${path}`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: updatePartialViewRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putPartialViewByPathRename = (\r\n    path: string,\r\n    renamePartialViewRequestModel: RenamePartialViewRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/partial-view/${path}/rename`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: renamePartialViewRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postPartialViewFolder = (\r\n    createPartialViewFolderRequestModel: CreatePartialViewFolderRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/partial-view/folder`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: createPartialViewFolderRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getPartialViewFolderByPath = (\r\n    path: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PartialViewFolderResponseModel>(\r\n      {url: `/umbraco/management/api/v1/partial-view/folder/${path}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deletePartialViewFolderByPath = (\r\n    path: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/partial-view/folder/${path}`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getPartialViewSnippet = (\r\n    params?: GetPartialViewSnippetParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedPartialViewSnippetItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/partial-view/snippet`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getPartialViewSnippetById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PartialViewSnippetResponseModel>(\r\n      {url: `/umbraco/management/api/v1/partial-view/snippet/${id}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreePartialViewAncestors = (\r\n    params?: GetTreePartialViewAncestorsParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<FileSystemTreeItemPresentationModel[]>(\r\n      {url: `/umbraco/management/api/v1/tree/partial-view/ancestors`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreePartialViewChildren = (\r\n    params?: GetTreePartialViewChildrenParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedFileSystemTreeItemPresentationModel>(\r\n      {url: `/umbraco/management/api/v1/tree/partial-view/children`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreePartialViewRoot = (\r\n    params?: GetTreePartialViewRootParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedFileSystemTreeItemPresentationModel>(\r\n      {url: `/umbraco/management/api/v1/tree/partial-view/root`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deletePreview = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/preview`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postPreview = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/preview`, method: 'POST'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getProfilingStatus = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<ProfilingStatusResponseModel>(\r\n      {url: `/umbraco/management/api/v1/profiling/status`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putProfilingStatus = (\r\n    profilingStatusRequestModel: ProfilingStatusRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/profiling/status`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: profilingStatusRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getPropertyTypeIsUsed = (\r\n    params?: GetPropertyTypeIsUsedParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<boolean>(\r\n      {url: `/umbraco/management/api/v1/property-type/is-used`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\n/**\r\n * @deprecated\r\n */\r\nconst postPublishedCacheCollect = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<unknown>(\r\n      {url: `/umbraco/management/api/v1/published-cache/collect`, method: 'POST'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postPublishedCacheRebuild = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/published-cache/rebuild`, method: 'POST'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postPublishedCacheReload = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/published-cache/reload`, method: 'POST'\r\n    },\r\n      options);\r\n    }\r\n  \r\n/**\r\n * @deprecated\r\n */\r\nconst getPublishedCacheStatus = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<unknown>(\r\n      {url: `/umbraco/management/api/v1/published-cache/status`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getRedirectManagement = (\r\n    params?: GetRedirectManagementParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedRedirectUrlResponseModel>(\r\n      {url: `/umbraco/management/api/v1/redirect-management`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getRedirectManagementById = (\r\n    id: string,\r\n    params?: GetRedirectManagementByIdParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedRedirectUrlResponseModel>(\r\n      {url: `/umbraco/management/api/v1/redirect-management/${id}`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteRedirectManagementById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/redirect-management/${id}`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getRedirectManagementStatus = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<RedirectUrlStatusResponseModel>(\r\n      {url: `/umbraco/management/api/v1/redirect-management/status`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postRedirectManagementStatus = (\r\n    params?: PostRedirectManagementStatusParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/redirect-management/status`, method: 'POST',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getItemRelationType = (\r\n    params?: GetItemRelationTypeParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<RelationTypeItemResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/item/relation-type`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getRelationType = (\r\n    params?: GetRelationTypeParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedRelationTypeResponseModel>(\r\n      {url: `/umbraco/management/api/v1/relation-type`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getRelationTypeById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<RelationTypeResponseModel>(\r\n      {url: `/umbraco/management/api/v1/relation-type/${id}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getRelationByRelationTypeId = (\r\n    id: string,\r\n    params?: GetRelationByRelationTypeIdParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedRelationResponseModel>(\r\n      {url: `/umbraco/management/api/v1/relation/type/${id}`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getItemScript = (\r\n    params?: GetItemScriptParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<ScriptItemResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/item/script`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postScript = (\r\n    createScriptRequestModel: CreateScriptRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/script`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: createScriptRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getScriptByPath = (\r\n    path: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<ScriptResponseModel>(\r\n      {url: `/umbraco/management/api/v1/script/${path}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteScriptByPath = (\r\n    path: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/script/${path}`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putScriptByPath = (\r\n    path: string,\r\n    updateScriptRequestModel: UpdateScriptRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/script/${path}`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: updateScriptRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putScriptByPathRename = (\r\n    path: string,\r\n    renameScriptRequestModel: RenameScriptRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/script/${path}/rename`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: renameScriptRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postScriptFolder = (\r\n    createScriptFolderRequestModel: CreateScriptFolderRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/script/folder`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: createScriptFolderRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getScriptFolderByPath = (\r\n    path: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<ScriptFolderResponseModel>(\r\n      {url: `/umbraco/management/api/v1/script/folder/${path}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteScriptFolderByPath = (\r\n    path: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/script/folder/${path}`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeScriptAncestors = (\r\n    params?: GetTreeScriptAncestorsParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<FileSystemTreeItemPresentationModel[]>(\r\n      {url: `/umbraco/management/api/v1/tree/script/ancestors`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeScriptChildren = (\r\n    params?: GetTreeScriptChildrenParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedFileSystemTreeItemPresentationModel>(\r\n      {url: `/umbraco/management/api/v1/tree/script/children`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeScriptRoot = (\r\n    params?: GetTreeScriptRootParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedFileSystemTreeItemPresentationModel>(\r\n      {url: `/umbraco/management/api/v1/tree/script/root`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getSearcher = (\r\n    params?: GetSearcherParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedSearcherResponseModel>(\r\n      {url: `/umbraco/management/api/v1/searcher`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getSearcherBySearcherNameQuery = (\r\n    searcherName: string,\r\n    params?: GetSearcherBySearcherNameQueryParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedSearchResultResponseModel>(\r\n      {url: `/umbraco/management/api/v1/searcher/${searcherName}/query`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getSecurityConfiguration = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<SecurityConfigurationResponseModel>(\r\n      {url: `/umbraco/management/api/v1/security/configuration`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postSecurityForgotPassword = (\r\n    resetPasswordRequestModel: ResetPasswordRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/security/forgot-password`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: resetPasswordRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postSecurityForgotPasswordReset = (\r\n    resetPasswordTokenRequestModel: ResetPasswordTokenRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/security/forgot-password/reset`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: resetPasswordTokenRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postSecurityForgotPasswordVerify = (\r\n    verifyResetPasswordTokenRequestModel: VerifyResetPasswordTokenRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<VerifyResetPasswordResponseModel>(\r\n      {url: `/umbraco/management/api/v1/security/forgot-password/verify`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: verifyResetPasswordTokenRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getSegment = (\r\n    params?: GetSegmentParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedSegmentResponseModel>(\r\n      {url: `/umbraco/management/api/v1/segment`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getServerConfiguration = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<ServerConfigurationResponseModel>(\r\n      {url: `/umbraco/management/api/v1/server/configuration`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getServerInformation = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<ServerInformationResponseModel>(\r\n      {url: `/umbraco/management/api/v1/server/information`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getServerStatus = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<ServerStatusResponseModel>(\r\n      {url: `/umbraco/management/api/v1/server/status`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getServerTroubleshooting = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<ServerTroubleshootingResponseModel>(\r\n      {url: `/umbraco/management/api/v1/server/troubleshooting`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getServerUpgradeCheck = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<UpgradeCheckResponseModel>(\r\n      {url: `/umbraco/management/api/v1/server/upgrade-check`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getItemStaticFile = (\r\n    params?: GetItemStaticFileParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<StaticFileItemResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/item/static-file`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeStaticFileAncestors = (\r\n    params?: GetTreeStaticFileAncestorsParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<FileSystemTreeItemPresentationModel[]>(\r\n      {url: `/umbraco/management/api/v1/tree/static-file/ancestors`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeStaticFileChildren = (\r\n    params?: GetTreeStaticFileChildrenParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedFileSystemTreeItemPresentationModel>(\r\n      {url: `/umbraco/management/api/v1/tree/static-file/children`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeStaticFileRoot = (\r\n    params?: GetTreeStaticFileRootParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedFileSystemTreeItemPresentationModel>(\r\n      {url: `/umbraco/management/api/v1/tree/static-file/root`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getItemStylesheet = (\r\n    params?: GetItemStylesheetParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<StylesheetItemResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/item/stylesheet`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postStylesheet = (\r\n    createStylesheetRequestModel: CreateStylesheetRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/stylesheet`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: createStylesheetRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getStylesheetByPath = (\r\n    path: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<StylesheetResponseModel>(\r\n      {url: `/umbraco/management/api/v1/stylesheet/${path}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteStylesheetByPath = (\r\n    path: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/stylesheet/${path}`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putStylesheetByPath = (\r\n    path: string,\r\n    updateStylesheetRequestModel: UpdateStylesheetRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/stylesheet/${path}`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: updateStylesheetRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putStylesheetByPathRename = (\r\n    path: string,\r\n    renameStylesheetRequestModel: RenameStylesheetRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/stylesheet/${path}/rename`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: renameStylesheetRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postStylesheetFolder = (\r\n    createStylesheetFolderRequestModel: CreateStylesheetFolderRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/stylesheet/folder`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: createStylesheetFolderRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getStylesheetFolderByPath = (\r\n    path: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<StylesheetFolderResponseModel>(\r\n      {url: `/umbraco/management/api/v1/stylesheet/folder/${path}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteStylesheetFolderByPath = (\r\n    path: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/stylesheet/folder/${path}`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeStylesheetAncestors = (\r\n    params?: GetTreeStylesheetAncestorsParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<FileSystemTreeItemPresentationModel[]>(\r\n      {url: `/umbraco/management/api/v1/tree/stylesheet/ancestors`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeStylesheetChildren = (\r\n    params?: GetTreeStylesheetChildrenParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedFileSystemTreeItemPresentationModel>(\r\n      {url: `/umbraco/management/api/v1/tree/stylesheet/children`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeStylesheetRoot = (\r\n    params?: GetTreeStylesheetRootParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedFileSystemTreeItemPresentationModel>(\r\n      {url: `/umbraco/management/api/v1/tree/stylesheet/root`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTag = (\r\n    params?: GetTagParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedTagResponseModel>(\r\n      {url: `/umbraco/management/api/v1/tag`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTelemetry = (\r\n    params?: GetTelemetryParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedTelemetryResponseModel>(\r\n      {url: `/umbraco/management/api/v1/telemetry`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTelemetryLevel = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<TelemetryResponseModel>(\r\n      {url: `/umbraco/management/api/v1/telemetry/level`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postTelemetryLevel = (\r\n    telemetryRequestModel: TelemetryRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/telemetry/level`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: telemetryRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getItemTemplate = (\r\n    params?: GetItemTemplateParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<TemplateItemResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/item/template`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getItemTemplateSearch = (\r\n    params?: GetItemTemplateSearchParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedModelTemplateItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/item/template/search`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postTemplate = (\r\n    createTemplateRequestModel: CreateTemplateRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/template`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: createTemplateRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTemplateById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<TemplateResponseModel>(\r\n      {url: `/umbraco/management/api/v1/template/${id}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteTemplateById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/template/${id}`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putTemplateById = (\r\n    id: string,\r\n    updateTemplateRequestModel: UpdateTemplateRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/template/${id}`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: updateTemplateRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTemplateConfiguration = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<TemplateConfigurationResponseModel>(\r\n      {url: `/umbraco/management/api/v1/template/configuration`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postTemplateQueryExecute = (\r\n    templateQueryExecuteModel: TemplateQueryExecuteModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<TemplateQueryResultResponseModel>(\r\n      {url: `/umbraco/management/api/v1/template/query/execute`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: templateQueryExecuteModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTemplateQuerySettings = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<TemplateQuerySettingsResponseModel>(\r\n      {url: `/umbraco/management/api/v1/template/query/settings`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeTemplateAncestors = (\r\n    params?: GetTreeTemplateAncestorsParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<NamedEntityTreeItemResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/tree/template/ancestors`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeTemplateChildren = (\r\n    params?: GetTreeTemplateChildrenParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedNamedEntityTreeItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/tree/template/children`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTreeTemplateRoot = (\r\n    params?: GetTreeTemplateRootParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedNamedEntityTreeItemResponseModel>(\r\n      {url: `/umbraco/management/api/v1/tree/template/root`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postTemporaryFile = (\r\n    postTemporaryFileBody: PostTemporaryFileBody,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {const formData = new FormData();\r\nformData.append('Id', postTemporaryFileBody.Id)\r\nformData.append('File', postTemporaryFileBody.File)\r\n\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/temporary-file`, method: 'POST',\r\n      headers: {'Content-Type': 'multipart/form-data', },\r\n       data: formData\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTemporaryFileById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<TemporaryFileResponseModel>(\r\n      {url: `/umbraco/management/api/v1/temporary-file/${id}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteTemporaryFileById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/temporary-file/${id}`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getTemporaryFileConfiguration = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<TemporaryFileConfigurationResponseModel>(\r\n      {url: `/umbraco/management/api/v1/temporary-file/configuration`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postUpgradeAuthorize = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/upgrade/authorize`, method: 'POST'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getUpgradeSettings = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<UpgradeSettingsResponseModel>(\r\n      {url: `/umbraco/management/api/v1/upgrade/settings`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postUserData = (\r\n    createUserDataRequestModel: CreateUserDataRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/user-data`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: createUserDataRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getUserData = (\r\n    params?: GetUserDataParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedUserDataResponseModel>(\r\n      {url: `/umbraco/management/api/v1/user-data`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putUserData = (\r\n    updateUserDataRequestModel: UpdateUserDataRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/user-data`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: updateUserDataRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getUserDataById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<UserDataModel>(\r\n      {url: `/umbraco/management/api/v1/user-data/${id}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getFilterUserGroup = (\r\n    params?: GetFilterUserGroupParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedUserGroupResponseModel>(\r\n      {url: `/umbraco/management/api/v1/filter/user-group`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getItemUserGroup = (\r\n    params?: GetItemUserGroupParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<UserGroupItemResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/item/user-group`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteUserGroup = (\r\n    deleteUserGroupsRequestModel: DeleteUserGroupsRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/user-group`, method: 'DELETE',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: deleteUserGroupsRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postUserGroup = (\r\n    createUserGroupRequestModel: CreateUserGroupRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/user-group`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: createUserGroupRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getUserGroup = (\r\n    params?: GetUserGroupParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedUserGroupResponseModel>(\r\n      {url: `/umbraco/management/api/v1/user-group`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getUserGroupById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<UserGroupResponseModel>(\r\n      {url: `/umbraco/management/api/v1/user-group/${id}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteUserGroupById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/user-group/${id}`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putUserGroupById = (\r\n    id: string,\r\n    updateUserGroupRequestModel: UpdateUserGroupRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/user-group/${id}`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: updateUserGroupRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteUserGroupByIdUsers = (\r\n    id: string,\r\n    referenceByIdModel: ReferenceByIdModel[],\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/user-group/${id}/users`, method: 'DELETE',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: referenceByIdModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postUserGroupByIdUsers = (\r\n    id: string,\r\n    referenceByIdModel: ReferenceByIdModel[],\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/user-group/${id}/users`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: referenceByIdModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getFilterUser = (\r\n    params?: GetFilterUserParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedUserResponseModel>(\r\n      {url: `/umbraco/management/api/v1/filter/user`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getItemUser = (\r\n    params?: GetItemUserParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<UserItemResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/item/user`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postUser = (\r\n    createUserRequestModel: CreateUserRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/user`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: createUserRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteUser = (\r\n    deleteUsersRequestModel: DeleteUsersRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/user`, method: 'DELETE',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: deleteUsersRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getUser = (\r\n    params?: GetUserParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedUserResponseModel>(\r\n      {url: `/umbraco/management/api/v1/user`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getUserById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<UserResponseModel>(\r\n      {url: `/umbraco/management/api/v1/user/${id}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteUserById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/user/${id}`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putUserById = (\r\n    id: string,\r\n    updateUserRequestModel: UpdateUserRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/user/${id}`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: updateUserRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getUserById2fa = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<UserTwoFactorProviderModel[]>(\r\n      {url: `/umbraco/management/api/v1/user/${id}/2fa`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteUserById2faByProviderName = (\r\n    id: string,\r\n    providerName: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/user/${id}/2fa/${providerName}`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getUserByIdCalculateStartNodes = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<CalculatedUserStartNodesResponseModel>(\r\n      {url: `/umbraco/management/api/v1/user/${id}/calculate-start-nodes`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postUserByIdChangePassword = (\r\n    id: string,\r\n    changePasswordUserRequestModel: ChangePasswordUserRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/user/${id}/change-password`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: changePasswordUserRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postUserByIdClientCredentials = (\r\n    id: string,\r\n    createUserClientCredentialsRequestModel: CreateUserClientCredentialsRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/user/${id}/client-credentials`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: createUserClientCredentialsRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getUserByIdClientCredentials = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<string[]>(\r\n      {url: `/umbraco/management/api/v1/user/${id}/client-credentials`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteUserByIdClientCredentialsByClientId = (\r\n    id: string,\r\n    clientId: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/user/${id}/client-credentials/${clientId}`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postUserByIdResetPassword = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<ResetPasswordUserResponseModel>(\r\n      {url: `/umbraco/management/api/v1/user/${id}/reset-password`, method: 'POST'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteUserAvatarById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/user/avatar/${id}`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postUserAvatarById = (\r\n    id: string,\r\n    setAvatarRequestModel: SetAvatarRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/user/avatar/${id}`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: setAvatarRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getUserConfiguration = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<UserConfigurationResponseModel>(\r\n      {url: `/umbraco/management/api/v1/user/configuration`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getUserCurrent = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<CurrentUserResponseModel>(\r\n      {url: `/umbraco/management/api/v1/user/current`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getUserCurrent2fa = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<UserTwoFactorProviderModel[]>(\r\n      {url: `/umbraco/management/api/v1/user/current/2fa`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteUserCurrent2faByProviderName = (\r\n    providerName: string,\r\n    params?: DeleteUserCurrent2faByProviderNameParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/user/current/2fa/${providerName}`, method: 'DELETE',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postUserCurrent2faByProviderName = (\r\n    providerName: string,\r\n    enableTwoFactorRequestModel: EnableTwoFactorRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<NoopSetupTwoFactorModel>(\r\n      {url: `/umbraco/management/api/v1/user/current/2fa/${providerName}`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: enableTwoFactorRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getUserCurrent2faByProviderName = (\r\n    providerName: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<NoopSetupTwoFactorModel>(\r\n      {url: `/umbraco/management/api/v1/user/current/2fa/${providerName}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postUserCurrentAvatar = (\r\n    setAvatarRequestModel: SetAvatarRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/user/current/avatar`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: setAvatarRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postUserCurrentChangePassword = (\r\n    changePasswordCurrentUserRequestModel: ChangePasswordCurrentUserRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/user/current/change-password`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: changePasswordCurrentUserRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getUserCurrentConfiguration = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<CurrenUserConfigurationResponseModel>(\r\n      {url: `/umbraco/management/api/v1/user/current/configuration`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getUserCurrentLoginProviders = (\r\n    \r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<UserExternalLoginProviderModel[]>(\r\n      {url: `/umbraco/management/api/v1/user/current/login-providers`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getUserCurrentPermissions = (\r\n    params?: GetUserCurrentPermissionsParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<UserPermissionsResponseModel>(\r\n      {url: `/umbraco/management/api/v1/user/current/permissions`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getUserCurrentPermissionsDocument = (\r\n    params?: GetUserCurrentPermissionsDocumentParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<UserPermissionsResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/user/current/permissions/document`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getUserCurrentPermissionsMedia = (\r\n    params?: GetUserCurrentPermissionsMediaParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<UserPermissionsResponseModel>(\r\n      {url: `/umbraco/management/api/v1/user/current/permissions/media`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postUserDisable = (\r\n    disableUserRequestModel: DisableUserRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/user/disable`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: disableUserRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postUserEnable = (\r\n    enableUserRequestModel: EnableUserRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/user/enable`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: enableUserRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postUserInvite = (\r\n    inviteUserRequestModel: InviteUserRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/user/invite`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: inviteUserRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postUserInviteCreatePassword = (\r\n    createInitialPasswordUserRequestModel: CreateInitialPasswordUserRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/user/invite/create-password`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: createInitialPasswordUserRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postUserInviteResend = (\r\n    resendInviteUserRequestModel: ResendInviteUserRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/user/invite/resend`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: resendInviteUserRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postUserInviteVerify = (\r\n    verifyInviteUserRequestModel: VerifyInviteUserRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<VerifyInviteUserResponseModel>(\r\n      {url: `/umbraco/management/api/v1/user/invite/verify`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: verifyInviteUserRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postUserSetUserGroups = (\r\n    updateUserGroupsOnUserRequestModel: UpdateUserGroupsOnUserRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/user/set-user-groups`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: updateUserGroupsOnUserRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postUserUnlock = (\r\n    unlockUsersRequestModel: UnlockUsersRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/user/unlock`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: unlockUsersRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getItemWebhook = (\r\n    params?: GetItemWebhookParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<WebhookItemResponseModel[]>(\r\n      {url: `/umbraco/management/api/v1/item/webhook`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getWebhook = (\r\n    params?: GetWebhookParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedWebhookResponseModel>(\r\n      {url: `/umbraco/management/api/v1/webhook`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst postWebhook = (\r\n    createWebhookRequestModel: CreateWebhookRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/webhook`, method: 'POST',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: createWebhookRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getWebhookById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<WebhookResponseModel>(\r\n      {url: `/umbraco/management/api/v1/webhook/${id}`, method: 'GET'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst deleteWebhookById = (\r\n    id: string,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/webhook/${id}`, method: 'DELETE'\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst putWebhookById = (\r\n    id: string,\r\n    updateWebhookRequestModel: UpdateWebhookRequestModel,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<void>(\r\n      {url: `/umbraco/management/api/v1/webhook/${id}`, method: 'PUT',\r\n      headers: {'Content-Type': 'application/json', },\r\n      data: updateWebhookRequestModel\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getWebhookByIdLogs = (\r\n    id: string,\r\n    params?: GetWebhookByIdLogsParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedWebhookLogResponseModel>(\r\n      {url: `/umbraco/management/api/v1/webhook/${id}/logs`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getWebhookEvents = (\r\n    params?: GetWebhookEventsParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedWebhookEventModel>(\r\n      {url: `/umbraco/management/api/v1/webhook/events`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nconst getWebhookLogs = (\r\n    params?: GetWebhookLogsParams,\r\n options?: SecondParameter<typeof UmbracoManagementClient>,) => {\r\n      return UmbracoManagementClient<PagedWebhookLogResponseModel>(\r\n      {url: `/umbraco/management/api/v1/webhook/logs`, method: 'GET',\r\n        params\r\n    },\r\n      options);\r\n    }\r\n  \r\nreturn {getCulture,postDataType,getDataTypeById,deleteDataTypeById,putDataTypeById,postDataTypeByIdCopy,getDataTypeByIdIsUsed,putDataTypeByIdMove,getDataTypeByIdReferences,getDataTypeConfiguration,postDataTypeFolder,getDataTypeFolderById,deleteDataTypeFolderById,putDataTypeFolderById,getFilterDataType,getItemDataType,getItemDataTypeSearch,getTreeDataTypeAncestors,getTreeDataTypeChildren,getTreeDataTypeRoot,getDictionary,postDictionary,getDictionaryById,deleteDictionaryById,putDictionaryById,getDictionaryByIdExport,putDictionaryByIdMove,postDictionaryImport,getItemDictionary,getTreeDictionaryAncestors,getTreeDictionaryChildren,getTreeDictionaryRoot,postDocumentBlueprint,getDocumentBlueprintById,deleteDocumentBlueprintById,putDocumentBlueprintById,putDocumentBlueprintByIdMove,postDocumentBlueprintFolder,getDocumentBlueprintFolderById,deleteDocumentBlueprintFolderById,putDocumentBlueprintFolderById,postDocumentBlueprintFromDocument,getItemDocumentBlueprint,getTreeDocumentBlueprintAncestors,getTreeDocumentBlueprintChildren,getTreeDocumentBlueprintRoot,postDocumentType,getDocumentTypeById,deleteDocumentTypeById,putDocumentTypeById,getDocumentTypeByIdAllowedChildren,getDocumentTypeByIdBlueprint,getDocumentTypeByIdCompositionReferences,postDocumentTypeByIdCopy,getDocumentTypeByIdExport,putDocumentTypeByIdImport,putDocumentTypeByIdMove,getDocumentTypeAllowedAtRoot,postDocumentTypeAvailableCompositions,getDocumentTypeConfiguration,postDocumentTypeFolder,getDocumentTypeFolderById,deleteDocumentTypeFolderById,putDocumentTypeFolderById,postDocumentTypeImport,getItemDocumentType,getItemDocumentTypeSearch,getTreeDocumentTypeAncestors,getTreeDocumentTypeChildren,getTreeDocumentTypeRoot,getDocumentVersion,getDocumentVersionById,putDocumentVersionByIdPreventCleanup,postDocumentVersionByIdRollback,getCollectionDocumentById,postDocument,getDocumentById,deleteDocumentById,putDocumentById,getDocumentByIdAuditLog,postDocumentByIdCopy,getDocumentByIdDomains,putDocumentByIdDomains,putDocumentByIdMove,putDocumentByIdMoveToRecycleBin,getDocumentByIdNotifications,putDocumentByIdNotifications,postDocumentByIdPublicAccess,deleteDocumentByIdPublicAccess,getDocumentByIdPublicAccess,putDocumentByIdPublicAccess,putDocumentByIdPublish,putDocumentByIdPublishWithDescendants,getDocumentByIdPublished,getDocumentByIdReferencedBy,getDocumentByIdReferencedDescendants,putDocumentByIdUnpublish,putDocumentByIdValidate,putUmbracoManagementApiV11DocumentByIdValidate11,getDocumentAreReferenced,getDocumentConfiguration,putDocumentSort,getDocumentUrls,postDocumentValidate,getItemDocument,getItemDocumentSearch,deleteRecycleBinDocument,deleteRecycleBinDocumentById,getRecycleBinDocumentByIdOriginalParent,putRecycleBinDocumentByIdRestore,getRecycleBinDocumentChildren,getRecycleBinDocumentRoot,getTreeDocumentAncestors,getTreeDocumentChildren,getTreeDocumentRoot,postDynamicRootQuery,getDynamicRootSteps,getHealthCheckGroup,getHealthCheckGroupByName,postHealthCheckGroupByNameCheck,postHealthCheckExecuteAction,getHelp,getImagingResizeUrls,getImportAnalyze,getIndexer,getIndexerByIndexName,postIndexerByIndexNameRebuild,getInstallSettings,postInstallSetup,postInstallValidateDatabase,getItemLanguage,getItemLanguageDefault,getLanguage,postLanguage,getLanguageByIsoCode,deleteLanguageByIsoCode,putLanguageByIsoCode,getLogViewerLevel,getLogViewerLevelCount,getLogViewerLog,getLogViewerMessageTemplate,getLogViewerSavedSearch,postLogViewerSavedSearch,getLogViewerSavedSearchByName,deleteLogViewerSavedSearchByName,getLogViewerValidateLogsSize,getManifestManifest,getManifestManifestPrivate,getManifestManifestPublic,getItemMediaType,getItemMediaTypeAllowed,getItemMediaTypeFolders,getItemMediaTypeSearch,postMediaType,getMediaTypeById,deleteMediaTypeById,putMediaTypeById,getMediaTypeByIdAllowedChildren,getMediaTypeByIdCompositionReferences,postMediaTypeByIdCopy,getMediaTypeByIdExport,putMediaTypeByIdImport,putMediaTypeByIdMove,getMediaTypeAllowedAtRoot,postMediaTypeAvailableCompositions,getMediaTypeConfiguration,postMediaTypeFolder,getMediaTypeFolderById,deleteMediaTypeFolderById,putMediaTypeFolderById,postMediaTypeImport,getTreeMediaTypeAncestors,getTreeMediaTypeChildren,getTreeMediaTypeRoot,getCollectionMedia,getItemMedia,getItemMediaSearch,postMedia,getMediaById,deleteMediaById,putMediaById,getMediaByIdAuditLog,putMediaByIdMove,putMediaByIdMoveToRecycleBin,getMediaByIdReferencedBy,getMediaByIdReferencedDescendants,putMediaByIdValidate,getMediaAreReferenced,getMediaConfiguration,putMediaSort,getMediaUrls,postMediaValidate,deleteRecycleBinMedia,deleteRecycleBinMediaById,getRecycleBinMediaByIdOriginalParent,putRecycleBinMediaByIdRestore,getRecycleBinMediaChildren,getRecycleBinMediaRoot,getTreeMediaAncestors,getTreeMediaChildren,getTreeMediaRoot,getItemMemberGroup,getMemberGroup,postMemberGroup,getMemberGroupById,deleteMemberGroupById,putMemberGroupById,getTreeMemberGroupRoot,getItemMemberType,getItemMemberTypeSearch,postMemberType,getMemberTypeById,deleteMemberTypeById,putMemberTypeById,getMemberTypeByIdCompositionReferences,postMemberTypeByIdCopy,postMemberTypeAvailableCompositions,getMemberTypeConfiguration,getTreeMemberTypeRoot,getFilterMember,getItemMember,getItemMemberSearch,postMember,getMemberById,deleteMemberById,putMemberById,putMemberByIdValidate,getMemberConfiguration,postMemberValidate,postModelsBuilderBuild,getModelsBuilderDashboard,getModelsBuilderStatus,getObjectTypes,getOembedQuery,postPackageByNameRunMigration,getPackageConfiguration,getPackageCreated,postPackageCreated,getPackageCreatedById,deletePackageCreatedById,putPackageCreatedById,getPackageCreatedByIdDownload,getPackageMigrationStatus,getItemPartialView,postPartialView,getPartialViewByPath,deletePartialViewByPath,putPartialViewByPath,putPartialViewByPathRename,postPartialViewFolder,getPartialViewFolderByPath,deletePartialViewFolderByPath,getPartialViewSnippet,getPartialViewSnippetById,getTreePartialViewAncestors,getTreePartialViewChildren,getTreePartialViewRoot,deletePreview,postPreview,getProfilingStatus,putProfilingStatus,getPropertyTypeIsUsed,postPublishedCacheCollect,postPublishedCacheRebuild,postPublishedCacheReload,getPublishedCacheStatus,getRedirectManagement,getRedirectManagementById,deleteRedirectManagementById,getRedirectManagementStatus,postRedirectManagementStatus,getItemRelationType,getRelationType,getRelationTypeById,getRelationByRelationTypeId,getItemScript,postScript,getScriptByPath,deleteScriptByPath,putScriptByPath,putScriptByPathRename,postScriptFolder,getScriptFolderByPath,deleteScriptFolderByPath,getTreeScriptAncestors,getTreeScriptChildren,getTreeScriptRoot,getSearcher,getSearcherBySearcherNameQuery,getSecurityConfiguration,postSecurityForgotPassword,postSecurityForgotPasswordReset,postSecurityForgotPasswordVerify,getSegment,getServerConfiguration,getServerInformation,getServerStatus,getServerTroubleshooting,getServerUpgradeCheck,getItemStaticFile,getTreeStaticFileAncestors,getTreeStaticFileChildren,getTreeStaticFileRoot,getItemStylesheet,postStylesheet,getStylesheetByPath,deleteStylesheetByPath,putStylesheetByPath,putStylesheetByPathRename,postStylesheetFolder,getStylesheetFolderByPath,deleteStylesheetFolderByPath,getTreeStylesheetAncestors,getTreeStylesheetChildren,getTreeStylesheetRoot,getTag,getTelemetry,getTelemetryLevel,postTelemetryLevel,getItemTemplate,getItemTemplateSearch,postTemplate,getTemplateById,deleteTemplateById,putTemplateById,getTemplateConfiguration,postTemplateQueryExecute,getTemplateQuerySettings,getTreeTemplateAncestors,getTreeTemplateChildren,getTreeTemplateRoot,postTemporaryFile,getTemporaryFileById,deleteTemporaryFileById,getTemporaryFileConfiguration,postUpgradeAuthorize,getUpgradeSettings,postUserData,getUserData,putUserData,getUserDataById,getFilterUserGroup,getItemUserGroup,deleteUserGroup,postUserGroup,getUserGroup,getUserGroupById,deleteUserGroupById,putUserGroupById,deleteUserGroupByIdUsers,postUserGroupByIdUsers,getFilterUser,getItemUser,postUser,deleteUser,getUser,getUserById,deleteUserById,putUserById,getUserById2fa,deleteUserById2faByProviderName,getUserByIdCalculateStartNodes,postUserByIdChangePassword,postUserByIdClientCredentials,getUserByIdClientCredentials,deleteUserByIdClientCredentialsByClientId,postUserByIdResetPassword,deleteUserAvatarById,postUserAvatarById,getUserConfiguration,getUserCurrent,getUserCurrent2fa,deleteUserCurrent2faByProviderName,postUserCurrent2faByProviderName,getUserCurrent2faByProviderName,postUserCurrentAvatar,postUserCurrentChangePassword,getUserCurrentConfiguration,getUserCurrentLoginProviders,getUserCurrentPermissions,getUserCurrentPermissionsDocument,getUserCurrentPermissionsMedia,postUserDisable,postUserEnable,postUserInvite,postUserInviteCreatePassword,postUserInviteResend,postUserInviteVerify,postUserSetUserGroups,postUserUnlock,getItemWebhook,getWebhook,postWebhook,getWebhookById,deleteWebhookById,putWebhookById,getWebhookByIdLogs,getWebhookEvents,getWebhookLogs}};\r\nexport type GetCultureResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getCulture']>>>\r\nexport type PostDataTypeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDataType']>>>\r\nexport type GetDataTypeByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDataTypeById']>>>\r\nexport type DeleteDataTypeByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteDataTypeById']>>>\r\nexport type PutDataTypeByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDataTypeById']>>>\r\nexport type PostDataTypeByIdCopyResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDataTypeByIdCopy']>>>\r\nexport type GetDataTypeByIdIsUsedResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDataTypeByIdIsUsed']>>>\r\nexport type PutDataTypeByIdMoveResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDataTypeByIdMove']>>>\r\nexport type GetDataTypeByIdReferencesResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDataTypeByIdReferences']>>>\r\nexport type GetDataTypeConfigurationResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDataTypeConfiguration']>>>\r\nexport type PostDataTypeFolderResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDataTypeFolder']>>>\r\nexport type GetDataTypeFolderByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDataTypeFolderById']>>>\r\nexport type DeleteDataTypeFolderByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteDataTypeFolderById']>>>\r\nexport type PutDataTypeFolderByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDataTypeFolderById']>>>\r\nexport type GetFilterDataTypeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getFilterDataType']>>>\r\nexport type GetItemDataTypeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemDataType']>>>\r\nexport type GetItemDataTypeSearchResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemDataTypeSearch']>>>\r\nexport type GetTreeDataTypeAncestorsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeDataTypeAncestors']>>>\r\nexport type GetTreeDataTypeChildrenResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeDataTypeChildren']>>>\r\nexport type GetTreeDataTypeRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeDataTypeRoot']>>>\r\nexport type GetDictionaryResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDictionary']>>>\r\nexport type PostDictionaryResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDictionary']>>>\r\nexport type GetDictionaryByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDictionaryById']>>>\r\nexport type DeleteDictionaryByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteDictionaryById']>>>\r\nexport type PutDictionaryByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDictionaryById']>>>\r\nexport type GetDictionaryByIdExportResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDictionaryByIdExport']>>>\r\nexport type PutDictionaryByIdMoveResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDictionaryByIdMove']>>>\r\nexport type PostDictionaryImportResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDictionaryImport']>>>\r\nexport type GetItemDictionaryResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemDictionary']>>>\r\nexport type GetTreeDictionaryAncestorsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeDictionaryAncestors']>>>\r\nexport type GetTreeDictionaryChildrenResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeDictionaryChildren']>>>\r\nexport type GetTreeDictionaryRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeDictionaryRoot']>>>\r\nexport type PostDocumentBlueprintResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDocumentBlueprint']>>>\r\nexport type GetDocumentBlueprintByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentBlueprintById']>>>\r\nexport type DeleteDocumentBlueprintByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteDocumentBlueprintById']>>>\r\nexport type PutDocumentBlueprintByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentBlueprintById']>>>\r\nexport type PutDocumentBlueprintByIdMoveResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentBlueprintByIdMove']>>>\r\nexport type PostDocumentBlueprintFolderResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDocumentBlueprintFolder']>>>\r\nexport type GetDocumentBlueprintFolderByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentBlueprintFolderById']>>>\r\nexport type DeleteDocumentBlueprintFolderByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteDocumentBlueprintFolderById']>>>\r\nexport type PutDocumentBlueprintFolderByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentBlueprintFolderById']>>>\r\nexport type PostDocumentBlueprintFromDocumentResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDocumentBlueprintFromDocument']>>>\r\nexport type GetItemDocumentBlueprintResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemDocumentBlueprint']>>>\r\nexport type GetTreeDocumentBlueprintAncestorsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeDocumentBlueprintAncestors']>>>\r\nexport type GetTreeDocumentBlueprintChildrenResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeDocumentBlueprintChildren']>>>\r\nexport type GetTreeDocumentBlueprintRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeDocumentBlueprintRoot']>>>\r\nexport type PostDocumentTypeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDocumentType']>>>\r\nexport type GetDocumentTypeByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentTypeById']>>>\r\nexport type DeleteDocumentTypeByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteDocumentTypeById']>>>\r\nexport type PutDocumentTypeByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentTypeById']>>>\r\nexport type GetDocumentTypeByIdAllowedChildrenResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentTypeByIdAllowedChildren']>>>\r\nexport type GetDocumentTypeByIdBlueprintResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentTypeByIdBlueprint']>>>\r\nexport type GetDocumentTypeByIdCompositionReferencesResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentTypeByIdCompositionReferences']>>>\r\nexport type PostDocumentTypeByIdCopyResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDocumentTypeByIdCopy']>>>\r\nexport type GetDocumentTypeByIdExportResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentTypeByIdExport']>>>\r\nexport type PutDocumentTypeByIdImportResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentTypeByIdImport']>>>\r\nexport type PutDocumentTypeByIdMoveResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentTypeByIdMove']>>>\r\nexport type GetDocumentTypeAllowedAtRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentTypeAllowedAtRoot']>>>\r\nexport type PostDocumentTypeAvailableCompositionsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDocumentTypeAvailableCompositions']>>>\r\nexport type GetDocumentTypeConfigurationResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentTypeConfiguration']>>>\r\nexport type PostDocumentTypeFolderResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDocumentTypeFolder']>>>\r\nexport type GetDocumentTypeFolderByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentTypeFolderById']>>>\r\nexport type DeleteDocumentTypeFolderByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteDocumentTypeFolderById']>>>\r\nexport type PutDocumentTypeFolderByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentTypeFolderById']>>>\r\nexport type PostDocumentTypeImportResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDocumentTypeImport']>>>\r\nexport type GetItemDocumentTypeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemDocumentType']>>>\r\nexport type GetItemDocumentTypeSearchResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemDocumentTypeSearch']>>>\r\nexport type GetTreeDocumentTypeAncestorsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeDocumentTypeAncestors']>>>\r\nexport type GetTreeDocumentTypeChildrenResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeDocumentTypeChildren']>>>\r\nexport type GetTreeDocumentTypeRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeDocumentTypeRoot']>>>\r\nexport type GetDocumentVersionResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentVersion']>>>\r\nexport type GetDocumentVersionByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentVersionById']>>>\r\nexport type PutDocumentVersionByIdPreventCleanupResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentVersionByIdPreventCleanup']>>>\r\nexport type PostDocumentVersionByIdRollbackResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDocumentVersionByIdRollback']>>>\r\nexport type GetCollectionDocumentByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getCollectionDocumentById']>>>\r\nexport type PostDocumentResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDocument']>>>\r\nexport type GetDocumentByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentById']>>>\r\nexport type DeleteDocumentByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteDocumentById']>>>\r\nexport type PutDocumentByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentById']>>>\r\nexport type GetDocumentByIdAuditLogResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentByIdAuditLog']>>>\r\nexport type PostDocumentByIdCopyResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDocumentByIdCopy']>>>\r\nexport type GetDocumentByIdDomainsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentByIdDomains']>>>\r\nexport type PutDocumentByIdDomainsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentByIdDomains']>>>\r\nexport type PutDocumentByIdMoveResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentByIdMove']>>>\r\nexport type PutDocumentByIdMoveToRecycleBinResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentByIdMoveToRecycleBin']>>>\r\nexport type GetDocumentByIdNotificationsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentByIdNotifications']>>>\r\nexport type PutDocumentByIdNotificationsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentByIdNotifications']>>>\r\nexport type PostDocumentByIdPublicAccessResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDocumentByIdPublicAccess']>>>\r\nexport type DeleteDocumentByIdPublicAccessResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteDocumentByIdPublicAccess']>>>\r\nexport type GetDocumentByIdPublicAccessResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentByIdPublicAccess']>>>\r\nexport type PutDocumentByIdPublicAccessResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentByIdPublicAccess']>>>\r\nexport type PutDocumentByIdPublishResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentByIdPublish']>>>\r\nexport type PutDocumentByIdPublishWithDescendantsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentByIdPublishWithDescendants']>>>\r\nexport type GetDocumentByIdPublishedResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentByIdPublished']>>>\r\nexport type GetDocumentByIdReferencedByResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentByIdReferencedBy']>>>\r\nexport type GetDocumentByIdReferencedDescendantsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentByIdReferencedDescendants']>>>\r\nexport type PutDocumentByIdUnpublishResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentByIdUnpublish']>>>\r\nexport type PutDocumentByIdValidateResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentByIdValidate']>>>\r\nexport type PutUmbracoManagementApiV11DocumentByIdValidate11Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putUmbracoManagementApiV11DocumentByIdValidate11']>>>\r\nexport type GetDocumentAreReferencedResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentAreReferenced']>>>\r\nexport type GetDocumentConfigurationResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentConfiguration']>>>\r\nexport type PutDocumentSortResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putDocumentSort']>>>\r\nexport type GetDocumentUrlsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDocumentUrls']>>>\r\nexport type PostDocumentValidateResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDocumentValidate']>>>\r\nexport type GetItemDocumentResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemDocument']>>>\r\nexport type GetItemDocumentSearchResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemDocumentSearch']>>>\r\nexport type DeleteRecycleBinDocumentResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteRecycleBinDocument']>>>\r\nexport type DeleteRecycleBinDocumentByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteRecycleBinDocumentById']>>>\r\nexport type GetRecycleBinDocumentByIdOriginalParentResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getRecycleBinDocumentByIdOriginalParent']>>>\r\nexport type PutRecycleBinDocumentByIdRestoreResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putRecycleBinDocumentByIdRestore']>>>\r\nexport type GetRecycleBinDocumentChildrenResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getRecycleBinDocumentChildren']>>>\r\nexport type GetRecycleBinDocumentRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getRecycleBinDocumentRoot']>>>\r\nexport type GetTreeDocumentAncestorsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeDocumentAncestors']>>>\r\nexport type GetTreeDocumentChildrenResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeDocumentChildren']>>>\r\nexport type GetTreeDocumentRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeDocumentRoot']>>>\r\nexport type PostDynamicRootQueryResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postDynamicRootQuery']>>>\r\nexport type GetDynamicRootStepsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getDynamicRootSteps']>>>\r\nexport type GetHealthCheckGroupResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getHealthCheckGroup']>>>\r\nexport type GetHealthCheckGroupByNameResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getHealthCheckGroupByName']>>>\r\nexport type PostHealthCheckGroupByNameCheckResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postHealthCheckGroupByNameCheck']>>>\r\nexport type PostHealthCheckExecuteActionResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postHealthCheckExecuteAction']>>>\r\nexport type GetHelpResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getHelp']>>>\r\nexport type GetImagingResizeUrlsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getImagingResizeUrls']>>>\r\nexport type GetImportAnalyzeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getImportAnalyze']>>>\r\nexport type GetIndexerResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getIndexer']>>>\r\nexport type GetIndexerByIndexNameResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getIndexerByIndexName']>>>\r\nexport type PostIndexerByIndexNameRebuildResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postIndexerByIndexNameRebuild']>>>\r\nexport type GetInstallSettingsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getInstallSettings']>>>\r\nexport type PostInstallSetupResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postInstallSetup']>>>\r\nexport type PostInstallValidateDatabaseResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postInstallValidateDatabase']>>>\r\nexport type GetItemLanguageResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemLanguage']>>>\r\nexport type GetItemLanguageDefaultResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemLanguageDefault']>>>\r\nexport type GetLanguageResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getLanguage']>>>\r\nexport type PostLanguageResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postLanguage']>>>\r\nexport type GetLanguageByIsoCodeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getLanguageByIsoCode']>>>\r\nexport type DeleteLanguageByIsoCodeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteLanguageByIsoCode']>>>\r\nexport type PutLanguageByIsoCodeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putLanguageByIsoCode']>>>\r\nexport type GetLogViewerLevelResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getLogViewerLevel']>>>\r\nexport type GetLogViewerLevelCountResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getLogViewerLevelCount']>>>\r\nexport type GetLogViewerLogResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getLogViewerLog']>>>\r\nexport type GetLogViewerMessageTemplateResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getLogViewerMessageTemplate']>>>\r\nexport type GetLogViewerSavedSearchResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getLogViewerSavedSearch']>>>\r\nexport type PostLogViewerSavedSearchResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postLogViewerSavedSearch']>>>\r\nexport type GetLogViewerSavedSearchByNameResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getLogViewerSavedSearchByName']>>>\r\nexport type DeleteLogViewerSavedSearchByNameResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteLogViewerSavedSearchByName']>>>\r\nexport type GetLogViewerValidateLogsSizeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getLogViewerValidateLogsSize']>>>\r\nexport type GetManifestManifestResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getManifestManifest']>>>\r\nexport type GetManifestManifestPrivateResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getManifestManifestPrivate']>>>\r\nexport type GetManifestManifestPublicResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getManifestManifestPublic']>>>\r\nexport type GetItemMediaTypeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemMediaType']>>>\r\nexport type GetItemMediaTypeAllowedResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemMediaTypeAllowed']>>>\r\nexport type GetItemMediaTypeFoldersResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemMediaTypeFolders']>>>\r\nexport type GetItemMediaTypeSearchResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemMediaTypeSearch']>>>\r\nexport type PostMediaTypeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postMediaType']>>>\r\nexport type GetMediaTypeByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMediaTypeById']>>>\r\nexport type DeleteMediaTypeByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteMediaTypeById']>>>\r\nexport type PutMediaTypeByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putMediaTypeById']>>>\r\nexport type GetMediaTypeByIdAllowedChildrenResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMediaTypeByIdAllowedChildren']>>>\r\nexport type GetMediaTypeByIdCompositionReferencesResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMediaTypeByIdCompositionReferences']>>>\r\nexport type PostMediaTypeByIdCopyResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postMediaTypeByIdCopy']>>>\r\nexport type GetMediaTypeByIdExportResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMediaTypeByIdExport']>>>\r\nexport type PutMediaTypeByIdImportResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putMediaTypeByIdImport']>>>\r\nexport type PutMediaTypeByIdMoveResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putMediaTypeByIdMove']>>>\r\nexport type GetMediaTypeAllowedAtRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMediaTypeAllowedAtRoot']>>>\r\nexport type PostMediaTypeAvailableCompositionsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postMediaTypeAvailableCompositions']>>>\r\nexport type GetMediaTypeConfigurationResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMediaTypeConfiguration']>>>\r\nexport type PostMediaTypeFolderResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postMediaTypeFolder']>>>\r\nexport type GetMediaTypeFolderByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMediaTypeFolderById']>>>\r\nexport type DeleteMediaTypeFolderByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteMediaTypeFolderById']>>>\r\nexport type PutMediaTypeFolderByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putMediaTypeFolderById']>>>\r\nexport type PostMediaTypeImportResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postMediaTypeImport']>>>\r\nexport type GetTreeMediaTypeAncestorsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeMediaTypeAncestors']>>>\r\nexport type GetTreeMediaTypeChildrenResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeMediaTypeChildren']>>>\r\nexport type GetTreeMediaTypeRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeMediaTypeRoot']>>>\r\nexport type GetCollectionMediaResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getCollectionMedia']>>>\r\nexport type GetItemMediaResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemMedia']>>>\r\nexport type GetItemMediaSearchResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemMediaSearch']>>>\r\nexport type PostMediaResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postMedia']>>>\r\nexport type GetMediaByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMediaById']>>>\r\nexport type DeleteMediaByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteMediaById']>>>\r\nexport type PutMediaByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putMediaById']>>>\r\nexport type GetMediaByIdAuditLogResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMediaByIdAuditLog']>>>\r\nexport type PutMediaByIdMoveResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putMediaByIdMove']>>>\r\nexport type PutMediaByIdMoveToRecycleBinResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putMediaByIdMoveToRecycleBin']>>>\r\nexport type GetMediaByIdReferencedByResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMediaByIdReferencedBy']>>>\r\nexport type GetMediaByIdReferencedDescendantsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMediaByIdReferencedDescendants']>>>\r\nexport type PutMediaByIdValidateResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putMediaByIdValidate']>>>\r\nexport type GetMediaAreReferencedResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMediaAreReferenced']>>>\r\nexport type GetMediaConfigurationResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMediaConfiguration']>>>\r\nexport type PutMediaSortResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putMediaSort']>>>\r\nexport type GetMediaUrlsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMediaUrls']>>>\r\nexport type PostMediaValidateResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postMediaValidate']>>>\r\nexport type DeleteRecycleBinMediaResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteRecycleBinMedia']>>>\r\nexport type DeleteRecycleBinMediaByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteRecycleBinMediaById']>>>\r\nexport type GetRecycleBinMediaByIdOriginalParentResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getRecycleBinMediaByIdOriginalParent']>>>\r\nexport type PutRecycleBinMediaByIdRestoreResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putRecycleBinMediaByIdRestore']>>>\r\nexport type GetRecycleBinMediaChildrenResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getRecycleBinMediaChildren']>>>\r\nexport type GetRecycleBinMediaRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getRecycleBinMediaRoot']>>>\r\nexport type GetTreeMediaAncestorsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeMediaAncestors']>>>\r\nexport type GetTreeMediaChildrenResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeMediaChildren']>>>\r\nexport type GetTreeMediaRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeMediaRoot']>>>\r\nexport type GetItemMemberGroupResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemMemberGroup']>>>\r\nexport type GetMemberGroupResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMemberGroup']>>>\r\nexport type PostMemberGroupResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postMemberGroup']>>>\r\nexport type GetMemberGroupByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMemberGroupById']>>>\r\nexport type DeleteMemberGroupByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteMemberGroupById']>>>\r\nexport type PutMemberGroupByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putMemberGroupById']>>>\r\nexport type GetTreeMemberGroupRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeMemberGroupRoot']>>>\r\nexport type GetItemMemberTypeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemMemberType']>>>\r\nexport type GetItemMemberTypeSearchResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemMemberTypeSearch']>>>\r\nexport type PostMemberTypeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postMemberType']>>>\r\nexport type GetMemberTypeByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMemberTypeById']>>>\r\nexport type DeleteMemberTypeByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteMemberTypeById']>>>\r\nexport type PutMemberTypeByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putMemberTypeById']>>>\r\nexport type GetMemberTypeByIdCompositionReferencesResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMemberTypeByIdCompositionReferences']>>>\r\nexport type PostMemberTypeByIdCopyResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postMemberTypeByIdCopy']>>>\r\nexport type PostMemberTypeAvailableCompositionsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postMemberTypeAvailableCompositions']>>>\r\nexport type GetMemberTypeConfigurationResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMemberTypeConfiguration']>>>\r\nexport type GetTreeMemberTypeRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeMemberTypeRoot']>>>\r\nexport type GetFilterMemberResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getFilterMember']>>>\r\nexport type GetItemMemberResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemMember']>>>\r\nexport type GetItemMemberSearchResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemMemberSearch']>>>\r\nexport type PostMemberResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postMember']>>>\r\nexport type GetMemberByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMemberById']>>>\r\nexport type DeleteMemberByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteMemberById']>>>\r\nexport type PutMemberByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putMemberById']>>>\r\nexport type PutMemberByIdValidateResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putMemberByIdValidate']>>>\r\nexport type GetMemberConfigurationResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getMemberConfiguration']>>>\r\nexport type PostMemberValidateResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postMemberValidate']>>>\r\nexport type PostModelsBuilderBuildResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postModelsBuilderBuild']>>>\r\nexport type GetModelsBuilderDashboardResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getModelsBuilderDashboard']>>>\r\nexport type GetModelsBuilderStatusResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getModelsBuilderStatus']>>>\r\nexport type GetObjectTypesResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getObjectTypes']>>>\r\nexport type GetOembedQueryResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getOembedQuery']>>>\r\nexport type PostPackageByNameRunMigrationResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postPackageByNameRunMigration']>>>\r\nexport type GetPackageConfigurationResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getPackageConfiguration']>>>\r\nexport type GetPackageCreatedResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getPackageCreated']>>>\r\nexport type PostPackageCreatedResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postPackageCreated']>>>\r\nexport type GetPackageCreatedByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getPackageCreatedById']>>>\r\nexport type DeletePackageCreatedByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deletePackageCreatedById']>>>\r\nexport type PutPackageCreatedByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putPackageCreatedById']>>>\r\nexport type GetPackageCreatedByIdDownloadResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getPackageCreatedByIdDownload']>>>\r\nexport type GetPackageMigrationStatusResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getPackageMigrationStatus']>>>\r\nexport type GetItemPartialViewResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemPartialView']>>>\r\nexport type PostPartialViewResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postPartialView']>>>\r\nexport type GetPartialViewByPathResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getPartialViewByPath']>>>\r\nexport type DeletePartialViewByPathResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deletePartialViewByPath']>>>\r\nexport type PutPartialViewByPathResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putPartialViewByPath']>>>\r\nexport type PutPartialViewByPathRenameResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putPartialViewByPathRename']>>>\r\nexport type PostPartialViewFolderResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postPartialViewFolder']>>>\r\nexport type GetPartialViewFolderByPathResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getPartialViewFolderByPath']>>>\r\nexport type DeletePartialViewFolderByPathResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deletePartialViewFolderByPath']>>>\r\nexport type GetPartialViewSnippetResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getPartialViewSnippet']>>>\r\nexport type GetPartialViewSnippetByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getPartialViewSnippetById']>>>\r\nexport type GetTreePartialViewAncestorsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreePartialViewAncestors']>>>\r\nexport type GetTreePartialViewChildrenResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreePartialViewChildren']>>>\r\nexport type GetTreePartialViewRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreePartialViewRoot']>>>\r\nexport type DeletePreviewResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deletePreview']>>>\r\nexport type PostPreviewResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postPreview']>>>\r\nexport type GetProfilingStatusResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getProfilingStatus']>>>\r\nexport type PutProfilingStatusResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putProfilingStatus']>>>\r\nexport type GetPropertyTypeIsUsedResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getPropertyTypeIsUsed']>>>\r\nexport type PostPublishedCacheCollectResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postPublishedCacheCollect']>>>\r\nexport type PostPublishedCacheRebuildResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postPublishedCacheRebuild']>>>\r\nexport type PostPublishedCacheReloadResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postPublishedCacheReload']>>>\r\nexport type GetPublishedCacheStatusResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getPublishedCacheStatus']>>>\r\nexport type GetRedirectManagementResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getRedirectManagement']>>>\r\nexport type GetRedirectManagementByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getRedirectManagementById']>>>\r\nexport type DeleteRedirectManagementByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteRedirectManagementById']>>>\r\nexport type GetRedirectManagementStatusResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getRedirectManagementStatus']>>>\r\nexport type PostRedirectManagementStatusResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postRedirectManagementStatus']>>>\r\nexport type GetItemRelationTypeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemRelationType']>>>\r\nexport type GetRelationTypeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getRelationType']>>>\r\nexport type GetRelationTypeByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getRelationTypeById']>>>\r\nexport type GetRelationByRelationTypeIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getRelationByRelationTypeId']>>>\r\nexport type GetItemScriptResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemScript']>>>\r\nexport type PostScriptResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postScript']>>>\r\nexport type GetScriptByPathResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getScriptByPath']>>>\r\nexport type DeleteScriptByPathResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteScriptByPath']>>>\r\nexport type PutScriptByPathResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putScriptByPath']>>>\r\nexport type PutScriptByPathRenameResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putScriptByPathRename']>>>\r\nexport type PostScriptFolderResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postScriptFolder']>>>\r\nexport type GetScriptFolderByPathResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getScriptFolderByPath']>>>\r\nexport type DeleteScriptFolderByPathResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteScriptFolderByPath']>>>\r\nexport type GetTreeScriptAncestorsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeScriptAncestors']>>>\r\nexport type GetTreeScriptChildrenResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeScriptChildren']>>>\r\nexport type GetTreeScriptRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeScriptRoot']>>>\r\nexport type GetSearcherResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getSearcher']>>>\r\nexport type GetSearcherBySearcherNameQueryResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getSearcherBySearcherNameQuery']>>>\r\nexport type GetSecurityConfigurationResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getSecurityConfiguration']>>>\r\nexport type PostSecurityForgotPasswordResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postSecurityForgotPassword']>>>\r\nexport type PostSecurityForgotPasswordResetResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postSecurityForgotPasswordReset']>>>\r\nexport type PostSecurityForgotPasswordVerifyResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postSecurityForgotPasswordVerify']>>>\r\nexport type GetSegmentResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getSegment']>>>\r\nexport type GetServerConfigurationResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getServerConfiguration']>>>\r\nexport type GetServerInformationResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getServerInformation']>>>\r\nexport type GetServerStatusResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getServerStatus']>>>\r\nexport type GetServerTroubleshootingResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getServerTroubleshooting']>>>\r\nexport type GetServerUpgradeCheckResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getServerUpgradeCheck']>>>\r\nexport type GetItemStaticFileResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemStaticFile']>>>\r\nexport type GetTreeStaticFileAncestorsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeStaticFileAncestors']>>>\r\nexport type GetTreeStaticFileChildrenResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeStaticFileChildren']>>>\r\nexport type GetTreeStaticFileRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeStaticFileRoot']>>>\r\nexport type GetItemStylesheetResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemStylesheet']>>>\r\nexport type PostStylesheetResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postStylesheet']>>>\r\nexport type GetStylesheetByPathResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getStylesheetByPath']>>>\r\nexport type DeleteStylesheetByPathResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteStylesheetByPath']>>>\r\nexport type PutStylesheetByPathResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putStylesheetByPath']>>>\r\nexport type PutStylesheetByPathRenameResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putStylesheetByPathRename']>>>\r\nexport type PostStylesheetFolderResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postStylesheetFolder']>>>\r\nexport type GetStylesheetFolderByPathResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getStylesheetFolderByPath']>>>\r\nexport type DeleteStylesheetFolderByPathResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteStylesheetFolderByPath']>>>\r\nexport type GetTreeStylesheetAncestorsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeStylesheetAncestors']>>>\r\nexport type GetTreeStylesheetChildrenResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeStylesheetChildren']>>>\r\nexport type GetTreeStylesheetRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeStylesheetRoot']>>>\r\nexport type GetTagResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTag']>>>\r\nexport type GetTelemetryResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTelemetry']>>>\r\nexport type GetTelemetryLevelResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTelemetryLevel']>>>\r\nexport type PostTelemetryLevelResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postTelemetryLevel']>>>\r\nexport type GetItemTemplateResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemTemplate']>>>\r\nexport type GetItemTemplateSearchResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemTemplateSearch']>>>\r\nexport type PostTemplateResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postTemplate']>>>\r\nexport type GetTemplateByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTemplateById']>>>\r\nexport type DeleteTemplateByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteTemplateById']>>>\r\nexport type PutTemplateByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putTemplateById']>>>\r\nexport type GetTemplateConfigurationResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTemplateConfiguration']>>>\r\nexport type PostTemplateQueryExecuteResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postTemplateQueryExecute']>>>\r\nexport type GetTemplateQuerySettingsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTemplateQuerySettings']>>>\r\nexport type GetTreeTemplateAncestorsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeTemplateAncestors']>>>\r\nexport type GetTreeTemplateChildrenResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeTemplateChildren']>>>\r\nexport type GetTreeTemplateRootResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTreeTemplateRoot']>>>\r\nexport type PostTemporaryFileResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postTemporaryFile']>>>\r\nexport type GetTemporaryFileByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTemporaryFileById']>>>\r\nexport type DeleteTemporaryFileByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteTemporaryFileById']>>>\r\nexport type GetTemporaryFileConfigurationResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getTemporaryFileConfiguration']>>>\r\nexport type PostUpgradeAuthorizeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUpgradeAuthorize']>>>\r\nexport type GetUpgradeSettingsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUpgradeSettings']>>>\r\nexport type PostUserDataResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserData']>>>\r\nexport type GetUserDataResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUserData']>>>\r\nexport type PutUserDataResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putUserData']>>>\r\nexport type GetUserDataByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUserDataById']>>>\r\nexport type GetFilterUserGroupResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getFilterUserGroup']>>>\r\nexport type GetItemUserGroupResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemUserGroup']>>>\r\nexport type DeleteUserGroupResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteUserGroup']>>>\r\nexport type PostUserGroupResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserGroup']>>>\r\nexport type GetUserGroupResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUserGroup']>>>\r\nexport type GetUserGroupByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUserGroupById']>>>\r\nexport type DeleteUserGroupByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteUserGroupById']>>>\r\nexport type PutUserGroupByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putUserGroupById']>>>\r\nexport type DeleteUserGroupByIdUsersResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteUserGroupByIdUsers']>>>\r\nexport type PostUserGroupByIdUsersResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserGroupByIdUsers']>>>\r\nexport type GetFilterUserResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getFilterUser']>>>\r\nexport type GetItemUserResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemUser']>>>\r\nexport type PostUserResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUser']>>>\r\nexport type DeleteUserResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteUser']>>>\r\nexport type GetUserResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUser']>>>\r\nexport type GetUserByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUserById']>>>\r\nexport type DeleteUserByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteUserById']>>>\r\nexport type PutUserByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putUserById']>>>\r\nexport type GetUserById2faResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUserById2fa']>>>\r\nexport type DeleteUserById2faByProviderNameResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteUserById2faByProviderName']>>>\r\nexport type GetUserByIdCalculateStartNodesResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUserByIdCalculateStartNodes']>>>\r\nexport type PostUserByIdChangePasswordResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserByIdChangePassword']>>>\r\nexport type PostUserByIdClientCredentialsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserByIdClientCredentials']>>>\r\nexport type GetUserByIdClientCredentialsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUserByIdClientCredentials']>>>\r\nexport type DeleteUserByIdClientCredentialsByClientIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteUserByIdClientCredentialsByClientId']>>>\r\nexport type PostUserByIdResetPasswordResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserByIdResetPassword']>>>\r\nexport type DeleteUserAvatarByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteUserAvatarById']>>>\r\nexport type PostUserAvatarByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserAvatarById']>>>\r\nexport type GetUserConfigurationResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUserConfiguration']>>>\r\nexport type GetUserCurrentResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUserCurrent']>>>\r\nexport type GetUserCurrent2faResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUserCurrent2fa']>>>\r\nexport type DeleteUserCurrent2faByProviderNameResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteUserCurrent2faByProviderName']>>>\r\nexport type PostUserCurrent2faByProviderNameResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserCurrent2faByProviderName']>>>\r\nexport type GetUserCurrent2faByProviderNameResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUserCurrent2faByProviderName']>>>\r\nexport type PostUserCurrentAvatarResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserCurrentAvatar']>>>\r\nexport type PostUserCurrentChangePasswordResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserCurrentChangePassword']>>>\r\nexport type GetUserCurrentConfigurationResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUserCurrentConfiguration']>>>\r\nexport type GetUserCurrentLoginProvidersResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUserCurrentLoginProviders']>>>\r\nexport type GetUserCurrentPermissionsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUserCurrentPermissions']>>>\r\nexport type GetUserCurrentPermissionsDocumentResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUserCurrentPermissionsDocument']>>>\r\nexport type GetUserCurrentPermissionsMediaResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getUserCurrentPermissionsMedia']>>>\r\nexport type PostUserDisableResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserDisable']>>>\r\nexport type PostUserEnableResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserEnable']>>>\r\nexport type PostUserInviteResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserInvite']>>>\r\nexport type PostUserInviteCreatePasswordResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserInviteCreatePassword']>>>\r\nexport type PostUserInviteResendResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserInviteResend']>>>\r\nexport type PostUserInviteVerifyResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserInviteVerify']>>>\r\nexport type PostUserSetUserGroupsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserSetUserGroups']>>>\r\nexport type PostUserUnlockResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postUserUnlock']>>>\r\nexport type GetItemWebhookResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getItemWebhook']>>>\r\nexport type GetWebhookResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getWebhook']>>>\r\nexport type PostWebhookResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['postWebhook']>>>\r\nexport type GetWebhookByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getWebhookById']>>>\r\nexport type DeleteWebhookByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['deleteWebhookById']>>>\r\nexport type PutWebhookByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['putWebhookById']>>>\r\nexport type GetWebhookByIdLogsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getWebhookByIdLogs']>>>\r\nexport type GetWebhookEventsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getWebhookEvents']>>>\r\nexport type GetWebhookLogsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getUmbracoManagementAPI>['getWebhookLogs']>>>\r\n","import { getUmbracoManagementAPI } from \"../api/umbraco/management/umbracoManagementAPI.js\";\r\n\r\nexport class UmbracoManagementClient {\r\n  private static instance: ReturnType<typeof getUmbracoManagementAPI> | null =\r\n    null;\r\n\r\n  private constructor() {}\r\n\r\n  public static getClient() {\r\n    if (this.instance === null) {\r\n      this.instance = getUmbracoManagementAPI();\r\n    }\r\n    return this.instance;\r\n  }\r\n}\r\n","import { ZodRawShape } from \"zod\";\r\nimport { ToolCallback } from \"@modelcontextprotocol/sdk/server/mcp.js\";\r\nimport { ToolDefinition } from \"../types/tool-definition.js\";\r\n\r\nexport const CreateUmbracoTool =\r\n  <Args extends undefined | ZodRawShape = any>(\r\n    name: string,\r\n    description: string,\r\n    schema: Args,\r\n    handler: ToolCallback<Args>\r\n  ): (() => ToolDefinition<Args>) =>\r\n  () => ({\r\n    name: name,\r\n    description: description,\r\n    schema: schema,\r\n    handler: handler,\r\n  });\r\n","/**\r\n * Generated by orval v7.8.0 üç∫\r\n * Do not edit manually.\r\n * Umbraco Management API\r\n * This shows all APIs available in this version of Umbraco - including all the legacy apis that are available for backward compatibility\r\n * OpenAPI spec version: Latest\r\n */\r\nimport {\r\n  z as zod\r\n} from 'zod';\r\n\r\nclass FileLike {\r\n  constructor(\r\n    public name: string,\r\n    public size: number,\r\n    public type: string\r\n  ) {}\r\n}\r\n\r\n\r\nexport const getCultureQuerySkipDefault = 0;export const getCultureQueryTakeDefault = 100;\r\n\r\nexport const getCultureQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getCultureQueryTakeDefault)\r\n})\r\n\r\nexport const getCultureResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"name\": zod.string().min(1),\r\n  \"englishName\": zod.string().min(1)\r\n}))\r\n})\r\n\r\n\r\nexport const postDataTypeBody = zod.object({\r\n  \"name\": zod.string().min(1),\r\n  \"editorAlias\": zod.string().min(1),\r\n  \"editorUiAlias\": zod.string(),\r\n  \"values\": zod.array(zod.object({\r\n  \"alias\": zod.string(),\r\n  \"value\": zod.any().nullish()\r\n})),\r\n  \"id\": zod.string().uuid().nullish(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n})\r\n\r\n\r\nexport const getDataTypeByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getDataTypeByIdResponse = zod.object({\r\n  \"name\": zod.string().min(1),\r\n  \"editorAlias\": zod.string().min(1),\r\n  \"editorUiAlias\": zod.string(),\r\n  \"values\": zod.array(zod.object({\r\n  \"alias\": zod.string(),\r\n  \"value\": zod.any().nullish()\r\n})),\r\n  \"id\": zod.string().uuid(),\r\n  \"isDeletable\": zod.boolean(),\r\n  \"canIgnoreStartNodes\": zod.boolean()\r\n})\r\n\r\n\r\nexport const deleteDataTypeByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const putDataTypeByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putDataTypeByIdBody = zod.object({\r\n  \"name\": zod.string().min(1),\r\n  \"editorAlias\": zod.string().min(1),\r\n  \"editorUiAlias\": zod.string(),\r\n  \"values\": zod.array(zod.object({\r\n  \"alias\": zod.string(),\r\n  \"value\": zod.any().nullish()\r\n}))\r\n})\r\n\r\n\r\nexport const postDataTypeByIdCopyParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const postDataTypeByIdCopyBody = zod.object({\r\n  \"target\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n})\r\n\r\n\r\nexport const getDataTypeByIdIsUsedParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getDataTypeByIdIsUsedResponse = zod.boolean()\r\n\r\n\r\nexport const putDataTypeByIdMoveParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putDataTypeByIdMoveBody = zod.object({\r\n  \"target\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n})\r\n\r\n\r\nexport const getDataTypeByIdReferencesParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getDataTypeByIdReferencesResponseItem = zod.object({\r\n  \"contentType\": zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"type\": zod.string().nullable(),\r\n  \"name\": zod.string().nullable(),\r\n  \"icon\": zod.string().nullable()\r\n}),\r\n  \"properties\": zod.array(zod.object({\r\n  \"name\": zod.string(),\r\n  \"alias\": zod.string()\r\n}))\r\n})\r\nexport const getDataTypeByIdReferencesResponse = zod.array(getDataTypeByIdReferencesResponseItem)\r\n\r\n\r\nexport const getDataTypeConfigurationResponse = zod.object({\r\n  \"canBeChanged\": zod.enum(['True', 'False', 'FalseWithHelpText']),\r\n  \"documentListViewId\": zod.string().uuid(),\r\n  \"mediaListViewId\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const postDataTypeFolderBody = zod.object({\r\n  \"name\": zod.string().min(1),\r\n  \"id\": zod.string().uuid().nullish(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n})\r\n\r\n\r\nexport const getDataTypeFolderByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getDataTypeFolderByIdResponse = zod.object({\r\n  \"name\": zod.string().min(1),\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const deleteDataTypeFolderByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const putDataTypeFolderByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putDataTypeFolderByIdBody = zod.object({\r\n  \"name\": zod.string().min(1)\r\n})\r\n\r\n\r\nexport const getFilterDataTypeQuerySkipDefault = 0;export const getFilterDataTypeQueryTakeDefault = 100;export const getFilterDataTypeQueryNameDefault = \"\";\r\n\r\nexport const getFilterDataTypeQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getFilterDataTypeQueryTakeDefault),\r\n  \"name\": zod.string().optional(),\r\n  \"editorUiAlias\": zod.string().optional(),\r\n  \"editorAlias\": zod.string().optional()\r\n})\r\n\r\nexport const getFilterDataTypeResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string(),\r\n  \"editorUiAlias\": zod.string().nullish(),\r\n  \"editorAlias\": zod.string(),\r\n  \"isDeletable\": zod.boolean()\r\n}))\r\n})\r\n\r\n\r\nexport const getItemDataTypeQueryParams = zod.object({\r\n  \"id\": zod.array(zod.string().uuid()).optional()\r\n})\r\n\r\nexport const getItemDataTypeResponseItem = zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string(),\r\n  \"editorUiAlias\": zod.string().nullish(),\r\n  \"editorAlias\": zod.string(),\r\n  \"isDeletable\": zod.boolean()\r\n})\r\nexport const getItemDataTypeResponse = zod.array(getItemDataTypeResponseItem)\r\n\r\n\r\nexport const getItemDataTypeSearchQuerySkipDefault = 0;export const getItemDataTypeSearchQueryTakeDefault = 100;\r\n\r\nexport const getItemDataTypeSearchQueryParams = zod.object({\r\n  \"query\": zod.string().optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getItemDataTypeSearchQueryTakeDefault)\r\n})\r\n\r\nexport const getItemDataTypeSearchResponse = zod.object({\r\n  \"items\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string(),\r\n  \"editorUiAlias\": zod.string().nullish(),\r\n  \"editorAlias\": zod.string(),\r\n  \"isDeletable\": zod.boolean()\r\n})),\r\n  \"total\": zod.number()\r\n})\r\n\r\n\r\nexport const getTreeDataTypeAncestorsQueryParams = zod.object({\r\n  \"descendantId\": zod.string().uuid().optional()\r\n})\r\n\r\nexport const getTreeDataTypeAncestorsResponseItem = zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"id\": zod.string().uuid(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"name\": zod.string(),\r\n  \"isFolder\": zod.boolean(),\r\n  \"editorUiAlias\": zod.string().nullish(),\r\n  \"isDeletable\": zod.boolean()\r\n})\r\nexport const getTreeDataTypeAncestorsResponse = zod.array(getTreeDataTypeAncestorsResponseItem)\r\n\r\n\r\nexport const getTreeDataTypeChildrenQuerySkipDefault = 0;export const getTreeDataTypeChildrenQueryTakeDefault = 100;export const getTreeDataTypeChildrenQueryFoldersOnlyDefault = false;\r\n\r\nexport const getTreeDataTypeChildrenQueryParams = zod.object({\r\n  \"parentId\": zod.string().uuid().optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getTreeDataTypeChildrenQueryTakeDefault),\r\n  \"foldersOnly\": zod.boolean().optional()\r\n})\r\n\r\nexport const getTreeDataTypeChildrenResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"id\": zod.string().uuid(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"name\": zod.string(),\r\n  \"isFolder\": zod.boolean(),\r\n  \"editorUiAlias\": zod.string().nullish(),\r\n  \"isDeletable\": zod.boolean()\r\n}))\r\n})\r\n\r\n\r\nexport const getTreeDataTypeRootQuerySkipDefault = 0;export const getTreeDataTypeRootQueryTakeDefault = 100;export const getTreeDataTypeRootQueryFoldersOnlyDefault = false;\r\n\r\nexport const getTreeDataTypeRootQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getTreeDataTypeRootQueryTakeDefault),\r\n  \"foldersOnly\": zod.boolean().optional()\r\n})\r\n\r\nexport const getTreeDataTypeRootResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"id\": zod.string().uuid(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"name\": zod.string(),\r\n  \"isFolder\": zod.boolean(),\r\n  \"editorUiAlias\": zod.string().nullish(),\r\n  \"isDeletable\": zod.boolean()\r\n}))\r\n})\r\n\r\n\r\nexport const getDictionaryQuerySkipDefault = 0;export const getDictionaryQueryTakeDefault = 100;\r\n\r\nexport const getDictionaryQueryParams = zod.object({\r\n  \"filter\": zod.string().optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getDictionaryQueryTakeDefault)\r\n})\r\n\r\nexport const getDictionaryResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"name\": zod.string().nullish(),\r\n  \"id\": zod.string().uuid(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"translatedIsoCodes\": zod.array(zod.string())\r\n}))\r\n})\r\n\r\n\r\nexport const postDictionaryBody = zod.object({\r\n  \"name\": zod.string().min(1),\r\n  \"translations\": zod.array(zod.object({\r\n  \"isoCode\": zod.string().min(1),\r\n  \"translation\": zod.string().min(1)\r\n})),\r\n  \"id\": zod.string().uuid().nullish(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n})\r\n\r\n\r\nexport const getDictionaryByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getDictionaryByIdResponse = zod.object({\r\n  \"name\": zod.string().min(1),\r\n  \"translations\": zod.array(zod.object({\r\n  \"isoCode\": zod.string().min(1),\r\n  \"translation\": zod.string().min(1)\r\n})),\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const deleteDictionaryByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const putDictionaryByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putDictionaryByIdBody = zod.object({\r\n  \"name\": zod.string().min(1),\r\n  \"translations\": zod.array(zod.object({\r\n  \"isoCode\": zod.string().min(1),\r\n  \"translation\": zod.string().min(1)\r\n}))\r\n})\r\n\r\n\r\nexport const getDictionaryByIdExportParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getDictionaryByIdExportQueryIncludeChildrenDefault = false;\r\n\r\nexport const getDictionaryByIdExportQueryParams = zod.object({\r\n  \"includeChildren\": zod.boolean().optional()\r\n})\r\n\r\nexport const getDictionaryByIdExportResponse = zod.instanceof(FileLike)\r\n\r\n\r\nexport const putDictionaryByIdMoveParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putDictionaryByIdMoveBody = zod.object({\r\n  \"target\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n})\r\n\r\n\r\nexport const postDictionaryImportBody = zod.object({\r\n  \"temporaryFile\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n})\r\n\r\n\r\nexport const getItemDictionaryQueryParams = zod.object({\r\n  \"id\": zod.array(zod.string().uuid()).optional()\r\n})\r\n\r\nexport const getItemDictionaryResponseItem = zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string()\r\n})\r\nexport const getItemDictionaryResponse = zod.array(getItemDictionaryResponseItem)\r\n\r\n\r\nexport const getTreeDictionaryAncestorsQueryParams = zod.object({\r\n  \"descendantId\": zod.string().uuid().optional()\r\n})\r\n\r\nexport const getTreeDictionaryAncestorsResponseItem = zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"id\": zod.string().uuid(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"name\": zod.string()\r\n})\r\nexport const getTreeDictionaryAncestorsResponse = zod.array(getTreeDictionaryAncestorsResponseItem)\r\n\r\n\r\nexport const getTreeDictionaryChildrenQuerySkipDefault = 0;export const getTreeDictionaryChildrenQueryTakeDefault = 100;\r\n\r\nexport const getTreeDictionaryChildrenQueryParams = zod.object({\r\n  \"parentId\": zod.string().uuid().optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getTreeDictionaryChildrenQueryTakeDefault)\r\n})\r\n\r\nexport const getTreeDictionaryChildrenResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"id\": zod.string().uuid(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"name\": zod.string()\r\n}))\r\n})\r\n\r\n\r\nexport const getTreeDictionaryRootQuerySkipDefault = 0;export const getTreeDictionaryRootQueryTakeDefault = 100;\r\n\r\nexport const getTreeDictionaryRootQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getTreeDictionaryRootQueryTakeDefault)\r\n})\r\n\r\nexport const getTreeDictionaryRootResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"id\": zod.string().uuid(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"name\": zod.string()\r\n}))\r\n})\r\n\r\n\r\nexport const postDocumentBlueprintBody = zod.object({\r\n  \"values\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"alias\": zod.string().min(1),\r\n  \"value\": zod.any().nullish()\r\n})),\r\n  \"variants\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"name\": zod.string().min(1)\r\n})),\r\n  \"id\": zod.string().uuid().nullish(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"documentType\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n})\r\n\r\n\r\nexport const getDocumentBlueprintByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getDocumentBlueprintByIdResponse = zod.object({\r\n  \"values\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"alias\": zod.string().min(1),\r\n  \"value\": zod.any().nullish(),\r\n  \"editorAlias\": zod.string().min(1)\r\n})),\r\n  \"variants\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"name\": zod.string().min(1),\r\n  \"createDate\": zod.string().datetime({\"local\":true}),\r\n  \"updateDate\": zod.string().datetime({\"local\":true}),\r\n  \"state\": zod.enum(['NotCreated', 'Draft', 'Published', 'PublishedPendingChanges']),\r\n  \"publishDate\": zod.string().datetime({\"local\":true}).nullish(),\r\n  \"scheduledPublishDate\": zod.string().datetime({\"local\":true}).nullish(),\r\n  \"scheduledUnpublishDate\": zod.string().datetime({\"local\":true}).nullish()\r\n})),\r\n  \"id\": zod.string().uuid(),\r\n  \"documentType\": zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"icon\": zod.string(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n})\r\n})\r\n\r\n\r\nexport const deleteDocumentBlueprintByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const putDocumentBlueprintByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putDocumentBlueprintByIdBody = zod.object({\r\n  \"values\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"alias\": zod.string().min(1),\r\n  \"value\": zod.any().nullish()\r\n})),\r\n  \"variants\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"name\": zod.string().min(1)\r\n}))\r\n})\r\n\r\n\r\nexport const putDocumentBlueprintByIdMoveParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putDocumentBlueprintByIdMoveBody = zod.object({\r\n  \"target\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n})\r\n\r\n\r\nexport const postDocumentBlueprintFolderBody = zod.object({\r\n  \"name\": zod.string().min(1),\r\n  \"id\": zod.string().uuid().nullish(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n})\r\n\r\n\r\nexport const getDocumentBlueprintFolderByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getDocumentBlueprintFolderByIdResponse = zod.object({\r\n  \"name\": zod.string().min(1),\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const deleteDocumentBlueprintFolderByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const putDocumentBlueprintFolderByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putDocumentBlueprintFolderByIdBody = zod.object({\r\n  \"name\": zod.string().min(1)\r\n})\r\n\r\n\r\nexport const postDocumentBlueprintFromDocumentBody = zod.object({\r\n  \"document\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"id\": zod.string().uuid().nullish(),\r\n  \"name\": zod.string(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n})\r\n\r\n\r\nexport const getItemDocumentBlueprintQueryParams = zod.object({\r\n  \"id\": zod.array(zod.string().uuid()).optional()\r\n})\r\n\r\nexport const getItemDocumentBlueprintResponseItem = zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string(),\r\n  \"documentType\": zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"icon\": zod.string(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n})\r\n})\r\nexport const getItemDocumentBlueprintResponse = zod.array(getItemDocumentBlueprintResponseItem)\r\n\r\n\r\nexport const getTreeDocumentBlueprintAncestorsQueryParams = zod.object({\r\n  \"descendantId\": zod.string().uuid().optional()\r\n})\r\n\r\nexport const getTreeDocumentBlueprintAncestorsResponseItem = zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"id\": zod.string().uuid(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"name\": zod.string(),\r\n  \"isFolder\": zod.boolean(),\r\n  \"documentType\": zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"icon\": zod.string(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n}).nullish()\r\n})\r\nexport const getTreeDocumentBlueprintAncestorsResponse = zod.array(getTreeDocumentBlueprintAncestorsResponseItem)\r\n\r\n\r\nexport const getTreeDocumentBlueprintChildrenQuerySkipDefault = 0;export const getTreeDocumentBlueprintChildrenQueryTakeDefault = 100;export const getTreeDocumentBlueprintChildrenQueryFoldersOnlyDefault = false;\r\n\r\nexport const getTreeDocumentBlueprintChildrenQueryParams = zod.object({\r\n  \"parentId\": zod.string().uuid().optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getTreeDocumentBlueprintChildrenQueryTakeDefault),\r\n  \"foldersOnly\": zod.boolean().optional()\r\n})\r\n\r\nexport const getTreeDocumentBlueprintChildrenResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"id\": zod.string().uuid(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"name\": zod.string(),\r\n  \"isFolder\": zod.boolean(),\r\n  \"documentType\": zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"icon\": zod.string(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n}).nullish()\r\n}))\r\n})\r\n\r\n\r\nexport const getTreeDocumentBlueprintRootQuerySkipDefault = 0;export const getTreeDocumentBlueprintRootQueryTakeDefault = 100;export const getTreeDocumentBlueprintRootQueryFoldersOnlyDefault = false;\r\n\r\nexport const getTreeDocumentBlueprintRootQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getTreeDocumentBlueprintRootQueryTakeDefault),\r\n  \"foldersOnly\": zod.boolean().optional()\r\n})\r\n\r\nexport const getTreeDocumentBlueprintRootResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"id\": zod.string().uuid(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"name\": zod.string(),\r\n  \"isFolder\": zod.boolean(),\r\n  \"documentType\": zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"icon\": zod.string(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n}).nullish()\r\n}))\r\n})\r\n\r\n\r\nexport const postDocumentTypeBody = zod.object({\r\n  \"alias\": zod.string().min(1),\r\n  \"name\": zod.string().min(1),\r\n  \"description\": zod.string().nullish(),\r\n  \"icon\": zod.string().min(1),\r\n  \"allowedAsRoot\": zod.boolean(),\r\n  \"variesByCulture\": zod.boolean(),\r\n  \"variesBySegment\": zod.boolean(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"isElement\": zod.boolean(),\r\n  \"properties\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"container\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"sortOrder\": zod.number(),\r\n  \"alias\": zod.string().min(1),\r\n  \"name\": zod.string().min(1),\r\n  \"description\": zod.string().nullish(),\r\n  \"dataType\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"variesByCulture\": zod.boolean(),\r\n  \"variesBySegment\": zod.boolean(),\r\n  \"validation\": zod.object({\r\n  \"mandatory\": zod.boolean(),\r\n  \"mandatoryMessage\": zod.string().nullish(),\r\n  \"regEx\": zod.string().nullish(),\r\n  \"regExMessage\": zod.string().nullish()\r\n}),\r\n  \"appearance\": zod.object({\r\n  \"labelOnTop\": zod.boolean()\r\n})\r\n})),\r\n  \"containers\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"name\": zod.string().nullish(),\r\n  \"type\": zod.string().min(1),\r\n  \"sortOrder\": zod.number()\r\n})),\r\n  \"id\": zod.string().uuid().nullish(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"allowedTemplates\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid()\r\n})),\r\n  \"defaultTemplate\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"cleanup\": zod.object({\r\n  \"preventCleanup\": zod.boolean(),\r\n  \"keepAllVersionsNewerThanDays\": zod.number().nullish(),\r\n  \"keepLatestVersionPerDayForDays\": zod.number().nullish()\r\n}),\r\n  \"allowedDocumentTypes\": zod.array(zod.object({\r\n  \"documentType\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"sortOrder\": zod.number()\r\n})),\r\n  \"compositions\": zod.array(zod.object({\r\n  \"documentType\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"compositionType\": zod.enum(['Composition', 'Inheritance'])\r\n}))\r\n})\r\n\r\n\r\nexport const getDocumentTypeByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getDocumentTypeByIdResponse = zod.object({\r\n  \"alias\": zod.string().min(1),\r\n  \"name\": zod.string().min(1),\r\n  \"description\": zod.string().nullish(),\r\n  \"icon\": zod.string().min(1),\r\n  \"allowedAsRoot\": zod.boolean(),\r\n  \"variesByCulture\": zod.boolean(),\r\n  \"variesBySegment\": zod.boolean(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"isElement\": zod.boolean(),\r\n  \"properties\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"container\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"sortOrder\": zod.number(),\r\n  \"alias\": zod.string().min(1),\r\n  \"name\": zod.string().min(1),\r\n  \"description\": zod.string().nullish(),\r\n  \"dataType\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"variesByCulture\": zod.boolean(),\r\n  \"variesBySegment\": zod.boolean(),\r\n  \"validation\": zod.object({\r\n  \"mandatory\": zod.boolean(),\r\n  \"mandatoryMessage\": zod.string().nullish(),\r\n  \"regEx\": zod.string().nullish(),\r\n  \"regExMessage\": zod.string().nullish()\r\n}),\r\n  \"appearance\": zod.object({\r\n  \"labelOnTop\": zod.boolean()\r\n})\r\n})),\r\n  \"containers\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"name\": zod.string().nullish(),\r\n  \"type\": zod.string().min(1),\r\n  \"sortOrder\": zod.number()\r\n})),\r\n  \"id\": zod.string().uuid(),\r\n  \"allowedTemplates\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid()\r\n})),\r\n  \"defaultTemplate\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"cleanup\": zod.object({\r\n  \"preventCleanup\": zod.boolean(),\r\n  \"keepAllVersionsNewerThanDays\": zod.number().nullish(),\r\n  \"keepLatestVersionPerDayForDays\": zod.number().nullish()\r\n}),\r\n  \"allowedDocumentTypes\": zod.array(zod.object({\r\n  \"documentType\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"sortOrder\": zod.number()\r\n})),\r\n  \"compositions\": zod.array(zod.object({\r\n  \"documentType\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"compositionType\": zod.enum(['Composition', 'Inheritance'])\r\n}))\r\n})\r\n\r\n\r\nexport const deleteDocumentTypeByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const putDocumentTypeByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putDocumentTypeByIdBody = zod.object({\r\n  \"alias\": zod.string().min(1),\r\n  \"name\": zod.string().min(1),\r\n  \"description\": zod.string().nullish(),\r\n  \"icon\": zod.string().min(1),\r\n  \"allowedAsRoot\": zod.boolean(),\r\n  \"variesByCulture\": zod.boolean(),\r\n  \"variesBySegment\": zod.boolean(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"isElement\": zod.boolean(),\r\n  \"properties\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"container\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"sortOrder\": zod.number(),\r\n  \"alias\": zod.string().min(1),\r\n  \"name\": zod.string().min(1),\r\n  \"description\": zod.string().nullish(),\r\n  \"dataType\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"variesByCulture\": zod.boolean(),\r\n  \"variesBySegment\": zod.boolean(),\r\n  \"validation\": zod.object({\r\n  \"mandatory\": zod.boolean(),\r\n  \"mandatoryMessage\": zod.string().nullish(),\r\n  \"regEx\": zod.string().nullish(),\r\n  \"regExMessage\": zod.string().nullish()\r\n}),\r\n  \"appearance\": zod.object({\r\n  \"labelOnTop\": zod.boolean()\r\n})\r\n})),\r\n  \"containers\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"name\": zod.string().nullish(),\r\n  \"type\": zod.string().min(1),\r\n  \"sortOrder\": zod.number()\r\n})),\r\n  \"allowedTemplates\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid()\r\n})),\r\n  \"defaultTemplate\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"cleanup\": zod.object({\r\n  \"preventCleanup\": zod.boolean(),\r\n  \"keepAllVersionsNewerThanDays\": zod.number().nullish(),\r\n  \"keepLatestVersionPerDayForDays\": zod.number().nullish()\r\n}),\r\n  \"allowedDocumentTypes\": zod.array(zod.object({\r\n  \"documentType\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"sortOrder\": zod.number()\r\n})),\r\n  \"compositions\": zod.array(zod.object({\r\n  \"documentType\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"compositionType\": zod.enum(['Composition', 'Inheritance'])\r\n}))\r\n})\r\n\r\n\r\nexport const getDocumentTypeByIdAllowedChildrenParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getDocumentTypeByIdAllowedChildrenQuerySkipDefault = 0;export const getDocumentTypeByIdAllowedChildrenQueryTakeDefault = 100;\r\n\r\nexport const getDocumentTypeByIdAllowedChildrenQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getDocumentTypeByIdAllowedChildrenQueryTakeDefault)\r\n})\r\n\r\nexport const getDocumentTypeByIdAllowedChildrenResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string(),\r\n  \"description\": zod.string().nullish(),\r\n  \"icon\": zod.string().nullish()\r\n}))\r\n})\r\n\r\n\r\nexport const getDocumentTypeByIdBlueprintParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getDocumentTypeByIdBlueprintQuerySkipDefault = 0;export const getDocumentTypeByIdBlueprintQueryTakeDefault = 100;\r\n\r\nexport const getDocumentTypeByIdBlueprintQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getDocumentTypeByIdBlueprintQueryTakeDefault)\r\n})\r\n\r\nexport const getDocumentTypeByIdBlueprintResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string()\r\n}))\r\n})\r\n\r\n\r\nexport const getDocumentTypeByIdCompositionReferencesParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getDocumentTypeByIdCompositionReferencesResponseItem = zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string(),\r\n  \"icon\": zod.string()\r\n})\r\nexport const getDocumentTypeByIdCompositionReferencesResponse = zod.array(getDocumentTypeByIdCompositionReferencesResponseItem)\r\n\r\n\r\nexport const postDocumentTypeByIdCopyParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const postDocumentTypeByIdCopyBody = zod.object({\r\n  \"target\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n})\r\n\r\n\r\nexport const getDocumentTypeByIdExportParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getDocumentTypeByIdExportResponse = zod.instanceof(FileLike)\r\n\r\n\r\nexport const putDocumentTypeByIdImportParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putDocumentTypeByIdImportBody = zod.object({\r\n  \"file\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n})\r\n\r\n\r\nexport const putDocumentTypeByIdMoveParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putDocumentTypeByIdMoveBody = zod.object({\r\n  \"target\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n})\r\n\r\n\r\nexport const getDocumentTypeAllowedAtRootQuerySkipDefault = 0;export const getDocumentTypeAllowedAtRootQueryTakeDefault = 100;\r\n\r\nexport const getDocumentTypeAllowedAtRootQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getDocumentTypeAllowedAtRootQueryTakeDefault)\r\n})\r\n\r\nexport const getDocumentTypeAllowedAtRootResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string(),\r\n  \"description\": zod.string().nullish(),\r\n  \"icon\": zod.string().nullish()\r\n}))\r\n})\r\n\r\n\r\nexport const postDocumentTypeAvailableCompositionsBody = zod.object({\r\n  \"id\": zod.string().uuid().nullish(),\r\n  \"currentPropertyAliases\": zod.array(zod.string()),\r\n  \"currentCompositeIds\": zod.array(zod.string().uuid()),\r\n  \"isElement\": zod.boolean()\r\n})\r\n\r\nexport const postDocumentTypeAvailableCompositionsResponseItem = zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string(),\r\n  \"icon\": zod.string(),\r\n  \"folderPath\": zod.array(zod.string()),\r\n  \"isCompatible\": zod.boolean()\r\n})\r\nexport const postDocumentTypeAvailableCompositionsResponse = zod.array(postDocumentTypeAvailableCompositionsResponseItem)\r\n\r\n\r\nexport const getDocumentTypeConfigurationResponse = zod.object({\r\n  \"dataTypesCanBeChanged\": zod.enum(['True', 'False', 'FalseWithHelpText']),\r\n  \"disableTemplates\": zod.boolean(),\r\n  \"useSegments\": zod.boolean(),\r\n  \"reservedFieldNames\": zod.array(zod.string())\r\n})\r\n\r\n\r\nexport const postDocumentTypeFolderBody = zod.object({\r\n  \"name\": zod.string().min(1),\r\n  \"id\": zod.string().uuid().nullish(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n})\r\n\r\n\r\nexport const getDocumentTypeFolderByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getDocumentTypeFolderByIdResponse = zod.object({\r\n  \"name\": zod.string().min(1),\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const deleteDocumentTypeFolderByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const putDocumentTypeFolderByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putDocumentTypeFolderByIdBody = zod.object({\r\n  \"name\": zod.string().min(1)\r\n})\r\n\r\n\r\nexport const postDocumentTypeImportBody = zod.object({\r\n  \"file\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n})\r\n\r\n\r\nexport const getItemDocumentTypeQueryParams = zod.object({\r\n  \"id\": zod.array(zod.string().uuid()).optional()\r\n})\r\n\r\nexport const getItemDocumentTypeResponseItem = zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string(),\r\n  \"isElement\": zod.boolean(),\r\n  \"icon\": zod.string().nullish(),\r\n  \"description\": zod.string().nullish()\r\n})\r\nexport const getItemDocumentTypeResponse = zod.array(getItemDocumentTypeResponseItem)\r\n\r\n\r\nexport const getItemDocumentTypeSearchQuerySkipDefault = 0;export const getItemDocumentTypeSearchQueryTakeDefault = 100;\r\n\r\nexport const getItemDocumentTypeSearchQueryParams = zod.object({\r\n  \"query\": zod.string().optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getItemDocumentTypeSearchQueryTakeDefault)\r\n})\r\n\r\nexport const getItemDocumentTypeSearchResponse = zod.object({\r\n  \"items\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string(),\r\n  \"isElement\": zod.boolean(),\r\n  \"icon\": zod.string().nullish(),\r\n  \"description\": zod.string().nullish()\r\n})),\r\n  \"total\": zod.number()\r\n})\r\n\r\n\r\nexport const getTreeDocumentTypeAncestorsQueryParams = zod.object({\r\n  \"descendantId\": zod.string().uuid().optional()\r\n})\r\n\r\nexport const getTreeDocumentTypeAncestorsResponseItem = zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"id\": zod.string().uuid(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"name\": zod.string(),\r\n  \"isFolder\": zod.boolean(),\r\n  \"isElement\": zod.boolean(),\r\n  \"icon\": zod.string()\r\n})\r\nexport const getTreeDocumentTypeAncestorsResponse = zod.array(getTreeDocumentTypeAncestorsResponseItem)\r\n\r\n\r\nexport const getTreeDocumentTypeChildrenQuerySkipDefault = 0;export const getTreeDocumentTypeChildrenQueryTakeDefault = 100;export const getTreeDocumentTypeChildrenQueryFoldersOnlyDefault = false;\r\n\r\nexport const getTreeDocumentTypeChildrenQueryParams = zod.object({\r\n  \"parentId\": zod.string().uuid().optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getTreeDocumentTypeChildrenQueryTakeDefault),\r\n  \"foldersOnly\": zod.boolean().optional()\r\n})\r\n\r\nexport const getTreeDocumentTypeChildrenResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"id\": zod.string().uuid(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"name\": zod.string(),\r\n  \"isFolder\": zod.boolean(),\r\n  \"isElement\": zod.boolean(),\r\n  \"icon\": zod.string()\r\n}))\r\n})\r\n\r\n\r\nexport const getTreeDocumentTypeRootQuerySkipDefault = 0;export const getTreeDocumentTypeRootQueryTakeDefault = 100;export const getTreeDocumentTypeRootQueryFoldersOnlyDefault = false;\r\n\r\nexport const getTreeDocumentTypeRootQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getTreeDocumentTypeRootQueryTakeDefault),\r\n  \"foldersOnly\": zod.boolean().optional()\r\n})\r\n\r\nexport const getTreeDocumentTypeRootResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"id\": zod.string().uuid(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"name\": zod.string(),\r\n  \"isFolder\": zod.boolean(),\r\n  \"isElement\": zod.boolean(),\r\n  \"icon\": zod.string()\r\n}))\r\n})\r\n\r\n\r\nexport const getDocumentVersionQuerySkipDefault = 0;export const getDocumentVersionQueryTakeDefault = 100;\r\n\r\nexport const getDocumentVersionQueryParams = zod.object({\r\n  \"documentId\": zod.string().uuid(),\r\n  \"culture\": zod.string().optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getDocumentVersionQueryTakeDefault)\r\n})\r\n\r\nexport const getDocumentVersionResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"document\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"documentType\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"user\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"versionDate\": zod.string().datetime({\"local\":true}),\r\n  \"isCurrentPublishedVersion\": zod.boolean(),\r\n  \"isCurrentDraftVersion\": zod.boolean(),\r\n  \"preventCleanup\": zod.boolean()\r\n}))\r\n})\r\n\r\n\r\nexport const getDocumentVersionByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getDocumentVersionByIdResponse = zod.object({\r\n  \"values\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"alias\": zod.string().min(1),\r\n  \"value\": zod.any().nullish(),\r\n  \"editorAlias\": zod.string().min(1)\r\n})),\r\n  \"variants\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"name\": zod.string().min(1),\r\n  \"createDate\": zod.string().datetime({\"local\":true}),\r\n  \"updateDate\": zod.string().datetime({\"local\":true}),\r\n  \"state\": zod.enum(['NotCreated', 'Draft', 'Published', 'PublishedPendingChanges']),\r\n  \"publishDate\": zod.string().datetime({\"local\":true}).nullish(),\r\n  \"scheduledPublishDate\": zod.string().datetime({\"local\":true}).nullish(),\r\n  \"scheduledUnpublishDate\": zod.string().datetime({\"local\":true}).nullish()\r\n})),\r\n  \"id\": zod.string().uuid(),\r\n  \"documentType\": zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"icon\": zod.string(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n}),\r\n  \"document\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n})\r\n\r\n\r\nexport const putDocumentVersionByIdPreventCleanupParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putDocumentVersionByIdPreventCleanupQueryParams = zod.object({\r\n  \"preventCleanup\": zod.boolean().optional()\r\n})\r\n\r\n\r\nexport const postDocumentVersionByIdRollbackParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const postDocumentVersionByIdRollbackQueryParams = zod.object({\r\n  \"culture\": zod.string().optional()\r\n})\r\n\r\n\r\nexport const getCollectionDocumentByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getCollectionDocumentByIdQueryOrderByDefault = \"updateDate\";export const getCollectionDocumentByIdQuerySkipDefault = 0;export const getCollectionDocumentByIdQueryTakeDefault = 100;\r\n\r\nexport const getCollectionDocumentByIdQueryParams = zod.object({\r\n  \"dataTypeId\": zod.string().uuid().optional(),\r\n  \"orderBy\": zod.string().default(getCollectionDocumentByIdQueryOrderByDefault),\r\n  \"orderCulture\": zod.string().optional(),\r\n  \"orderDirection\": zod.enum(['Ascending', 'Descending']).optional(),\r\n  \"filter\": zod.string().optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getCollectionDocumentByIdQueryTakeDefault)\r\n})\r\n\r\nexport const getCollectionDocumentByIdResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"values\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"alias\": zod.string().min(1),\r\n  \"value\": zod.any().nullish(),\r\n  \"editorAlias\": zod.string().min(1)\r\n})),\r\n  \"variants\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"name\": zod.string().min(1),\r\n  \"createDate\": zod.string().datetime({\"local\":true}),\r\n  \"updateDate\": zod.string().datetime({\"local\":true}),\r\n  \"state\": zod.enum(['NotCreated', 'Draft', 'Published', 'PublishedPendingChanges']),\r\n  \"publishDate\": zod.string().datetime({\"local\":true}).nullish(),\r\n  \"scheduledPublishDate\": zod.string().datetime({\"local\":true}).nullish(),\r\n  \"scheduledUnpublishDate\": zod.string().datetime({\"local\":true}).nullish()\r\n})),\r\n  \"id\": zod.string().uuid(),\r\n  \"creator\": zod.string().nullish(),\r\n  \"sortOrder\": zod.number(),\r\n  \"documentType\": zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"alias\": zod.string(),\r\n  \"icon\": zod.string()\r\n}),\r\n  \"isTrashed\": zod.boolean(),\r\n  \"isProtected\": zod.boolean(),\r\n  \"updater\": zod.string().nullish()\r\n}))\r\n})\r\n\r\n\r\nexport const postDocumentBody = zod.object({\r\n  \"values\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"alias\": zod.string().min(1),\r\n  \"value\": zod.any().nullish()\r\n})),\r\n  \"variants\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"name\": zod.string().min(1)\r\n})),\r\n  \"id\": zod.string().uuid().nullish(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"documentType\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"template\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullable()\r\n})\r\n\r\n\r\nexport const getDocumentByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getDocumentByIdResponse = zod.object({\r\n  \"values\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"alias\": zod.string().min(1),\r\n  \"value\": zod.any().nullish(),\r\n  \"editorAlias\": zod.string().min(1)\r\n})),\r\n  \"variants\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"name\": zod.string().min(1),\r\n  \"createDate\": zod.string().datetime({\"local\":true}),\r\n  \"updateDate\": zod.string().datetime({\"local\":true}),\r\n  \"state\": zod.enum(['NotCreated', 'Draft', 'Published', 'PublishedPendingChanges']),\r\n  \"publishDate\": zod.string().datetime({\"local\":true}).nullish(),\r\n  \"scheduledPublishDate\": zod.string().datetime({\"local\":true}).nullish(),\r\n  \"scheduledUnpublishDate\": zod.string().datetime({\"local\":true}).nullish()\r\n})),\r\n  \"id\": zod.string().uuid(),\r\n  \"documentType\": zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"icon\": zod.string(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n}),\r\n  \"urls\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullable(),\r\n  \"url\": zod.string()\r\n})),\r\n  \"template\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"isTrashed\": zod.boolean()\r\n})\r\n\r\n\r\nexport const deleteDocumentByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const putDocumentByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putDocumentByIdBody = zod.object({\r\n  \"values\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"alias\": zod.string().min(1),\r\n  \"value\": zod.any().nullish()\r\n})),\r\n  \"variants\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"name\": zod.string().min(1)\r\n})),\r\n  \"template\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n})\r\n\r\n\r\nexport const getDocumentByIdAuditLogParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getDocumentByIdAuditLogQuerySkipDefault = 0;export const getDocumentByIdAuditLogQueryTakeDefault = 100;\r\n\r\nexport const getDocumentByIdAuditLogQueryParams = zod.object({\r\n  \"orderDirection\": zod.enum(['Ascending', 'Descending']).optional(),\r\n  \"sinceDate\": zod.string().datetime({\"local\":true}).optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getDocumentByIdAuditLogQueryTakeDefault)\r\n})\r\n\r\nexport const getDocumentByIdAuditLogResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"user\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"timestamp\": zod.string().datetime({\"local\":true}),\r\n  \"logType\": zod.enum(['New', 'Save', 'SaveVariant', 'Open', 'Delete', 'Publish', 'PublishVariant', 'SendToPublish', 'SendToPublishVariant', 'Unpublish', 'UnpublishVariant', 'Move', 'Copy', 'AssignDomain', 'PublicAccess', 'Sort', 'Notify', 'System', 'RollBack', 'PackagerInstall', 'PackagerUninstall', 'Custom', 'ContentVersionPreventCleanup', 'ContentVersionEnableCleanup']),\r\n  \"comment\": zod.string().nullish(),\r\n  \"parameters\": zod.string().nullish()\r\n}))\r\n})\r\n\r\n\r\nexport const postDocumentByIdCopyParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const postDocumentByIdCopyBody = zod.object({\r\n  \"target\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"relateToOriginal\": zod.boolean(),\r\n  \"includeDescendants\": zod.boolean()\r\n})\r\n\r\n\r\nexport const getDocumentByIdDomainsParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getDocumentByIdDomainsResponse = zod.object({\r\n  \"defaultIsoCode\": zod.string().nullish(),\r\n  \"domains\": zod.array(zod.object({\r\n  \"domainName\": zod.string(),\r\n  \"isoCode\": zod.string()\r\n}))\r\n})\r\n\r\n\r\nexport const putDocumentByIdDomainsParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putDocumentByIdDomainsBody = zod.object({\r\n  \"defaultIsoCode\": zod.string().nullish(),\r\n  \"domains\": zod.array(zod.object({\r\n  \"domainName\": zod.string(),\r\n  \"isoCode\": zod.string()\r\n}))\r\n})\r\n\r\n\r\nexport const putDocumentByIdMoveParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putDocumentByIdMoveBody = zod.object({\r\n  \"target\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n})\r\n\r\n\r\nexport const putDocumentByIdMoveToRecycleBinParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const getDocumentByIdNotificationsParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getDocumentByIdNotificationsResponseItem = zod.object({\r\n  \"actionId\": zod.string(),\r\n  \"alias\": zod.string(),\r\n  \"subscribed\": zod.boolean()\r\n})\r\nexport const getDocumentByIdNotificationsResponse = zod.array(getDocumentByIdNotificationsResponseItem)\r\n\r\n\r\nexport const putDocumentByIdNotificationsParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putDocumentByIdNotificationsBody = zod.object({\r\n  \"subscribedActionIds\": zod.array(zod.string())\r\n})\r\n\r\n\r\nexport const postDocumentByIdPublicAccessParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const postDocumentByIdPublicAccessBody = zod.object({\r\n  \"loginDocument\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"errorDocument\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"memberUserNames\": zod.array(zod.string()),\r\n  \"memberGroupNames\": zod.array(zod.string())\r\n})\r\n\r\n\r\nexport const deleteDocumentByIdPublicAccessParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const getDocumentByIdPublicAccessParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getDocumentByIdPublicAccessResponse = zod.object({\r\n  \"loginDocument\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"errorDocument\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"members\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"memberType\": zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"icon\": zod.string(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n}),\r\n  \"variants\": zod.array(zod.object({\r\n  \"name\": zod.string(),\r\n  \"culture\": zod.string().nullish()\r\n})),\r\n  \"kind\": zod.enum(['Default', 'Api'])\r\n})),\r\n  \"groups\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string()\r\n}))\r\n})\r\n\r\n\r\nexport const putDocumentByIdPublicAccessParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putDocumentByIdPublicAccessBody = zod.object({\r\n  \"loginDocument\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"errorDocument\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"memberUserNames\": zod.array(zod.string()),\r\n  \"memberGroupNames\": zod.array(zod.string())\r\n})\r\n\r\n\r\nexport const putDocumentByIdPublishParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putDocumentByIdPublishBody = zod.object({\r\n  \"publishSchedules\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"schedule\": zod.object({\r\n  \"publishTime\": zod.string().datetime({\"local\":true}).nullish(),\r\n  \"unpublishTime\": zod.string().datetime({\"local\":true}).nullish()\r\n}).nullish()\r\n}))\r\n})\r\n\r\n\r\nexport const putDocumentByIdPublishWithDescendantsParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putDocumentByIdPublishWithDescendantsBody = zod.object({\r\n  \"includeUnpublishedDescendants\": zod.boolean(),\r\n  \"cultures\": zod.array(zod.string())\r\n})\r\n\r\n\r\nexport const getDocumentByIdPublishedParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getDocumentByIdPublishedResponse = zod.object({\r\n  \"values\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"alias\": zod.string().min(1),\r\n  \"value\": zod.any().nullish(),\r\n  \"editorAlias\": zod.string().min(1)\r\n})),\r\n  \"variants\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"name\": zod.string().min(1),\r\n  \"createDate\": zod.string().datetime({\"local\":true}),\r\n  \"updateDate\": zod.string().datetime({\"local\":true}),\r\n  \"state\": zod.enum(['NotCreated', 'Draft', 'Published', 'PublishedPendingChanges']),\r\n  \"publishDate\": zod.string().datetime({\"local\":true}).nullish(),\r\n  \"scheduledPublishDate\": zod.string().datetime({\"local\":true}).nullish(),\r\n  \"scheduledUnpublishDate\": zod.string().datetime({\"local\":true}).nullish()\r\n})),\r\n  \"id\": zod.string().uuid(),\r\n  \"documentType\": zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"icon\": zod.string(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n}),\r\n  \"urls\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullable(),\r\n  \"url\": zod.string()\r\n})),\r\n  \"template\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"isTrashed\": zod.boolean()\r\n})\r\n\r\n\r\nexport const getDocumentByIdReferencedByParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getDocumentByIdReferencedByQuerySkipDefault = 0;export const getDocumentByIdReferencedByQueryTakeDefault = 20;\r\n\r\nexport const getDocumentByIdReferencedByQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getDocumentByIdReferencedByQueryTakeDefault)\r\n})\r\n\r\nexport const getDocumentByIdReferencedByResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"$type\": zod.enum(['DefaultReferenceResponseModel']),\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string().nullish(),\r\n  \"type\": zod.string().nullish(),\r\n  \"icon\": zod.string().nullish()\r\n}).or(zod.object({\r\n  \"$type\": zod.enum(['DocumentReferenceResponseModel']),\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string().nullish(),\r\n  \"published\": zod.boolean().nullish(),\r\n  \"documentType\": zod.object({\r\n  \"icon\": zod.string().nullish(),\r\n  \"alias\": zod.string().nullish(),\r\n  \"name\": zod.string().nullish()\r\n})\r\n})).or(zod.object({\r\n  \"$type\": zod.enum(['MediaReferenceResponseModel']),\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string().nullish(),\r\n  \"mediaType\": zod.object({\r\n  \"icon\": zod.string().nullish(),\r\n  \"alias\": zod.string().nullish(),\r\n  \"name\": zod.string().nullish()\r\n})\r\n})))\r\n})\r\n\r\n\r\nexport const getDocumentByIdReferencedDescendantsParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getDocumentByIdReferencedDescendantsQuerySkipDefault = 0;export const getDocumentByIdReferencedDescendantsQueryTakeDefault = 20;\r\n\r\nexport const getDocumentByIdReferencedDescendantsQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getDocumentByIdReferencedDescendantsQueryTakeDefault)\r\n})\r\n\r\nexport const getDocumentByIdReferencedDescendantsResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid()\r\n}))\r\n})\r\n\r\n\r\nexport const putDocumentByIdUnpublishParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putDocumentByIdUnpublishBody = zod.object({\r\n  \"cultures\": zod.array(zod.string()).nullish()\r\n})\r\n\r\n\r\n/**\r\n * @deprecated\r\n */\r\nexport const putDocumentByIdValidateParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putDocumentByIdValidateBody = zod.object({\r\n  \"values\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"alias\": zod.string().min(1),\r\n  \"value\": zod.any().nullish()\r\n})),\r\n  \"variants\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"name\": zod.string().min(1)\r\n})),\r\n  \"template\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n})\r\n\r\n\r\nexport const putUmbracoManagementApiV11DocumentByIdValidate11Params = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putUmbracoManagementApiV11DocumentByIdValidate11Body = zod.object({\r\n  \"values\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"alias\": zod.string().min(1),\r\n  \"value\": zod.any().nullish()\r\n})),\r\n  \"variants\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"name\": zod.string().min(1)\r\n})),\r\n  \"template\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"cultures\": zod.array(zod.string()).nullish()\r\n})\r\n\r\n\r\nexport const getDocumentAreReferencedQuerySkipDefault = 0;export const getDocumentAreReferencedQueryTakeDefault = 20;\r\n\r\nexport const getDocumentAreReferencedQueryParams = zod.object({\r\n  \"id\": zod.array(zod.string().uuid()).optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getDocumentAreReferencedQueryTakeDefault)\r\n})\r\n\r\nexport const getDocumentAreReferencedResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid()\r\n}))\r\n})\r\n\r\n\r\nexport const getDocumentConfigurationResponse = zod.object({\r\n  \"disableDeleteWhenReferenced\": zod.boolean(),\r\n  \"disableUnpublishWhenReferenced\": zod.boolean(),\r\n  \"allowEditInvariantFromNonDefault\": zod.boolean(),\r\n  \"allowNonExistingSegmentsCreation\": zod.boolean(),\r\n  \"reservedFieldNames\": zod.array(zod.string())\r\n})\r\n\r\n\r\nexport const putDocumentSortBody = zod.object({\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"sorting\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"sortOrder\": zod.number()\r\n}))\r\n})\r\n\r\n\r\nexport const getDocumentUrlsQueryParams = zod.object({\r\n  \"id\": zod.array(zod.string().uuid()).optional()\r\n})\r\n\r\nexport const getDocumentUrlsResponseItem = zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"urlInfos\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullable(),\r\n  \"url\": zod.string()\r\n}))\r\n})\r\nexport const getDocumentUrlsResponse = zod.array(getDocumentUrlsResponseItem)\r\n\r\n\r\nexport const postDocumentValidateBody = zod.object({\r\n  \"values\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"alias\": zod.string().min(1),\r\n  \"value\": zod.any().nullish()\r\n})),\r\n  \"variants\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"name\": zod.string().min(1)\r\n})),\r\n  \"id\": zod.string().uuid().nullish(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"documentType\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"template\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullable()\r\n})\r\n\r\n\r\nexport const getItemDocumentQueryParams = zod.object({\r\n  \"id\": zod.array(zod.string().uuid()).optional()\r\n})\r\n\r\nexport const getItemDocumentResponseItem = zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"isTrashed\": zod.boolean(),\r\n  \"isProtected\": zod.boolean(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"hasChildren\": zod.boolean(),\r\n  \"documentType\": zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"icon\": zod.string(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n}),\r\n  \"variants\": zod.array(zod.object({\r\n  \"name\": zod.string(),\r\n  \"culture\": zod.string().nullish(),\r\n  \"state\": zod.enum(['NotCreated', 'Draft', 'Published', 'PublishedPendingChanges'])\r\n}))\r\n})\r\nexport const getItemDocumentResponse = zod.array(getItemDocumentResponseItem)\r\n\r\n\r\nexport const getItemDocumentSearchQuerySkipDefault = 0;export const getItemDocumentSearchQueryTakeDefault = 100;\r\n\r\nexport const getItemDocumentSearchQueryParams = zod.object({\r\n  \"query\": zod.string().optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getItemDocumentSearchQueryTakeDefault),\r\n  \"parentId\": zod.string().uuid().optional(),\r\n  \"allowedDocumentTypes\": zod.array(zod.string().uuid()).optional()\r\n})\r\n\r\nexport const getItemDocumentSearchResponse = zod.object({\r\n  \"items\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"isTrashed\": zod.boolean(),\r\n  \"isProtected\": zod.boolean(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"hasChildren\": zod.boolean(),\r\n  \"documentType\": zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"icon\": zod.string(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n}),\r\n  \"variants\": zod.array(zod.object({\r\n  \"name\": zod.string(),\r\n  \"culture\": zod.string().nullish(),\r\n  \"state\": zod.enum(['NotCreated', 'Draft', 'Published', 'PublishedPendingChanges'])\r\n}))\r\n})),\r\n  \"total\": zod.number()\r\n})\r\n\r\n\r\nexport const deleteRecycleBinDocumentByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const getRecycleBinDocumentByIdOriginalParentParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getRecycleBinDocumentByIdOriginalParentResponse = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const putRecycleBinDocumentByIdRestoreParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putRecycleBinDocumentByIdRestoreBody = zod.object({\r\n  \"target\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n})\r\n\r\n\r\nexport const getRecycleBinDocumentChildrenQuerySkipDefault = 0;export const getRecycleBinDocumentChildrenQueryTakeDefault = 100;\r\n\r\nexport const getRecycleBinDocumentChildrenQueryParams = zod.object({\r\n  \"parentId\": zod.string().uuid().optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getRecycleBinDocumentChildrenQueryTakeDefault)\r\n})\r\n\r\nexport const getRecycleBinDocumentChildrenResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"createDate\": zod.string().datetime({\"local\":true}),\r\n  \"hasChildren\": zod.boolean(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"documentType\": zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"icon\": zod.string(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n}),\r\n  \"variants\": zod.array(zod.object({\r\n  \"name\": zod.string(),\r\n  \"culture\": zod.string().nullish(),\r\n  \"state\": zod.enum(['NotCreated', 'Draft', 'Published', 'PublishedPendingChanges'])\r\n}))\r\n}))\r\n})\r\n\r\n\r\nexport const getRecycleBinDocumentRootQuerySkipDefault = 0;export const getRecycleBinDocumentRootQueryTakeDefault = 100;\r\n\r\nexport const getRecycleBinDocumentRootQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getRecycleBinDocumentRootQueryTakeDefault)\r\n})\r\n\r\nexport const getRecycleBinDocumentRootResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"createDate\": zod.string().datetime({\"local\":true}),\r\n  \"hasChildren\": zod.boolean(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"documentType\": zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"icon\": zod.string(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n}),\r\n  \"variants\": zod.array(zod.object({\r\n  \"name\": zod.string(),\r\n  \"culture\": zod.string().nullish(),\r\n  \"state\": zod.enum(['NotCreated', 'Draft', 'Published', 'PublishedPendingChanges'])\r\n}))\r\n}))\r\n})\r\n\r\n\r\nexport const getTreeDocumentAncestorsQueryParams = zod.object({\r\n  \"descendantId\": zod.string().uuid().optional()\r\n})\r\n\r\nexport const getTreeDocumentAncestorsResponseItem = zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"noAccess\": zod.boolean(),\r\n  \"isTrashed\": zod.boolean(),\r\n  \"id\": zod.string().uuid(),\r\n  \"createDate\": zod.string().datetime({\"local\":true}),\r\n  \"isProtected\": zod.boolean(),\r\n  \"documentType\": zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"icon\": zod.string(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n}),\r\n  \"variants\": zod.array(zod.object({\r\n  \"name\": zod.string(),\r\n  \"culture\": zod.string().nullish(),\r\n  \"state\": zod.enum(['NotCreated', 'Draft', 'Published', 'PublishedPendingChanges'])\r\n}))\r\n})\r\nexport const getTreeDocumentAncestorsResponse = zod.array(getTreeDocumentAncestorsResponseItem)\r\n\r\n\r\nexport const getTreeDocumentChildrenQuerySkipDefault = 0;export const getTreeDocumentChildrenQueryTakeDefault = 100;\r\n\r\nexport const getTreeDocumentChildrenQueryParams = zod.object({\r\n  \"parentId\": zod.string().uuid().optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getTreeDocumentChildrenQueryTakeDefault),\r\n  \"dataTypeId\": zod.string().uuid().optional()\r\n})\r\n\r\nexport const getTreeDocumentChildrenResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"noAccess\": zod.boolean(),\r\n  \"isTrashed\": zod.boolean(),\r\n  \"id\": zod.string().uuid(),\r\n  \"createDate\": zod.string().datetime({\"local\":true}),\r\n  \"isProtected\": zod.boolean(),\r\n  \"documentType\": zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"icon\": zod.string(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n}),\r\n  \"variants\": zod.array(zod.object({\r\n  \"name\": zod.string(),\r\n  \"culture\": zod.string().nullish(),\r\n  \"state\": zod.enum(['NotCreated', 'Draft', 'Published', 'PublishedPendingChanges'])\r\n}))\r\n}))\r\n})\r\n\r\n\r\nexport const getTreeDocumentRootQuerySkipDefault = 0;export const getTreeDocumentRootQueryTakeDefault = 100;\r\n\r\nexport const getTreeDocumentRootQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getTreeDocumentRootQueryTakeDefault),\r\n  \"dataTypeId\": zod.string().uuid().optional()\r\n})\r\n\r\nexport const getTreeDocumentRootResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"noAccess\": zod.boolean(),\r\n  \"isTrashed\": zod.boolean(),\r\n  \"id\": zod.string().uuid(),\r\n  \"createDate\": zod.string().datetime({\"local\":true}),\r\n  \"isProtected\": zod.boolean(),\r\n  \"documentType\": zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"icon\": zod.string(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n}),\r\n  \"variants\": zod.array(zod.object({\r\n  \"name\": zod.string(),\r\n  \"culture\": zod.string().nullish(),\r\n  \"state\": zod.enum(['NotCreated', 'Draft', 'Published', 'PublishedPendingChanges'])\r\n}))\r\n}))\r\n})\r\n\r\n\r\nexport const postDynamicRootQueryBody = zod.object({\r\n  \"context\": zod.object({\r\n  \"id\": zod.string().uuid().nullish(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish()\r\n}),\r\n  \"query\": zod.object({\r\n  \"origin\": zod.object({\r\n  \"alias\": zod.string(),\r\n  \"id\": zod.string().uuid().nullish()\r\n}),\r\n  \"steps\": zod.array(zod.object({\r\n  \"alias\": zod.string(),\r\n  \"documentTypeIds\": zod.array(zod.string().uuid())\r\n}))\r\n})\r\n})\r\n\r\nexport const postDynamicRootQueryResponse = zod.object({\r\n  \"roots\": zod.array(zod.string().uuid())\r\n})\r\n\r\n\r\nexport const getDynamicRootStepsResponseItem = zod.string()\r\nexport const getDynamicRootStepsResponse = zod.array(getDynamicRootStepsResponseItem)\r\n\r\n\r\nexport const getHealthCheckGroupQuerySkipDefault = 0;export const getHealthCheckGroupQueryTakeDefault = 100;\r\n\r\nexport const getHealthCheckGroupQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getHealthCheckGroupQueryTakeDefault)\r\n})\r\n\r\nexport const getHealthCheckGroupResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"name\": zod.string()\r\n}))\r\n})\r\n\r\n\r\nexport const getHealthCheckGroupByNameParams = zod.object({\r\n  \"name\": zod.string()\r\n})\r\n\r\nexport const getHealthCheckGroupByNameResponse = zod.object({\r\n  \"name\": zod.string(),\r\n  \"checks\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string(),\r\n  \"description\": zod.string().nullish()\r\n}))\r\n})\r\n\r\n\r\nexport const postHealthCheckGroupByNameCheckParams = zod.object({\r\n  \"name\": zod.string()\r\n})\r\n\r\nexport const postHealthCheckGroupByNameCheckResponse = zod.object({\r\n  \"checks\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"results\": zod.array(zod.object({\r\n  \"message\": zod.string(),\r\n  \"resultType\": zod.enum(['Success', 'Warning', 'Error', 'Info']),\r\n  \"actions\": zod.array(zod.object({\r\n  \"healthCheck\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"alias\": zod.string().nullish(),\r\n  \"name\": zod.string().nullish(),\r\n  \"description\": zod.string().nullish(),\r\n  \"valueRequired\": zod.boolean(),\r\n  \"providedValue\": zod.string().nullish(),\r\n  \"providedValueValidation\": zod.string().nullish(),\r\n  \"providedValueValidationRegex\": zod.string().nullish(),\r\n  \"actionParameters\": zod.record(zod.string(), zod.any()).nullish()\r\n})).nullish(),\r\n  \"readMoreLink\": zod.string().nullish()\r\n})).nullish()\r\n}))\r\n})\r\n\r\n\r\nexport const postHealthCheckExecuteActionBody = zod.object({\r\n  \"healthCheck\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"alias\": zod.string().nullish(),\r\n  \"name\": zod.string().nullish(),\r\n  \"description\": zod.string().nullish(),\r\n  \"valueRequired\": zod.boolean(),\r\n  \"providedValue\": zod.string().nullish(),\r\n  \"providedValueValidation\": zod.string().nullish(),\r\n  \"providedValueValidationRegex\": zod.string().nullish(),\r\n  \"actionParameters\": zod.record(zod.string(), zod.any()).nullish()\r\n})\r\n\r\nexport const postHealthCheckExecuteActionResponse = zod.object({\r\n  \"message\": zod.string(),\r\n  \"resultType\": zod.enum(['Success', 'Warning', 'Error', 'Info']),\r\n  \"actions\": zod.array(zod.object({\r\n  \"healthCheck\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"alias\": zod.string().nullish(),\r\n  \"name\": zod.string().nullish(),\r\n  \"description\": zod.string().nullish(),\r\n  \"valueRequired\": zod.boolean(),\r\n  \"providedValue\": zod.string().nullish(),\r\n  \"providedValueValidation\": zod.string().nullish(),\r\n  \"providedValueValidationRegex\": zod.string().nullish(),\r\n  \"actionParameters\": zod.record(zod.string(), zod.any()).nullish()\r\n})).nullish(),\r\n  \"readMoreLink\": zod.string().nullish()\r\n})\r\n\r\n\r\nexport const getHelpQuerySkipDefault = 0;export const getHelpQueryTakeDefault = 100;export const getHelpQueryBaseUrlDefault = \"https://our.umbraco.com\";\r\n\r\nexport const getHelpQueryParams = zod.object({\r\n  \"section\": zod.string().optional(),\r\n  \"tree\": zod.string().optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getHelpQueryTakeDefault),\r\n  \"baseUrl\": zod.string().default(getHelpQueryBaseUrlDefault)\r\n})\r\n\r\nexport const getHelpResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"name\": zod.string().nullish(),\r\n  \"description\": zod.string().nullish(),\r\n  \"url\": zod.string().nullish(),\r\n  \"type\": zod.string().nullish()\r\n}))\r\n})\r\n\r\n\r\nexport const getImagingResizeUrlsQueryHeightDefault = 200;export const getImagingResizeUrlsQueryWidthDefault = 200;\r\n\r\nexport const getImagingResizeUrlsQueryParams = zod.object({\r\n  \"id\": zod.array(zod.string().uuid()).optional(),\r\n  \"height\": zod.number().default(getImagingResizeUrlsQueryHeightDefault),\r\n  \"width\": zod.number().default(getImagingResizeUrlsQueryWidthDefault),\r\n  \"mode\": zod.enum(['Crop', 'Max', 'Stretch', 'Pad', 'BoxPad', 'Min']).optional()\r\n})\r\n\r\nexport const getImagingResizeUrlsResponseItem = zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"urlInfos\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullable(),\r\n  \"url\": zod.string()\r\n}))\r\n})\r\nexport const getImagingResizeUrlsResponse = zod.array(getImagingResizeUrlsResponseItem)\r\n\r\n\r\nexport const getImportAnalyzeQueryParams = zod.object({\r\n  \"temporaryFileId\": zod.string().uuid().optional()\r\n})\r\n\r\nexport const getImportAnalyzeResponse = zod.object({\r\n  \"entityType\": zod.string(),\r\n  \"alias\": zod.string().nullish(),\r\n  \"key\": zod.string().uuid().nullish()\r\n})\r\n\r\n\r\nexport const getIndexerQuerySkipDefault = 0;export const getIndexerQueryTakeDefault = 100;\r\n\r\nexport const getIndexerQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getIndexerQueryTakeDefault)\r\n})\r\n\r\nexport const getIndexerResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"name\": zod.string().min(1),\r\n  \"healthStatus\": zod.object({\r\n  \"status\": zod.enum(['Healthy', 'Unhealthy', 'Rebuilding', 'Corrupt']),\r\n  \"message\": zod.string().nullish()\r\n}),\r\n  \"canRebuild\": zod.boolean(),\r\n  \"searcherName\": zod.string(),\r\n  \"documentCount\": zod.number(),\r\n  \"fieldCount\": zod.number(),\r\n  \"providerProperties\": zod.record(zod.string(), zod.any().nullable()).nullish()\r\n}))\r\n})\r\n\r\n\r\nexport const getIndexerByIndexNameParams = zod.object({\r\n  \"indexName\": zod.string()\r\n})\r\n\r\nexport const getIndexerByIndexNameResponse = zod.object({\r\n  \"name\": zod.string().min(1),\r\n  \"healthStatus\": zod.object({\r\n  \"status\": zod.enum(['Healthy', 'Unhealthy', 'Rebuilding', 'Corrupt']),\r\n  \"message\": zod.string().nullish()\r\n}),\r\n  \"canRebuild\": zod.boolean(),\r\n  \"searcherName\": zod.string(),\r\n  \"documentCount\": zod.number(),\r\n  \"fieldCount\": zod.number(),\r\n  \"providerProperties\": zod.record(zod.string(), zod.any().nullable()).nullish()\r\n})\r\n\r\n\r\nexport const postIndexerByIndexNameRebuildParams = zod.object({\r\n  \"indexName\": zod.string()\r\n})\r\n\r\n\r\nexport const getInstallSettingsResponse = zod.object({\r\n  \"user\": zod.object({\r\n  \"minCharLength\": zod.number(),\r\n  \"minNonAlphaNumericLength\": zod.number(),\r\n  \"consentLevels\": zod.array(zod.object({\r\n  \"level\": zod.enum(['Minimal', 'Basic', 'Detailed']),\r\n  \"description\": zod.string().min(1)\r\n}))\r\n}),\r\n  \"databases\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"sortOrder\": zod.number(),\r\n  \"displayName\": zod.string().min(1),\r\n  \"defaultDatabaseName\": zod.string().min(1),\r\n  \"providerName\": zod.string().min(1),\r\n  \"isConfigured\": zod.boolean(),\r\n  \"requiresServer\": zod.boolean(),\r\n  \"serverPlaceholder\": zod.string().min(1),\r\n  \"requiresCredentials\": zod.boolean(),\r\n  \"supportsIntegratedAuthentication\": zod.boolean(),\r\n  \"requiresConnectionTest\": zod.boolean()\r\n}))\r\n})\r\n\r\n\r\nexport const postInstallSetupBodyUserNameMin = 0;\r\n\r\nexport const postInstallSetupBodyUserNameMax = 255;\r\n\r\n\r\nexport const postInstallSetupBody = zod.object({\r\n  \"user\": zod.object({\r\n  \"name\": zod.string().min(postInstallSetupBodyUserNameMin).max(postInstallSetupBodyUserNameMax),\r\n  \"email\": zod.string().email().min(1),\r\n  \"password\": zod.string().min(1),\r\n  \"subscribeToNewsletter\": zod.boolean()\r\n}),\r\n  \"database\": zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"providerName\": zod.string().min(1),\r\n  \"server\": zod.string().nullish(),\r\n  \"name\": zod.string().nullish(),\r\n  \"username\": zod.string().nullish(),\r\n  \"password\": zod.string().nullish(),\r\n  \"useIntegratedAuthentication\": zod.boolean(),\r\n  \"connectionString\": zod.string().nullish(),\r\n  \"trustServerCertificate\": zod.boolean()\r\n}),\r\n  \"telemetryLevel\": zod.enum(['Minimal', 'Basic', 'Detailed'])\r\n})\r\n\r\n\r\nexport const postInstallValidateDatabaseBody = zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"providerName\": zod.string().min(1),\r\n  \"server\": zod.string().nullish(),\r\n  \"name\": zod.string().nullish(),\r\n  \"username\": zod.string().nullish(),\r\n  \"password\": zod.string().nullish(),\r\n  \"useIntegratedAuthentication\": zod.boolean(),\r\n  \"connectionString\": zod.string().nullish(),\r\n  \"trustServerCertificate\": zod.boolean()\r\n})\r\n\r\n\r\nexport const getItemLanguageQueryParams = zod.object({\r\n  \"isoCode\": zod.array(zod.string()).optional()\r\n})\r\n\r\nexport const getItemLanguageResponseItem = zod.object({\r\n  \"name\": zod.string().min(1),\r\n  \"isoCode\": zod.string().min(1)\r\n})\r\nexport const getItemLanguageResponse = zod.array(getItemLanguageResponseItem)\r\n\r\n\r\nexport const getItemLanguageDefaultResponse = zod.object({\r\n  \"name\": zod.string().min(1),\r\n  \"isoCode\": zod.string().min(1)\r\n})\r\n\r\n\r\nexport const getLanguageQuerySkipDefault = 0;export const getLanguageQueryTakeDefault = 100;\r\n\r\nexport const getLanguageQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getLanguageQueryTakeDefault)\r\n})\r\n\r\nexport const getLanguageResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"name\": zod.string().min(1),\r\n  \"isDefault\": zod.boolean(),\r\n  \"isMandatory\": zod.boolean(),\r\n  \"fallbackIsoCode\": zod.string().nullish(),\r\n  \"isoCode\": zod.string().min(1)\r\n}))\r\n})\r\n\r\n\r\nexport const postLanguageBody = zod.object({\r\n  \"name\": zod.string().min(1),\r\n  \"isDefault\": zod.boolean(),\r\n  \"isMandatory\": zod.boolean(),\r\n  \"fallbackIsoCode\": zod.string().nullish(),\r\n  \"isoCode\": zod.string().min(1)\r\n})\r\n\r\n\r\nexport const getLanguageByIsoCodeParams = zod.object({\r\n  \"isoCode\": zod.string()\r\n})\r\n\r\nexport const getLanguageByIsoCodeResponse = zod.object({\r\n  \"name\": zod.string().min(1),\r\n  \"isDefault\": zod.boolean(),\r\n  \"isMandatory\": zod.boolean(),\r\n  \"fallbackIsoCode\": zod.string().nullish(),\r\n  \"isoCode\": zod.string().min(1)\r\n})\r\n\r\n\r\nexport const deleteLanguageByIsoCodeParams = zod.object({\r\n  \"isoCode\": zod.string()\r\n})\r\n\r\n\r\nexport const putLanguageByIsoCodeParams = zod.object({\r\n  \"isoCode\": zod.string()\r\n})\r\n\r\nexport const putLanguageByIsoCodeBody = zod.object({\r\n  \"name\": zod.string().min(1),\r\n  \"isDefault\": zod.boolean(),\r\n  \"isMandatory\": zod.boolean(),\r\n  \"fallbackIsoCode\": zod.string().nullish()\r\n})\r\n\r\n\r\nexport const getLogViewerLevelQuerySkipDefault = 0;export const getLogViewerLevelQueryTakeDefault = 100;\r\n\r\nexport const getLogViewerLevelQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getLogViewerLevelQueryTakeDefault)\r\n})\r\n\r\nexport const getLogViewerLevelResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"name\": zod.string(),\r\n  \"level\": zod.enum(['Verbose', 'Debug', 'Information', 'Warning', 'Error', 'Fatal'])\r\n}))\r\n})\r\n\r\n\r\nexport const getLogViewerLevelCountQueryParams = zod.object({\r\n  \"startDate\": zod.string().datetime({\"local\":true}).optional(),\r\n  \"endDate\": zod.string().datetime({\"local\":true}).optional()\r\n})\r\n\r\nexport const getLogViewerLevelCountResponse = zod.object({\r\n  \"information\": zod.number(),\r\n  \"debug\": zod.number(),\r\n  \"warning\": zod.number(),\r\n  \"error\": zod.number(),\r\n  \"fatal\": zod.number()\r\n})\r\n\r\n\r\nexport const getLogViewerLogQuerySkipDefault = 0;export const getLogViewerLogQueryTakeDefault = 100;\r\n\r\nexport const getLogViewerLogQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getLogViewerLogQueryTakeDefault),\r\n  \"orderDirection\": zod.enum(['Ascending', 'Descending']).optional(),\r\n  \"filterExpression\": zod.string().optional(),\r\n  \"logLevel\": zod.array(zod.enum(['Verbose', 'Debug', 'Information', 'Warning', 'Error', 'Fatal'])).optional(),\r\n  \"startDate\": zod.string().datetime({\"local\":true}).optional(),\r\n  \"endDate\": zod.string().datetime({\"local\":true}).optional()\r\n})\r\n\r\nexport const getLogViewerLogResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"timestamp\": zod.string().datetime({\"local\":true}),\r\n  \"level\": zod.enum(['Verbose', 'Debug', 'Information', 'Warning', 'Error', 'Fatal']),\r\n  \"messageTemplate\": zod.string().nullish(),\r\n  \"renderedMessage\": zod.string().nullish(),\r\n  \"properties\": zod.array(zod.object({\r\n  \"name\": zod.string(),\r\n  \"value\": zod.string().nullish()\r\n})),\r\n  \"exception\": zod.string().nullish()\r\n}))\r\n})\r\n\r\n\r\nexport const getLogViewerMessageTemplateQuerySkipDefault = 0;export const getLogViewerMessageTemplateQueryTakeDefault = 100;\r\n\r\nexport const getLogViewerMessageTemplateQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getLogViewerMessageTemplateQueryTakeDefault),\r\n  \"startDate\": zod.string().datetime({\"local\":true}).optional(),\r\n  \"endDate\": zod.string().datetime({\"local\":true}).optional()\r\n})\r\n\r\nexport const getLogViewerMessageTemplateResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"messageTemplate\": zod.string().nullish(),\r\n  \"count\": zod.number()\r\n}))\r\n})\r\n\r\n\r\nexport const getLogViewerSavedSearchQuerySkipDefault = 0;export const getLogViewerSavedSearchQueryTakeDefault = 100;\r\n\r\nexport const getLogViewerSavedSearchQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getLogViewerSavedSearchQueryTakeDefault)\r\n})\r\n\r\nexport const getLogViewerSavedSearchResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"name\": zod.string(),\r\n  \"query\": zod.string()\r\n}))\r\n})\r\n\r\n\r\nexport const postLogViewerSavedSearchBody = zod.object({\r\n  \"name\": zod.string(),\r\n  \"query\": zod.string()\r\n})\r\n\r\n\r\nexport const getLogViewerSavedSearchByNameParams = zod.object({\r\n  \"name\": zod.string()\r\n})\r\n\r\nexport const getLogViewerSavedSearchByNameResponse = zod.object({\r\n  \"name\": zod.string(),\r\n  \"query\": zod.string()\r\n})\r\n\r\n\r\nexport const deleteLogViewerSavedSearchByNameParams = zod.object({\r\n  \"name\": zod.string()\r\n})\r\n\r\n\r\nexport const getLogViewerValidateLogsSizeQueryParams = zod.object({\r\n  \"startDate\": zod.string().datetime({\"local\":true}).optional(),\r\n  \"endDate\": zod.string().datetime({\"local\":true}).optional()\r\n})\r\n\r\n\r\nexport const getManifestManifestResponseItem = zod.object({\r\n  \"name\": zod.string().min(1),\r\n  \"id\": zod.string().nullish(),\r\n  \"version\": zod.string().nullish(),\r\n  \"extensions\": zod.array(zod.any())\r\n})\r\nexport const getManifestManifestResponse = zod.array(getManifestManifestResponseItem)\r\n\r\n\r\nexport const getManifestManifestPrivateResponseItem = zod.object({\r\n  \"name\": zod.string().min(1),\r\n  \"id\": zod.string().nullish(),\r\n  \"version\": zod.string().nullish(),\r\n  \"extensions\": zod.array(zod.any())\r\n})\r\nexport const getManifestManifestPrivateResponse = zod.array(getManifestManifestPrivateResponseItem)\r\n\r\n\r\nexport const getManifestManifestPublicResponseItem = zod.object({\r\n  \"name\": zod.string().min(1),\r\n  \"id\": zod.string().nullish(),\r\n  \"version\": zod.string().nullish(),\r\n  \"extensions\": zod.array(zod.any())\r\n})\r\nexport const getManifestManifestPublicResponse = zod.array(getManifestManifestPublicResponseItem)\r\n\r\n\r\nexport const getItemMediaTypeQueryParams = zod.object({\r\n  \"id\": zod.array(zod.string().uuid()).optional()\r\n})\r\n\r\nexport const getItemMediaTypeResponseItem = zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string(),\r\n  \"icon\": zod.string().nullish()\r\n})\r\nexport const getItemMediaTypeResponse = zod.array(getItemMediaTypeResponseItem)\r\n\r\n\r\nexport const getItemMediaTypeAllowedQuerySkipDefault = 0;export const getItemMediaTypeAllowedQueryTakeDefault = 100;\r\n\r\nexport const getItemMediaTypeAllowedQueryParams = zod.object({\r\n  \"fileExtension\": zod.string().optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getItemMediaTypeAllowedQueryTakeDefault)\r\n})\r\n\r\nexport const getItemMediaTypeAllowedResponse = zod.object({\r\n  \"items\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string(),\r\n  \"icon\": zod.string().nullish()\r\n})),\r\n  \"total\": zod.number()\r\n})\r\n\r\n\r\nexport const getItemMediaTypeFoldersQuerySkipDefault = 0;export const getItemMediaTypeFoldersQueryTakeDefault = 100;\r\n\r\nexport const getItemMediaTypeFoldersQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getItemMediaTypeFoldersQueryTakeDefault)\r\n})\r\n\r\nexport const getItemMediaTypeFoldersResponse = zod.object({\r\n  \"items\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string(),\r\n  \"icon\": zod.string().nullish()\r\n})),\r\n  \"total\": zod.number()\r\n})\r\n\r\n\r\nexport const getItemMediaTypeSearchQuerySkipDefault = 0;export const getItemMediaTypeSearchQueryTakeDefault = 100;\r\n\r\nexport const getItemMediaTypeSearchQueryParams = zod.object({\r\n  \"query\": zod.string().optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getItemMediaTypeSearchQueryTakeDefault)\r\n})\r\n\r\nexport const getItemMediaTypeSearchResponse = zod.object({\r\n  \"items\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string(),\r\n  \"icon\": zod.string().nullish()\r\n})),\r\n  \"total\": zod.number()\r\n})\r\n\r\n\r\nexport const postMediaTypeBody = zod.object({\r\n  \"alias\": zod.string().min(1),\r\n  \"name\": zod.string().min(1),\r\n  \"description\": zod.string().nullish(),\r\n  \"icon\": zod.string().min(1),\r\n  \"allowedAsRoot\": zod.boolean(),\r\n  \"variesByCulture\": zod.boolean(),\r\n  \"variesBySegment\": zod.boolean(),\r\n  \"isElement\": zod.boolean(),\r\n  \"properties\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"container\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"sortOrder\": zod.number(),\r\n  \"alias\": zod.string().min(1),\r\n  \"name\": zod.string().min(1),\r\n  \"description\": zod.string().nullish(),\r\n  \"dataType\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"variesByCulture\": zod.boolean(),\r\n  \"variesBySegment\": zod.boolean(),\r\n  \"validation\": zod.object({\r\n  \"mandatory\": zod.boolean(),\r\n  \"mandatoryMessage\": zod.string().nullish(),\r\n  \"regEx\": zod.string().nullish(),\r\n  \"regExMessage\": zod.string().nullish()\r\n}),\r\n  \"appearance\": zod.object({\r\n  \"labelOnTop\": zod.boolean()\r\n})\r\n})),\r\n  \"containers\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"name\": zod.string().nullish(),\r\n  \"type\": zod.string().min(1),\r\n  \"sortOrder\": zod.number()\r\n})),\r\n  \"id\": zod.string().uuid().nullish(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"allowedMediaTypes\": zod.array(zod.object({\r\n  \"mediaType\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"sortOrder\": zod.number()\r\n})),\r\n  \"compositions\": zod.array(zod.object({\r\n  \"mediaType\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"compositionType\": zod.enum(['Composition', 'Inheritance'])\r\n})),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n})\r\n\r\n\r\nexport const getMediaTypeByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getMediaTypeByIdResponse = zod.object({\r\n  \"alias\": zod.string().min(1),\r\n  \"name\": zod.string().min(1),\r\n  \"description\": zod.string().nullish(),\r\n  \"icon\": zod.string().min(1),\r\n  \"allowedAsRoot\": zod.boolean(),\r\n  \"variesByCulture\": zod.boolean(),\r\n  \"variesBySegment\": zod.boolean(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"isElement\": zod.boolean(),\r\n  \"properties\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"container\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"sortOrder\": zod.number(),\r\n  \"alias\": zod.string().min(1),\r\n  \"name\": zod.string().min(1),\r\n  \"description\": zod.string().nullish(),\r\n  \"dataType\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"variesByCulture\": zod.boolean(),\r\n  \"variesBySegment\": zod.boolean(),\r\n  \"validation\": zod.object({\r\n  \"mandatory\": zod.boolean(),\r\n  \"mandatoryMessage\": zod.string().nullish(),\r\n  \"regEx\": zod.string().nullish(),\r\n  \"regExMessage\": zod.string().nullish()\r\n}),\r\n  \"appearance\": zod.object({\r\n  \"labelOnTop\": zod.boolean()\r\n})\r\n})),\r\n  \"containers\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"name\": zod.string().nullish(),\r\n  \"type\": zod.string().min(1),\r\n  \"sortOrder\": zod.number()\r\n})),\r\n  \"id\": zod.string().uuid(),\r\n  \"allowedMediaTypes\": zod.array(zod.object({\r\n  \"mediaType\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"sortOrder\": zod.number()\r\n})),\r\n  \"compositions\": zod.array(zod.object({\r\n  \"mediaType\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"compositionType\": zod.enum(['Composition', 'Inheritance'])\r\n})),\r\n  \"isDeletable\": zod.boolean(),\r\n  \"aliasCanBeChanged\": zod.boolean()\r\n})\r\n\r\n\r\nexport const deleteMediaTypeByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const putMediaTypeByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putMediaTypeByIdBody = zod.object({\r\n  \"alias\": zod.string().min(1),\r\n  \"name\": zod.string().min(1),\r\n  \"description\": zod.string().nullish(),\r\n  \"icon\": zod.string().min(1),\r\n  \"allowedAsRoot\": zod.boolean(),\r\n  \"variesByCulture\": zod.boolean(),\r\n  \"variesBySegment\": zod.boolean(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"isElement\": zod.boolean(),\r\n  \"properties\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"container\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"sortOrder\": zod.number(),\r\n  \"alias\": zod.string().min(1),\r\n  \"name\": zod.string().min(1),\r\n  \"description\": zod.string().nullish(),\r\n  \"dataType\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"variesByCulture\": zod.boolean(),\r\n  \"variesBySegment\": zod.boolean(),\r\n  \"validation\": zod.object({\r\n  \"mandatory\": zod.boolean(),\r\n  \"mandatoryMessage\": zod.string().nullish(),\r\n  \"regEx\": zod.string().nullish(),\r\n  \"regExMessage\": zod.string().nullish()\r\n}),\r\n  \"appearance\": zod.object({\r\n  \"labelOnTop\": zod.boolean()\r\n})\r\n})),\r\n  \"containers\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"name\": zod.string().nullish(),\r\n  \"type\": zod.string().min(1),\r\n  \"sortOrder\": zod.number()\r\n})),\r\n  \"allowedMediaTypes\": zod.array(zod.object({\r\n  \"mediaType\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"sortOrder\": zod.number()\r\n})),\r\n  \"compositions\": zod.array(zod.object({\r\n  \"mediaType\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"compositionType\": zod.enum(['Composition', 'Inheritance'])\r\n}))\r\n})\r\n\r\n\r\nexport const getMediaTypeByIdAllowedChildrenParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getMediaTypeByIdAllowedChildrenQuerySkipDefault = 0;export const getMediaTypeByIdAllowedChildrenQueryTakeDefault = 100;\r\n\r\nexport const getMediaTypeByIdAllowedChildrenQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getMediaTypeByIdAllowedChildrenQueryTakeDefault)\r\n})\r\n\r\nexport const getMediaTypeByIdAllowedChildrenResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string(),\r\n  \"description\": zod.string().nullish(),\r\n  \"icon\": zod.string().nullish()\r\n}))\r\n})\r\n\r\n\r\nexport const getMediaTypeByIdCompositionReferencesParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getMediaTypeByIdCompositionReferencesResponseItem = zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string(),\r\n  \"icon\": zod.string()\r\n})\r\nexport const getMediaTypeByIdCompositionReferencesResponse = zod.array(getMediaTypeByIdCompositionReferencesResponseItem)\r\n\r\n\r\nexport const postMediaTypeByIdCopyParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const postMediaTypeByIdCopyBody = zod.object({\r\n  \"target\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n})\r\n\r\n\r\nexport const getMediaTypeByIdExportParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getMediaTypeByIdExportResponse = zod.instanceof(FileLike)\r\n\r\n\r\nexport const putMediaTypeByIdImportParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putMediaTypeByIdImportBody = zod.object({\r\n  \"file\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n})\r\n\r\n\r\nexport const putMediaTypeByIdMoveParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putMediaTypeByIdMoveBody = zod.object({\r\n  \"target\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n})\r\n\r\n\r\nexport const getMediaTypeAllowedAtRootQuerySkipDefault = 0;export const getMediaTypeAllowedAtRootQueryTakeDefault = 100;\r\n\r\nexport const getMediaTypeAllowedAtRootQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getMediaTypeAllowedAtRootQueryTakeDefault)\r\n})\r\n\r\nexport const getMediaTypeAllowedAtRootResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string(),\r\n  \"description\": zod.string().nullish(),\r\n  \"icon\": zod.string().nullish()\r\n}))\r\n})\r\n\r\n\r\nexport const postMediaTypeAvailableCompositionsBody = zod.object({\r\n  \"id\": zod.string().uuid().nullish(),\r\n  \"currentPropertyAliases\": zod.array(zod.string()),\r\n  \"currentCompositeIds\": zod.array(zod.string().uuid())\r\n})\r\n\r\nexport const postMediaTypeAvailableCompositionsResponseItem = zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string(),\r\n  \"icon\": zod.string(),\r\n  \"folderPath\": zod.array(zod.string()),\r\n  \"isCompatible\": zod.boolean()\r\n})\r\nexport const postMediaTypeAvailableCompositionsResponse = zod.array(postMediaTypeAvailableCompositionsResponseItem)\r\n\r\n\r\nexport const getMediaTypeConfigurationResponse = zod.object({\r\n  \"reservedFieldNames\": zod.array(zod.string())\r\n})\r\n\r\n\r\nexport const postMediaTypeFolderBody = zod.object({\r\n  \"name\": zod.string().min(1),\r\n  \"id\": zod.string().uuid().nullish(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n})\r\n\r\n\r\nexport const getMediaTypeFolderByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getMediaTypeFolderByIdResponse = zod.object({\r\n  \"name\": zod.string().min(1),\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const deleteMediaTypeFolderByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const putMediaTypeFolderByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putMediaTypeFolderByIdBody = zod.object({\r\n  \"name\": zod.string().min(1)\r\n})\r\n\r\n\r\nexport const postMediaTypeImportBody = zod.object({\r\n  \"file\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n})\r\n\r\n\r\nexport const getTreeMediaTypeAncestorsQueryParams = zod.object({\r\n  \"descendantId\": zod.string().uuid().optional()\r\n})\r\n\r\nexport const getTreeMediaTypeAncestorsResponseItem = zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"id\": zod.string().uuid(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"name\": zod.string(),\r\n  \"isFolder\": zod.boolean(),\r\n  \"icon\": zod.string(),\r\n  \"isDeletable\": zod.boolean()\r\n})\r\nexport const getTreeMediaTypeAncestorsResponse = zod.array(getTreeMediaTypeAncestorsResponseItem)\r\n\r\n\r\nexport const getTreeMediaTypeChildrenQuerySkipDefault = 0;export const getTreeMediaTypeChildrenQueryTakeDefault = 100;export const getTreeMediaTypeChildrenQueryFoldersOnlyDefault = false;\r\n\r\nexport const getTreeMediaTypeChildrenQueryParams = zod.object({\r\n  \"parentId\": zod.string().uuid().optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getTreeMediaTypeChildrenQueryTakeDefault),\r\n  \"foldersOnly\": zod.boolean().optional()\r\n})\r\n\r\nexport const getTreeMediaTypeChildrenResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"id\": zod.string().uuid(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"name\": zod.string(),\r\n  \"isFolder\": zod.boolean(),\r\n  \"icon\": zod.string(),\r\n  \"isDeletable\": zod.boolean()\r\n}))\r\n})\r\n\r\n\r\nexport const getTreeMediaTypeRootQuerySkipDefault = 0;export const getTreeMediaTypeRootQueryTakeDefault = 100;export const getTreeMediaTypeRootQueryFoldersOnlyDefault = false;\r\n\r\nexport const getTreeMediaTypeRootQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getTreeMediaTypeRootQueryTakeDefault),\r\n  \"foldersOnly\": zod.boolean().optional()\r\n})\r\n\r\nexport const getTreeMediaTypeRootResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"id\": zod.string().uuid(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"name\": zod.string(),\r\n  \"isFolder\": zod.boolean(),\r\n  \"icon\": zod.string(),\r\n  \"isDeletable\": zod.boolean()\r\n}))\r\n})\r\n\r\n\r\nexport const getCollectionMediaQueryOrderByDefault = \"updateDate\";export const getCollectionMediaQuerySkipDefault = 0;export const getCollectionMediaQueryTakeDefault = 100;\r\n\r\nexport const getCollectionMediaQueryParams = zod.object({\r\n  \"id\": zod.string().uuid().optional(),\r\n  \"dataTypeId\": zod.string().uuid().optional(),\r\n  \"orderBy\": zod.string().default(getCollectionMediaQueryOrderByDefault),\r\n  \"orderDirection\": zod.enum(['Ascending', 'Descending']).optional(),\r\n  \"filter\": zod.string().optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getCollectionMediaQueryTakeDefault)\r\n})\r\n\r\nexport const getCollectionMediaResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"values\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"alias\": zod.string().min(1),\r\n  \"value\": zod.any().nullish(),\r\n  \"editorAlias\": zod.string().min(1)\r\n})),\r\n  \"variants\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"name\": zod.string().min(1),\r\n  \"createDate\": zod.string().datetime({\"local\":true}),\r\n  \"updateDate\": zod.string().datetime({\"local\":true})\r\n})),\r\n  \"id\": zod.string().uuid(),\r\n  \"creator\": zod.string().nullish(),\r\n  \"sortOrder\": zod.number(),\r\n  \"mediaType\": zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"alias\": zod.string(),\r\n  \"icon\": zod.string()\r\n})\r\n}))\r\n})\r\n\r\n\r\nexport const getItemMediaQueryParams = zod.object({\r\n  \"id\": zod.array(zod.string().uuid()).optional()\r\n})\r\n\r\nexport const getItemMediaResponseItem = zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"isTrashed\": zod.boolean(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"hasChildren\": zod.boolean(),\r\n  \"mediaType\": zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"icon\": zod.string(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n}),\r\n  \"variants\": zod.array(zod.object({\r\n  \"name\": zod.string(),\r\n  \"culture\": zod.string().nullish()\r\n}))\r\n})\r\nexport const getItemMediaResponse = zod.array(getItemMediaResponseItem)\r\n\r\n\r\nexport const getItemMediaSearchQuerySkipDefault = 0;export const getItemMediaSearchQueryTakeDefault = 100;\r\n\r\nexport const getItemMediaSearchQueryParams = zod.object({\r\n  \"query\": zod.string().optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getItemMediaSearchQueryTakeDefault),\r\n  \"parentId\": zod.string().uuid().optional(),\r\n  \"allowedMediaTypes\": zod.array(zod.string().uuid()).optional()\r\n})\r\n\r\nexport const getItemMediaSearchResponse = zod.object({\r\n  \"items\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"isTrashed\": zod.boolean(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"hasChildren\": zod.boolean(),\r\n  \"mediaType\": zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"icon\": zod.string(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n}),\r\n  \"variants\": zod.array(zod.object({\r\n  \"name\": zod.string(),\r\n  \"culture\": zod.string().nullish()\r\n}))\r\n})),\r\n  \"total\": zod.number()\r\n})\r\n\r\n\r\nexport const postMediaBody = zod.object({\r\n  \"values\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"alias\": zod.string().min(1),\r\n  \"value\": zod.any().nullish()\r\n})),\r\n  \"variants\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"name\": zod.string().min(1)\r\n})),\r\n  \"id\": zod.string().uuid().nullish(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"mediaType\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n})\r\n\r\n\r\nexport const getMediaByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getMediaByIdResponse = zod.object({\r\n  \"values\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"alias\": zod.string().min(1),\r\n  \"value\": zod.any().nullish(),\r\n  \"editorAlias\": zod.string().min(1)\r\n})),\r\n  \"variants\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"name\": zod.string().min(1),\r\n  \"createDate\": zod.string().datetime({\"local\":true}),\r\n  \"updateDate\": zod.string().datetime({\"local\":true})\r\n})),\r\n  \"id\": zod.string().uuid(),\r\n  \"urls\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullable(),\r\n  \"url\": zod.string()\r\n})),\r\n  \"isTrashed\": zod.boolean(),\r\n  \"mediaType\": zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"icon\": zod.string(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n})\r\n})\r\n\r\n\r\nexport const deleteMediaByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const putMediaByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putMediaByIdBody = zod.object({\r\n  \"values\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"alias\": zod.string().min(1),\r\n  \"value\": zod.any().nullish()\r\n})),\r\n  \"variants\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"name\": zod.string().min(1)\r\n}))\r\n})\r\n\r\n\r\nexport const getMediaByIdAuditLogParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getMediaByIdAuditLogQuerySkipDefault = 0;export const getMediaByIdAuditLogQueryTakeDefault = 100;\r\n\r\nexport const getMediaByIdAuditLogQueryParams = zod.object({\r\n  \"orderDirection\": zod.enum(['Ascending', 'Descending']).optional(),\r\n  \"sinceDate\": zod.string().datetime({\"local\":true}).optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getMediaByIdAuditLogQueryTakeDefault)\r\n})\r\n\r\nexport const getMediaByIdAuditLogResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"user\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"timestamp\": zod.string().datetime({\"local\":true}),\r\n  \"logType\": zod.enum(['New', 'Save', 'SaveVariant', 'Open', 'Delete', 'Publish', 'PublishVariant', 'SendToPublish', 'SendToPublishVariant', 'Unpublish', 'UnpublishVariant', 'Move', 'Copy', 'AssignDomain', 'PublicAccess', 'Sort', 'Notify', 'System', 'RollBack', 'PackagerInstall', 'PackagerUninstall', 'Custom', 'ContentVersionPreventCleanup', 'ContentVersionEnableCleanup']),\r\n  \"comment\": zod.string().nullish(),\r\n  \"parameters\": zod.string().nullish()\r\n}))\r\n})\r\n\r\n\r\nexport const putMediaByIdMoveParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putMediaByIdMoveBody = zod.object({\r\n  \"target\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n})\r\n\r\n\r\nexport const putMediaByIdMoveToRecycleBinParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const getMediaByIdReferencedByParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getMediaByIdReferencedByQuerySkipDefault = 0;export const getMediaByIdReferencedByQueryTakeDefault = 20;\r\n\r\nexport const getMediaByIdReferencedByQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getMediaByIdReferencedByQueryTakeDefault)\r\n})\r\n\r\nexport const getMediaByIdReferencedByResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"$type\": zod.enum(['DefaultReferenceResponseModel']),\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string().nullish(),\r\n  \"type\": zod.string().nullish(),\r\n  \"icon\": zod.string().nullish()\r\n}).or(zod.object({\r\n  \"$type\": zod.enum(['DocumentReferenceResponseModel']),\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string().nullish(),\r\n  \"published\": zod.boolean().nullish(),\r\n  \"documentType\": zod.object({\r\n  \"icon\": zod.string().nullish(),\r\n  \"alias\": zod.string().nullish(),\r\n  \"name\": zod.string().nullish()\r\n})\r\n})).or(zod.object({\r\n  \"$type\": zod.enum(['MediaReferenceResponseModel']),\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string().nullish(),\r\n  \"mediaType\": zod.object({\r\n  \"icon\": zod.string().nullish(),\r\n  \"alias\": zod.string().nullish(),\r\n  \"name\": zod.string().nullish()\r\n})\r\n})))\r\n})\r\n\r\n\r\nexport const getMediaByIdReferencedDescendantsParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getMediaByIdReferencedDescendantsQuerySkipDefault = 0;export const getMediaByIdReferencedDescendantsQueryTakeDefault = 20;\r\n\r\nexport const getMediaByIdReferencedDescendantsQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getMediaByIdReferencedDescendantsQueryTakeDefault)\r\n})\r\n\r\nexport const getMediaByIdReferencedDescendantsResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid()\r\n}))\r\n})\r\n\r\n\r\nexport const putMediaByIdValidateParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putMediaByIdValidateBody = zod.object({\r\n  \"values\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"alias\": zod.string().min(1),\r\n  \"value\": zod.any().nullish()\r\n})),\r\n  \"variants\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"name\": zod.string().min(1)\r\n}))\r\n})\r\n\r\n\r\nexport const getMediaAreReferencedQuerySkipDefault = 0;export const getMediaAreReferencedQueryTakeDefault = 20;\r\n\r\nexport const getMediaAreReferencedQueryParams = zod.object({\r\n  \"id\": zod.array(zod.string().uuid()).optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getMediaAreReferencedQueryTakeDefault)\r\n})\r\n\r\nexport const getMediaAreReferencedResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid()\r\n}))\r\n})\r\n\r\n\r\nexport const getMediaConfigurationResponse = zod.object({\r\n  \"disableDeleteWhenReferenced\": zod.boolean(),\r\n  \"disableUnpublishWhenReferenced\": zod.boolean(),\r\n  \"reservedFieldNames\": zod.array(zod.string())\r\n})\r\n\r\n\r\nexport const putMediaSortBody = zod.object({\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"sorting\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"sortOrder\": zod.number()\r\n}))\r\n})\r\n\r\n\r\nexport const getMediaUrlsQueryParams = zod.object({\r\n  \"id\": zod.array(zod.string().uuid()).optional()\r\n})\r\n\r\nexport const getMediaUrlsResponseItem = zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"urlInfos\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullable(),\r\n  \"url\": zod.string()\r\n}))\r\n})\r\nexport const getMediaUrlsResponse = zod.array(getMediaUrlsResponseItem)\r\n\r\n\r\nexport const postMediaValidateBody = zod.object({\r\n  \"values\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"alias\": zod.string().min(1),\r\n  \"value\": zod.any().nullish()\r\n})),\r\n  \"variants\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"name\": zod.string().min(1)\r\n})),\r\n  \"id\": zod.string().uuid().nullish(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"mediaType\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n})\r\n\r\n\r\nexport const deleteRecycleBinMediaByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const getRecycleBinMediaByIdOriginalParentParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getRecycleBinMediaByIdOriginalParentResponse = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const putRecycleBinMediaByIdRestoreParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putRecycleBinMediaByIdRestoreBody = zod.object({\r\n  \"target\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n})\r\n\r\n\r\nexport const getRecycleBinMediaChildrenQuerySkipDefault = 0;export const getRecycleBinMediaChildrenQueryTakeDefault = 100;\r\n\r\nexport const getRecycleBinMediaChildrenQueryParams = zod.object({\r\n  \"parentId\": zod.string().uuid().optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getRecycleBinMediaChildrenQueryTakeDefault)\r\n})\r\n\r\nexport const getRecycleBinMediaChildrenResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"createDate\": zod.string().datetime({\"local\":true}),\r\n  \"hasChildren\": zod.boolean(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"mediaType\": zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"icon\": zod.string(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n}),\r\n  \"variants\": zod.array(zod.object({\r\n  \"name\": zod.string(),\r\n  \"culture\": zod.string().nullish()\r\n}))\r\n}))\r\n})\r\n\r\n\r\nexport const getRecycleBinMediaRootQuerySkipDefault = 0;export const getRecycleBinMediaRootQueryTakeDefault = 100;\r\n\r\nexport const getRecycleBinMediaRootQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getRecycleBinMediaRootQueryTakeDefault)\r\n})\r\n\r\nexport const getRecycleBinMediaRootResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"createDate\": zod.string().datetime({\"local\":true}),\r\n  \"hasChildren\": zod.boolean(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"mediaType\": zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"icon\": zod.string(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n}),\r\n  \"variants\": zod.array(zod.object({\r\n  \"name\": zod.string(),\r\n  \"culture\": zod.string().nullish()\r\n}))\r\n}))\r\n})\r\n\r\n\r\nexport const getTreeMediaAncestorsQueryParams = zod.object({\r\n  \"descendantId\": zod.string().uuid().optional()\r\n})\r\n\r\nexport const getTreeMediaAncestorsResponseItem = zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"noAccess\": zod.boolean(),\r\n  \"isTrashed\": zod.boolean(),\r\n  \"id\": zod.string().uuid(),\r\n  \"createDate\": zod.string().datetime({\"local\":true}),\r\n  \"mediaType\": zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"icon\": zod.string(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n}),\r\n  \"variants\": zod.array(zod.object({\r\n  \"name\": zod.string(),\r\n  \"culture\": zod.string().nullish()\r\n}))\r\n})\r\nexport const getTreeMediaAncestorsResponse = zod.array(getTreeMediaAncestorsResponseItem)\r\n\r\n\r\nexport const getTreeMediaChildrenQuerySkipDefault = 0;export const getTreeMediaChildrenQueryTakeDefault = 100;\r\n\r\nexport const getTreeMediaChildrenQueryParams = zod.object({\r\n  \"parentId\": zod.string().uuid().optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getTreeMediaChildrenQueryTakeDefault),\r\n  \"dataTypeId\": zod.string().uuid().optional()\r\n})\r\n\r\nexport const getTreeMediaChildrenResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"noAccess\": zod.boolean(),\r\n  \"isTrashed\": zod.boolean(),\r\n  \"id\": zod.string().uuid(),\r\n  \"createDate\": zod.string().datetime({\"local\":true}),\r\n  \"mediaType\": zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"icon\": zod.string(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n}),\r\n  \"variants\": zod.array(zod.object({\r\n  \"name\": zod.string(),\r\n  \"culture\": zod.string().nullish()\r\n}))\r\n}))\r\n})\r\n\r\n\r\nexport const getTreeMediaRootQuerySkipDefault = 0;export const getTreeMediaRootQueryTakeDefault = 100;\r\n\r\nexport const getTreeMediaRootQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getTreeMediaRootQueryTakeDefault),\r\n  \"dataTypeId\": zod.string().uuid().optional()\r\n})\r\n\r\nexport const getTreeMediaRootResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"noAccess\": zod.boolean(),\r\n  \"isTrashed\": zod.boolean(),\r\n  \"id\": zod.string().uuid(),\r\n  \"createDate\": zod.string().datetime({\"local\":true}),\r\n  \"mediaType\": zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"icon\": zod.string(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n}),\r\n  \"variants\": zod.array(zod.object({\r\n  \"name\": zod.string(),\r\n  \"culture\": zod.string().nullish()\r\n}))\r\n}))\r\n})\r\n\r\n\r\nexport const getItemMemberGroupQueryParams = zod.object({\r\n  \"id\": zod.array(zod.string().uuid()).optional()\r\n})\r\n\r\nexport const getItemMemberGroupResponseItem = zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string()\r\n})\r\nexport const getItemMemberGroupResponse = zod.array(getItemMemberGroupResponseItem)\r\n\r\n\r\nexport const getMemberGroupQuerySkipDefault = 0;export const getMemberGroupQueryTakeDefault = 100;\r\n\r\nexport const getMemberGroupQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getMemberGroupQueryTakeDefault)\r\n})\r\n\r\nexport const getMemberGroupResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"name\": zod.string(),\r\n  \"id\": zod.string().uuid()\r\n}))\r\n})\r\n\r\n\r\nexport const postMemberGroupBody = zod.object({\r\n  \"name\": zod.string(),\r\n  \"id\": zod.string().uuid().nullish()\r\n})\r\n\r\n\r\nexport const getMemberGroupByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getMemberGroupByIdResponse = zod.object({\r\n  \"name\": zod.string(),\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const deleteMemberGroupByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const putMemberGroupByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putMemberGroupByIdBody = zod.object({\r\n  \"name\": zod.string()\r\n})\r\n\r\n\r\nexport const getTreeMemberGroupRootQuerySkipDefault = 0;export const getTreeMemberGroupRootQueryTakeDefault = 100;\r\n\r\nexport const getTreeMemberGroupRootQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getTreeMemberGroupRootQueryTakeDefault)\r\n})\r\n\r\nexport const getTreeMemberGroupRootResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"id\": zod.string().uuid(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"name\": zod.string()\r\n}))\r\n})\r\n\r\n\r\nexport const getItemMemberTypeQueryParams = zod.object({\r\n  \"id\": zod.array(zod.string().uuid()).optional()\r\n})\r\n\r\nexport const getItemMemberTypeResponseItem = zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string(),\r\n  \"icon\": zod.string().nullish()\r\n})\r\nexport const getItemMemberTypeResponse = zod.array(getItemMemberTypeResponseItem)\r\n\r\n\r\nexport const getItemMemberTypeSearchQuerySkipDefault = 0;export const getItemMemberTypeSearchQueryTakeDefault = 100;\r\n\r\nexport const getItemMemberTypeSearchQueryParams = zod.object({\r\n  \"query\": zod.string().optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getItemMemberTypeSearchQueryTakeDefault)\r\n})\r\n\r\nexport const getItemMemberTypeSearchResponse = zod.object({\r\n  \"items\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string(),\r\n  \"icon\": zod.string().nullish()\r\n})),\r\n  \"total\": zod.number()\r\n})\r\n\r\n\r\nexport const postMemberTypeBody = zod.object({\r\n  \"alias\": zod.string().min(1),\r\n  \"name\": zod.string().min(1),\r\n  \"description\": zod.string().nullish(),\r\n  \"icon\": zod.string().min(1),\r\n  \"allowedAsRoot\": zod.boolean(),\r\n  \"variesByCulture\": zod.boolean(),\r\n  \"variesBySegment\": zod.boolean(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"isElement\": zod.boolean(),\r\n  \"properties\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"container\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"sortOrder\": zod.number(),\r\n  \"alias\": zod.string().min(1),\r\n  \"name\": zod.string().min(1),\r\n  \"description\": zod.string().nullish(),\r\n  \"dataType\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"variesByCulture\": zod.boolean(),\r\n  \"variesBySegment\": zod.boolean(),\r\n  \"validation\": zod.object({\r\n  \"mandatory\": zod.boolean(),\r\n  \"mandatoryMessage\": zod.string().nullish(),\r\n  \"regEx\": zod.string().nullish(),\r\n  \"regExMessage\": zod.string().nullish()\r\n}),\r\n  \"appearance\": zod.object({\r\n  \"labelOnTop\": zod.boolean()\r\n}),\r\n  \"isSensitive\": zod.boolean(),\r\n  \"visibility\": zod.object({\r\n  \"memberCanView\": zod.boolean(),\r\n  \"memberCanEdit\": zod.boolean()\r\n})\r\n})),\r\n  \"containers\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"name\": zod.string().nullish(),\r\n  \"type\": zod.string().min(1),\r\n  \"sortOrder\": zod.number()\r\n})),\r\n  \"id\": zod.string().uuid().nullish(),\r\n  \"compositions\": zod.array(zod.object({\r\n  \"memberType\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"compositionType\": zod.enum(['Composition', 'Inheritance'])\r\n}))\r\n})\r\n\r\n\r\nexport const getMemberTypeByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getMemberTypeByIdResponse = zod.object({\r\n  \"alias\": zod.string().min(1),\r\n  \"name\": zod.string().min(1),\r\n  \"description\": zod.string().nullish(),\r\n  \"icon\": zod.string().min(1),\r\n  \"allowedAsRoot\": zod.boolean(),\r\n  \"variesByCulture\": zod.boolean(),\r\n  \"variesBySegment\": zod.boolean(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"isElement\": zod.boolean(),\r\n  \"properties\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"container\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"sortOrder\": zod.number(),\r\n  \"alias\": zod.string().min(1),\r\n  \"name\": zod.string().min(1),\r\n  \"description\": zod.string().nullish(),\r\n  \"dataType\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"variesByCulture\": zod.boolean(),\r\n  \"variesBySegment\": zod.boolean(),\r\n  \"validation\": zod.object({\r\n  \"mandatory\": zod.boolean(),\r\n  \"mandatoryMessage\": zod.string().nullish(),\r\n  \"regEx\": zod.string().nullish(),\r\n  \"regExMessage\": zod.string().nullish()\r\n}),\r\n  \"appearance\": zod.object({\r\n  \"labelOnTop\": zod.boolean()\r\n}),\r\n  \"isSensitive\": zod.boolean(),\r\n  \"visibility\": zod.object({\r\n  \"memberCanView\": zod.boolean(),\r\n  \"memberCanEdit\": zod.boolean()\r\n})\r\n})),\r\n  \"containers\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"name\": zod.string().nullish(),\r\n  \"type\": zod.string().min(1),\r\n  \"sortOrder\": zod.number()\r\n})),\r\n  \"id\": zod.string().uuid(),\r\n  \"compositions\": zod.array(zod.object({\r\n  \"memberType\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"compositionType\": zod.enum(['Composition', 'Inheritance'])\r\n}))\r\n})\r\n\r\n\r\nexport const deleteMemberTypeByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const putMemberTypeByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putMemberTypeByIdBody = zod.object({\r\n  \"alias\": zod.string().min(1),\r\n  \"name\": zod.string().min(1),\r\n  \"description\": zod.string().nullish(),\r\n  \"icon\": zod.string().min(1),\r\n  \"allowedAsRoot\": zod.boolean(),\r\n  \"variesByCulture\": zod.boolean(),\r\n  \"variesBySegment\": zod.boolean(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"isElement\": zod.boolean(),\r\n  \"properties\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"container\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"sortOrder\": zod.number(),\r\n  \"alias\": zod.string().min(1),\r\n  \"name\": zod.string().min(1),\r\n  \"description\": zod.string().nullish(),\r\n  \"dataType\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"variesByCulture\": zod.boolean(),\r\n  \"variesBySegment\": zod.boolean(),\r\n  \"validation\": zod.object({\r\n  \"mandatory\": zod.boolean(),\r\n  \"mandatoryMessage\": zod.string().nullish(),\r\n  \"regEx\": zod.string().nullish(),\r\n  \"regExMessage\": zod.string().nullish()\r\n}),\r\n  \"appearance\": zod.object({\r\n  \"labelOnTop\": zod.boolean()\r\n}),\r\n  \"isSensitive\": zod.boolean(),\r\n  \"visibility\": zod.object({\r\n  \"memberCanView\": zod.boolean(),\r\n  \"memberCanEdit\": zod.boolean()\r\n})\r\n})),\r\n  \"containers\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"name\": zod.string().nullish(),\r\n  \"type\": zod.string().min(1),\r\n  \"sortOrder\": zod.number()\r\n})),\r\n  \"compositions\": zod.array(zod.object({\r\n  \"memberType\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"compositionType\": zod.enum(['Composition', 'Inheritance'])\r\n}))\r\n})\r\n\r\n\r\nexport const getMemberTypeByIdCompositionReferencesParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getMemberTypeByIdCompositionReferencesResponseItem = zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string(),\r\n  \"icon\": zod.string()\r\n})\r\nexport const getMemberTypeByIdCompositionReferencesResponse = zod.array(getMemberTypeByIdCompositionReferencesResponseItem)\r\n\r\n\r\nexport const postMemberTypeByIdCopyParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const postMemberTypeAvailableCompositionsBody = zod.object({\r\n  \"id\": zod.string().uuid().nullish(),\r\n  \"currentPropertyAliases\": zod.array(zod.string()),\r\n  \"currentCompositeIds\": zod.array(zod.string().uuid())\r\n})\r\n\r\nexport const postMemberTypeAvailableCompositionsResponseItem = zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string(),\r\n  \"icon\": zod.string(),\r\n  \"folderPath\": zod.array(zod.string()),\r\n  \"isCompatible\": zod.boolean()\r\n})\r\nexport const postMemberTypeAvailableCompositionsResponse = zod.array(postMemberTypeAvailableCompositionsResponseItem)\r\n\r\n\r\nexport const getMemberTypeConfigurationResponse = zod.object({\r\n  \"reservedFieldNames\": zod.array(zod.string())\r\n})\r\n\r\n\r\nexport const getTreeMemberTypeRootQuerySkipDefault = 0;export const getTreeMemberTypeRootQueryTakeDefault = 100;\r\n\r\nexport const getTreeMemberTypeRootQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getTreeMemberTypeRootQueryTakeDefault)\r\n})\r\n\r\nexport const getTreeMemberTypeRootResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"id\": zod.string().uuid(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"name\": zod.string(),\r\n  \"icon\": zod.string()\r\n}))\r\n})\r\n\r\n\r\nexport const getFilterMemberQueryOrderByDefault = \"username\";export const getFilterMemberQuerySkipDefault = 0;export const getFilterMemberQueryTakeDefault = 100;\r\n\r\nexport const getFilterMemberQueryParams = zod.object({\r\n  \"memberTypeId\": zod.string().uuid().optional(),\r\n  \"memberGroupName\": zod.string().optional(),\r\n  \"isApproved\": zod.boolean().optional(),\r\n  \"isLockedOut\": zod.boolean().optional(),\r\n  \"orderBy\": zod.string().default(getFilterMemberQueryOrderByDefault),\r\n  \"orderDirection\": zod.enum(['Ascending', 'Descending']).optional(),\r\n  \"filter\": zod.string().optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getFilterMemberQueryTakeDefault)\r\n})\r\n\r\nexport const getFilterMemberResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"values\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"alias\": zod.string().min(1),\r\n  \"value\": zod.any().nullish(),\r\n  \"editorAlias\": zod.string().min(1)\r\n})),\r\n  \"variants\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"name\": zod.string().min(1),\r\n  \"createDate\": zod.string().datetime({\"local\":true}),\r\n  \"updateDate\": zod.string().datetime({\"local\":true})\r\n})),\r\n  \"id\": zod.string().uuid(),\r\n  \"email\": zod.string(),\r\n  \"username\": zod.string(),\r\n  \"memberType\": zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"icon\": zod.string(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n}),\r\n  \"isApproved\": zod.boolean(),\r\n  \"isLockedOut\": zod.boolean(),\r\n  \"isTwoFactorEnabled\": zod.boolean(),\r\n  \"failedPasswordAttempts\": zod.number(),\r\n  \"lastLoginDate\": zod.string().datetime({\"local\":true}).nullish(),\r\n  \"lastLockoutDate\": zod.string().datetime({\"local\":true}).nullish(),\r\n  \"lastPasswordChangeDate\": zod.string().datetime({\"local\":true}).nullish(),\r\n  \"groups\": zod.array(zod.string().uuid()),\r\n  \"kind\": zod.enum(['Default', 'Api'])\r\n}))\r\n})\r\n\r\n\r\nexport const getItemMemberQueryParams = zod.object({\r\n  \"id\": zod.array(zod.string().uuid()).optional()\r\n})\r\n\r\nexport const getItemMemberResponseItem = zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"memberType\": zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"icon\": zod.string(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n}),\r\n  \"variants\": zod.array(zod.object({\r\n  \"name\": zod.string(),\r\n  \"culture\": zod.string().nullish()\r\n})),\r\n  \"kind\": zod.enum(['Default', 'Api'])\r\n})\r\nexport const getItemMemberResponse = zod.array(getItemMemberResponseItem)\r\n\r\n\r\nexport const getItemMemberSearchQuerySkipDefault = 0;export const getItemMemberSearchQueryTakeDefault = 100;\r\n\r\nexport const getItemMemberSearchQueryParams = zod.object({\r\n  \"query\": zod.string().optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getItemMemberSearchQueryTakeDefault),\r\n  \"allowedMemberTypes\": zod.array(zod.string().uuid()).optional()\r\n})\r\n\r\nexport const getItemMemberSearchResponse = zod.object({\r\n  \"items\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"memberType\": zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"icon\": zod.string(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n}),\r\n  \"variants\": zod.array(zod.object({\r\n  \"name\": zod.string(),\r\n  \"culture\": zod.string().nullish()\r\n})),\r\n  \"kind\": zod.enum(['Default', 'Api'])\r\n})),\r\n  \"total\": zod.number()\r\n})\r\n\r\n\r\nexport const postMemberBody = zod.object({\r\n  \"values\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"alias\": zod.string().min(1),\r\n  \"value\": zod.any().nullish()\r\n})),\r\n  \"variants\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"name\": zod.string().min(1)\r\n})),\r\n  \"id\": zod.string().uuid().nullish(),\r\n  \"email\": zod.string(),\r\n  \"username\": zod.string(),\r\n  \"password\": zod.string(),\r\n  \"memberType\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"groups\": zod.array(zod.string().uuid()).nullish(),\r\n  \"isApproved\": zod.boolean()\r\n})\r\n\r\n\r\nexport const getMemberByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getMemberByIdResponse = zod.object({\r\n  \"values\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"alias\": zod.string().min(1),\r\n  \"value\": zod.any().nullish(),\r\n  \"editorAlias\": zod.string().min(1)\r\n})),\r\n  \"variants\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"name\": zod.string().min(1),\r\n  \"createDate\": zod.string().datetime({\"local\":true}),\r\n  \"updateDate\": zod.string().datetime({\"local\":true})\r\n})),\r\n  \"id\": zod.string().uuid(),\r\n  \"email\": zod.string(),\r\n  \"username\": zod.string(),\r\n  \"memberType\": zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"icon\": zod.string(),\r\n  \"collection\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n}),\r\n  \"isApproved\": zod.boolean(),\r\n  \"isLockedOut\": zod.boolean(),\r\n  \"isTwoFactorEnabled\": zod.boolean(),\r\n  \"failedPasswordAttempts\": zod.number(),\r\n  \"lastLoginDate\": zod.string().datetime({\"local\":true}).nullish(),\r\n  \"lastLockoutDate\": zod.string().datetime({\"local\":true}).nullish(),\r\n  \"lastPasswordChangeDate\": zod.string().datetime({\"local\":true}).nullish(),\r\n  \"groups\": zod.array(zod.string().uuid()),\r\n  \"kind\": zod.enum(['Default', 'Api'])\r\n})\r\n\r\n\r\nexport const deleteMemberByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const putMemberByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putMemberByIdBody = zod.object({\r\n  \"values\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"alias\": zod.string().min(1),\r\n  \"value\": zod.any().nullish()\r\n})),\r\n  \"variants\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"name\": zod.string().min(1)\r\n})),\r\n  \"email\": zod.string(),\r\n  \"username\": zod.string(),\r\n  \"oldPassword\": zod.string().nullish(),\r\n  \"newPassword\": zod.string().nullish(),\r\n  \"groups\": zod.array(zod.string().uuid()).nullish(),\r\n  \"isApproved\": zod.boolean(),\r\n  \"isLockedOut\": zod.boolean(),\r\n  \"isTwoFactorEnabled\": zod.boolean()\r\n})\r\n\r\n\r\nexport const putMemberByIdValidateParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putMemberByIdValidateBody = zod.object({\r\n  \"values\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"alias\": zod.string().min(1),\r\n  \"value\": zod.any().nullish()\r\n})),\r\n  \"variants\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"name\": zod.string().min(1)\r\n})),\r\n  \"email\": zod.string(),\r\n  \"username\": zod.string(),\r\n  \"oldPassword\": zod.string().nullish(),\r\n  \"newPassword\": zod.string().nullish(),\r\n  \"groups\": zod.array(zod.string().uuid()).nullish(),\r\n  \"isApproved\": zod.boolean(),\r\n  \"isLockedOut\": zod.boolean(),\r\n  \"isTwoFactorEnabled\": zod.boolean()\r\n})\r\n\r\n\r\nexport const getMemberConfigurationResponse = zod.object({\r\n  \"reservedFieldNames\": zod.array(zod.string())\r\n})\r\n\r\n\r\nexport const postMemberValidateBody = zod.object({\r\n  \"values\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"alias\": zod.string().min(1),\r\n  \"value\": zod.any().nullish()\r\n})),\r\n  \"variants\": zod.array(zod.object({\r\n  \"culture\": zod.string().nullish(),\r\n  \"segment\": zod.string().nullish(),\r\n  \"name\": zod.string().min(1)\r\n})),\r\n  \"id\": zod.string().uuid().nullish(),\r\n  \"email\": zod.string(),\r\n  \"username\": zod.string(),\r\n  \"password\": zod.string(),\r\n  \"memberType\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"groups\": zod.array(zod.string().uuid()).nullish(),\r\n  \"isApproved\": zod.boolean()\r\n})\r\n\r\n\r\nexport const getModelsBuilderDashboardResponse = zod.object({\r\n  \"mode\": zod.enum(['Nothing', 'InMemoryAuto', 'SourceCodeManual', 'SourceCodeAuto']),\r\n  \"canGenerate\": zod.boolean(),\r\n  \"outOfDateModels\": zod.boolean(),\r\n  \"lastError\": zod.string().nullish(),\r\n  \"version\": zod.string().nullish(),\r\n  \"modelsNamespace\": zod.string().nullish(),\r\n  \"trackingOutOfDateModels\": zod.boolean()\r\n})\r\n\r\n\r\nexport const getModelsBuilderStatusResponse = zod.object({\r\n  \"status\": zod.enum(['OutOfDate', 'Current', 'Unknown'])\r\n})\r\n\r\n\r\nexport const getObjectTypesQuerySkipDefault = 0;export const getObjectTypesQueryTakeDefault = 100;\r\n\r\nexport const getObjectTypesQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getObjectTypesQueryTakeDefault)\r\n})\r\n\r\nexport const getObjectTypesResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"name\": zod.string().nullish(),\r\n  \"id\": zod.string().uuid()\r\n}))\r\n})\r\n\r\n\r\nexport const getOembedQueryQueryParams = zod.object({\r\n  \"url\": zod.string().url().optional(),\r\n  \"maxWidth\": zod.number().optional(),\r\n  \"maxHeight\": zod.number().optional()\r\n})\r\n\r\nexport const getOembedQueryResponse = zod.object({\r\n  \"markup\": zod.string()\r\n})\r\n\r\n\r\nexport const postPackageByNameRunMigrationParams = zod.object({\r\n  \"name\": zod.string()\r\n})\r\n\r\n\r\nexport const getPackageConfigurationResponse = zod.object({\r\n  \"marketplaceUrl\": zod.string()\r\n})\r\n\r\n\r\nexport const getPackageCreatedQuerySkipDefault = 0;export const getPackageCreatedQueryTakeDefault = 100;\r\n\r\nexport const getPackageCreatedQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getPackageCreatedQueryTakeDefault)\r\n})\r\n\r\nexport const getPackageCreatedResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"name\": zod.string(),\r\n  \"contentNodeId\": zod.string().nullish(),\r\n  \"contentLoadChildNodes\": zod.boolean(),\r\n  \"mediaIds\": zod.array(zod.string().uuid()),\r\n  \"mediaLoadChildNodes\": zod.boolean(),\r\n  \"documentTypes\": zod.array(zod.string()),\r\n  \"mediaTypes\": zod.array(zod.string()),\r\n  \"dataTypes\": zod.array(zod.string()),\r\n  \"templates\": zod.array(zod.string()),\r\n  \"partialViews\": zod.array(zod.string()),\r\n  \"stylesheets\": zod.array(zod.string()),\r\n  \"scripts\": zod.array(zod.string()),\r\n  \"languages\": zod.array(zod.string()),\r\n  \"dictionaryItems\": zod.array(zod.string()),\r\n  \"id\": zod.string().uuid(),\r\n  \"packagePath\": zod.string()\r\n}))\r\n})\r\n\r\n\r\nexport const postPackageCreatedBody = zod.object({\r\n  \"name\": zod.string(),\r\n  \"contentNodeId\": zod.string().nullish(),\r\n  \"contentLoadChildNodes\": zod.boolean(),\r\n  \"mediaIds\": zod.array(zod.string().uuid()),\r\n  \"mediaLoadChildNodes\": zod.boolean(),\r\n  \"documentTypes\": zod.array(zod.string()),\r\n  \"mediaTypes\": zod.array(zod.string()),\r\n  \"dataTypes\": zod.array(zod.string()),\r\n  \"templates\": zod.array(zod.string()),\r\n  \"partialViews\": zod.array(zod.string()),\r\n  \"stylesheets\": zod.array(zod.string()),\r\n  \"scripts\": zod.array(zod.string()),\r\n  \"languages\": zod.array(zod.string()),\r\n  \"dictionaryItems\": zod.array(zod.string()),\r\n  \"id\": zod.string().uuid().nullish()\r\n})\r\n\r\n\r\nexport const getPackageCreatedByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getPackageCreatedByIdResponse = zod.object({\r\n  \"name\": zod.string(),\r\n  \"contentNodeId\": zod.string().nullish(),\r\n  \"contentLoadChildNodes\": zod.boolean(),\r\n  \"mediaIds\": zod.array(zod.string().uuid()),\r\n  \"mediaLoadChildNodes\": zod.boolean(),\r\n  \"documentTypes\": zod.array(zod.string()),\r\n  \"mediaTypes\": zod.array(zod.string()),\r\n  \"dataTypes\": zod.array(zod.string()),\r\n  \"templates\": zod.array(zod.string()),\r\n  \"partialViews\": zod.array(zod.string()),\r\n  \"stylesheets\": zod.array(zod.string()),\r\n  \"scripts\": zod.array(zod.string()),\r\n  \"languages\": zod.array(zod.string()),\r\n  \"dictionaryItems\": zod.array(zod.string()),\r\n  \"id\": zod.string().uuid(),\r\n  \"packagePath\": zod.string()\r\n})\r\n\r\n\r\nexport const deletePackageCreatedByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const putPackageCreatedByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putPackageCreatedByIdBody = zod.object({\r\n  \"name\": zod.string(),\r\n  \"contentNodeId\": zod.string().nullish(),\r\n  \"contentLoadChildNodes\": zod.boolean(),\r\n  \"mediaIds\": zod.array(zod.string().uuid()),\r\n  \"mediaLoadChildNodes\": zod.boolean(),\r\n  \"documentTypes\": zod.array(zod.string()),\r\n  \"mediaTypes\": zod.array(zod.string()),\r\n  \"dataTypes\": zod.array(zod.string()),\r\n  \"templates\": zod.array(zod.string()),\r\n  \"partialViews\": zod.array(zod.string()),\r\n  \"stylesheets\": zod.array(zod.string()),\r\n  \"scripts\": zod.array(zod.string()),\r\n  \"languages\": zod.array(zod.string()),\r\n  \"dictionaryItems\": zod.array(zod.string()),\r\n  \"packagePath\": zod.string()\r\n})\r\n\r\n\r\nexport const getPackageCreatedByIdDownloadParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getPackageCreatedByIdDownloadResponse = zod.instanceof(FileLike)\r\n\r\n\r\nexport const getPackageMigrationStatusQuerySkipDefault = 0;export const getPackageMigrationStatusQueryTakeDefault = 100;\r\n\r\nexport const getPackageMigrationStatusQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getPackageMigrationStatusQueryTakeDefault)\r\n})\r\n\r\nexport const getPackageMigrationStatusResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"packageName\": zod.string(),\r\n  \"hasPendingMigrations\": zod.boolean()\r\n}))\r\n})\r\n\r\n\r\nexport const getItemPartialViewQueryParams = zod.object({\r\n  \"path\": zod.array(zod.string()).optional()\r\n})\r\n\r\nexport const getItemPartialViewResponseItem = zod.object({\r\n  \"path\": zod.string(),\r\n  \"name\": zod.string(),\r\n  \"parent\": zod.object({\r\n  \"path\": zod.string()\r\n}).nullish(),\r\n  \"isFolder\": zod.boolean()\r\n})\r\nexport const getItemPartialViewResponse = zod.array(getItemPartialViewResponseItem)\r\n\r\n\r\nexport const postPartialViewBody = zod.object({\r\n  \"name\": zod.string(),\r\n  \"parent\": zod.object({\r\n  \"path\": zod.string()\r\n}).nullish(),\r\n  \"content\": zod.string()\r\n})\r\n\r\n\r\nexport const getPartialViewByPathParams = zod.object({\r\n  \"path\": zod.string()\r\n})\r\n\r\nexport const getPartialViewByPathResponse = zod.object({\r\n  \"path\": zod.string(),\r\n  \"name\": zod.string(),\r\n  \"parent\": zod.object({\r\n  \"path\": zod.string()\r\n}).nullish(),\r\n  \"content\": zod.string()\r\n})\r\n\r\n\r\nexport const deletePartialViewByPathParams = zod.object({\r\n  \"path\": zod.string()\r\n})\r\n\r\n\r\nexport const putPartialViewByPathParams = zod.object({\r\n  \"path\": zod.string()\r\n})\r\n\r\nexport const putPartialViewByPathBody = zod.object({\r\n  \"content\": zod.string()\r\n})\r\n\r\n\r\nexport const putPartialViewByPathRenameParams = zod.object({\r\n  \"path\": zod.string()\r\n})\r\n\r\nexport const putPartialViewByPathRenameBody = zod.object({\r\n  \"name\": zod.string()\r\n})\r\n\r\n\r\nexport const postPartialViewFolderBody = zod.object({\r\n  \"name\": zod.string(),\r\n  \"parent\": zod.object({\r\n  \"path\": zod.string()\r\n}).nullish()\r\n})\r\n\r\n\r\nexport const getPartialViewFolderByPathParams = zod.object({\r\n  \"path\": zod.string()\r\n})\r\n\r\nexport const getPartialViewFolderByPathResponse = zod.object({\r\n  \"path\": zod.string(),\r\n  \"name\": zod.string(),\r\n  \"parent\": zod.object({\r\n  \"path\": zod.string()\r\n}).nullish()\r\n})\r\n\r\n\r\nexport const deletePartialViewFolderByPathParams = zod.object({\r\n  \"path\": zod.string()\r\n})\r\n\r\n\r\nexport const getPartialViewSnippetQuerySkipDefault = 0;export const getPartialViewSnippetQueryTakeDefault = 100;\r\n\r\nexport const getPartialViewSnippetQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getPartialViewSnippetQueryTakeDefault)\r\n})\r\n\r\nexport const getPartialViewSnippetResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"id\": zod.string(),\r\n  \"name\": zod.string()\r\n}))\r\n})\r\n\r\n\r\nexport const getPartialViewSnippetByIdParams = zod.object({\r\n  \"id\": zod.string()\r\n})\r\n\r\nexport const getPartialViewSnippetByIdResponse = zod.object({\r\n  \"id\": zod.string(),\r\n  \"name\": zod.string(),\r\n  \"content\": zod.string()\r\n})\r\n\r\n\r\nexport const getTreePartialViewAncestorsQueryParams = zod.object({\r\n  \"descendantPath\": zod.string().optional()\r\n})\r\n\r\nexport const getTreePartialViewAncestorsResponseItem = zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"name\": zod.string(),\r\n  \"path\": zod.string(),\r\n  \"parent\": zod.object({\r\n  \"path\": zod.string()\r\n}).nullish(),\r\n  \"isFolder\": zod.boolean()\r\n})\r\nexport const getTreePartialViewAncestorsResponse = zod.array(getTreePartialViewAncestorsResponseItem)\r\n\r\n\r\nexport const getTreePartialViewChildrenQuerySkipDefault = 0;export const getTreePartialViewChildrenQueryTakeDefault = 100;\r\n\r\nexport const getTreePartialViewChildrenQueryParams = zod.object({\r\n  \"parentPath\": zod.string().optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getTreePartialViewChildrenQueryTakeDefault)\r\n})\r\n\r\nexport const getTreePartialViewChildrenResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"name\": zod.string(),\r\n  \"path\": zod.string(),\r\n  \"parent\": zod.object({\r\n  \"path\": zod.string()\r\n}).nullish(),\r\n  \"isFolder\": zod.boolean()\r\n}))\r\n})\r\n\r\n\r\nexport const getTreePartialViewRootQuerySkipDefault = 0;export const getTreePartialViewRootQueryTakeDefault = 100;\r\n\r\nexport const getTreePartialViewRootQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getTreePartialViewRootQueryTakeDefault)\r\n})\r\n\r\nexport const getTreePartialViewRootResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"name\": zod.string(),\r\n  \"path\": zod.string(),\r\n  \"parent\": zod.object({\r\n  \"path\": zod.string()\r\n}).nullish(),\r\n  \"isFolder\": zod.boolean()\r\n}))\r\n})\r\n\r\n\r\nexport const getProfilingStatusResponse = zod.object({\r\n  \"enabled\": zod.boolean()\r\n})\r\n\r\n\r\nexport const putProfilingStatusBody = zod.object({\r\n  \"enabled\": zod.boolean()\r\n})\r\n\r\n\r\nexport const getPropertyTypeIsUsedQueryParams = zod.object({\r\n  \"contentTypeId\": zod.string().uuid().optional(),\r\n  \"propertyAlias\": zod.string().optional()\r\n})\r\n\r\nexport const getPropertyTypeIsUsedResponse = zod.boolean()\r\n\r\n\r\nexport const getRedirectManagementQuerySkipDefault = 0;export const getRedirectManagementQueryTakeDefault = 100;\r\n\r\nexport const getRedirectManagementQueryParams = zod.object({\r\n  \"filter\": zod.string().optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getRedirectManagementQueryTakeDefault)\r\n})\r\n\r\nexport const getRedirectManagementResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"originalUrl\": zod.string(),\r\n  \"destinationUrl\": zod.string(),\r\n  \"created\": zod.string().datetime({\"local\":true}),\r\n  \"document\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"culture\": zod.string().nullish()\r\n}))\r\n})\r\n\r\n\r\nexport const getRedirectManagementByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getRedirectManagementByIdQuerySkipDefault = 0;export const getRedirectManagementByIdQueryTakeDefault = 100;\r\n\r\nexport const getRedirectManagementByIdQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getRedirectManagementByIdQueryTakeDefault)\r\n})\r\n\r\nexport const getRedirectManagementByIdResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"originalUrl\": zod.string(),\r\n  \"destinationUrl\": zod.string(),\r\n  \"created\": zod.string().datetime({\"local\":true}),\r\n  \"document\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"culture\": zod.string().nullish()\r\n}))\r\n})\r\n\r\n\r\nexport const deleteRedirectManagementByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const getRedirectManagementStatusResponse = zod.object({\r\n  \"status\": zod.enum(['Enabled', 'Disabled']),\r\n  \"userIsAdmin\": zod.boolean()\r\n})\r\n\r\n\r\nexport const postRedirectManagementStatusQueryParams = zod.object({\r\n  \"status\": zod.enum(['Enabled', 'Disabled']).optional()\r\n})\r\n\r\n\r\nexport const getItemRelationTypeQueryParams = zod.object({\r\n  \"id\": zod.array(zod.string().uuid()).optional()\r\n})\r\n\r\nexport const getItemRelationTypeResponseItem = zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string(),\r\n  \"isDeletable\": zod.boolean()\r\n})\r\nexport const getItemRelationTypeResponse = zod.array(getItemRelationTypeResponseItem)\r\n\r\n\r\nexport const getRelationTypeQuerySkipDefault = 0;export const getRelationTypeQueryTakeDefault = 100;\r\n\r\nexport const getRelationTypeQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getRelationTypeQueryTakeDefault)\r\n})\r\n\r\nexport const getRelationTypeResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"name\": zod.string().min(1),\r\n  \"isBidirectional\": zod.boolean(),\r\n  \"isDependency\": zod.boolean(),\r\n  \"id\": zod.string().uuid(),\r\n  \"alias\": zod.string().nullish(),\r\n  \"parentObject\": zod.object({\r\n  \"name\": zod.string().nullish(),\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"childObject\": zod.object({\r\n  \"name\": zod.string().nullish(),\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n}))\r\n})\r\n\r\n\r\nexport const getRelationTypeByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getRelationTypeByIdResponse = zod.object({\r\n  \"name\": zod.string().min(1),\r\n  \"isBidirectional\": zod.boolean(),\r\n  \"isDependency\": zod.boolean(),\r\n  \"id\": zod.string().uuid(),\r\n  \"alias\": zod.string().nullish(),\r\n  \"parentObject\": zod.object({\r\n  \"name\": zod.string().nullish(),\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"childObject\": zod.object({\r\n  \"name\": zod.string().nullish(),\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n})\r\n\r\n\r\nexport const getRelationByRelationTypeIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getRelationByRelationTypeIdQuerySkipDefault = 0;export const getRelationByRelationTypeIdQueryTakeDefault = 100;\r\n\r\nexport const getRelationByRelationTypeIdQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getRelationByRelationTypeIdQueryTakeDefault)\r\n})\r\n\r\nexport const getRelationByRelationTypeIdResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"relationType\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string().nullish()\r\n}),\r\n  \"child\": zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string().nullish()\r\n}),\r\n  \"createDate\": zod.string().datetime({\"local\":true}),\r\n  \"comment\": zod.string().nullish()\r\n}))\r\n})\r\n\r\n\r\nexport const getItemScriptQueryParams = zod.object({\r\n  \"path\": zod.array(zod.string()).optional()\r\n})\r\n\r\nexport const getItemScriptResponseItem = zod.object({\r\n  \"path\": zod.string(),\r\n  \"name\": zod.string(),\r\n  \"parent\": zod.object({\r\n  \"path\": zod.string()\r\n}).nullish(),\r\n  \"isFolder\": zod.boolean()\r\n})\r\nexport const getItemScriptResponse = zod.array(getItemScriptResponseItem)\r\n\r\n\r\nexport const postScriptBody = zod.object({\r\n  \"name\": zod.string(),\r\n  \"parent\": zod.object({\r\n  \"path\": zod.string()\r\n}).nullish(),\r\n  \"content\": zod.string()\r\n})\r\n\r\n\r\nexport const getScriptByPathParams = zod.object({\r\n  \"path\": zod.string()\r\n})\r\n\r\nexport const getScriptByPathResponse = zod.object({\r\n  \"path\": zod.string(),\r\n  \"name\": zod.string(),\r\n  \"parent\": zod.object({\r\n  \"path\": zod.string()\r\n}).nullish(),\r\n  \"content\": zod.string()\r\n})\r\n\r\n\r\nexport const deleteScriptByPathParams = zod.object({\r\n  \"path\": zod.string()\r\n})\r\n\r\n\r\nexport const putScriptByPathParams = zod.object({\r\n  \"path\": zod.string()\r\n})\r\n\r\nexport const putScriptByPathBody = zod.object({\r\n  \"content\": zod.string()\r\n})\r\n\r\n\r\nexport const putScriptByPathRenameParams = zod.object({\r\n  \"path\": zod.string()\r\n})\r\n\r\nexport const putScriptByPathRenameBody = zod.object({\r\n  \"name\": zod.string()\r\n})\r\n\r\n\r\nexport const postScriptFolderBody = zod.object({\r\n  \"name\": zod.string(),\r\n  \"parent\": zod.object({\r\n  \"path\": zod.string()\r\n}).nullish()\r\n})\r\n\r\n\r\nexport const getScriptFolderByPathParams = zod.object({\r\n  \"path\": zod.string()\r\n})\r\n\r\nexport const getScriptFolderByPathResponse = zod.object({\r\n  \"path\": zod.string(),\r\n  \"name\": zod.string(),\r\n  \"parent\": zod.object({\r\n  \"path\": zod.string()\r\n}).nullish()\r\n})\r\n\r\n\r\nexport const deleteScriptFolderByPathParams = zod.object({\r\n  \"path\": zod.string()\r\n})\r\n\r\n\r\nexport const getTreeScriptAncestorsQueryParams = zod.object({\r\n  \"descendantPath\": zod.string().optional()\r\n})\r\n\r\nexport const getTreeScriptAncestorsResponseItem = zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"name\": zod.string(),\r\n  \"path\": zod.string(),\r\n  \"parent\": zod.object({\r\n  \"path\": zod.string()\r\n}).nullish(),\r\n  \"isFolder\": zod.boolean()\r\n})\r\nexport const getTreeScriptAncestorsResponse = zod.array(getTreeScriptAncestorsResponseItem)\r\n\r\n\r\nexport const getTreeScriptChildrenQuerySkipDefault = 0;export const getTreeScriptChildrenQueryTakeDefault = 100;\r\n\r\nexport const getTreeScriptChildrenQueryParams = zod.object({\r\n  \"parentPath\": zod.string().optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getTreeScriptChildrenQueryTakeDefault)\r\n})\r\n\r\nexport const getTreeScriptChildrenResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"name\": zod.string(),\r\n  \"path\": zod.string(),\r\n  \"parent\": zod.object({\r\n  \"path\": zod.string()\r\n}).nullish(),\r\n  \"isFolder\": zod.boolean()\r\n}))\r\n})\r\n\r\n\r\nexport const getTreeScriptRootQuerySkipDefault = 0;export const getTreeScriptRootQueryTakeDefault = 100;\r\n\r\nexport const getTreeScriptRootQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getTreeScriptRootQueryTakeDefault)\r\n})\r\n\r\nexport const getTreeScriptRootResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"name\": zod.string(),\r\n  \"path\": zod.string(),\r\n  \"parent\": zod.object({\r\n  \"path\": zod.string()\r\n}).nullish(),\r\n  \"isFolder\": zod.boolean()\r\n}))\r\n})\r\n\r\n\r\nexport const getSearcherQuerySkipDefault = 0;export const getSearcherQueryTakeDefault = 100;\r\n\r\nexport const getSearcherQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getSearcherQueryTakeDefault)\r\n})\r\n\r\nexport const getSearcherResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"name\": zod.string().min(1)\r\n}))\r\n})\r\n\r\n\r\nexport const getSearcherBySearcherNameQueryParams = zod.object({\r\n  \"searcherName\": zod.string()\r\n})\r\n\r\nexport const getSearcherBySearcherNameQueryQuerySkipDefault = 0;export const getSearcherBySearcherNameQueryQueryTakeDefault = 100;\r\n\r\nexport const getSearcherBySearcherNameQueryQueryParams = zod.object({\r\n  \"term\": zod.string().optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getSearcherBySearcherNameQueryQueryTakeDefault)\r\n})\r\n\r\nexport const getSearcherBySearcherNameQueryResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"id\": zod.string().min(1),\r\n  \"score\": zod.number(),\r\n  \"fieldCount\": zod.number(),\r\n  \"fields\": zod.array(zod.object({\r\n  \"name\": zod.string(),\r\n  \"values\": zod.array(zod.string())\r\n}))\r\n}))\r\n})\r\n\r\n\r\nexport const getSecurityConfigurationResponse = zod.object({\r\n  \"passwordConfiguration\": zod.object({\r\n  \"minimumPasswordLength\": zod.number(),\r\n  \"requireNonLetterOrDigit\": zod.boolean(),\r\n  \"requireDigit\": zod.boolean(),\r\n  \"requireLowercase\": zod.boolean(),\r\n  \"requireUppercase\": zod.boolean()\r\n})\r\n})\r\n\r\n\r\nexport const postSecurityForgotPasswordBody = zod.object({\r\n  \"email\": zod.string().min(1)\r\n})\r\n\r\n\r\nexport const postSecurityForgotPasswordResetBody = zod.object({\r\n  \"user\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"resetCode\": zod.string(),\r\n  \"password\": zod.string().min(1)\r\n})\r\n\r\n\r\nexport const postSecurityForgotPasswordVerifyBody = zod.object({\r\n  \"user\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"resetCode\": zod.string()\r\n})\r\n\r\nexport const postSecurityForgotPasswordVerifyResponse = zod.object({\r\n  \"passwordConfiguration\": zod.object({\r\n  \"minimumPasswordLength\": zod.number(),\r\n  \"requireNonLetterOrDigit\": zod.boolean(),\r\n  \"requireDigit\": zod.boolean(),\r\n  \"requireLowercase\": zod.boolean(),\r\n  \"requireUppercase\": zod.boolean()\r\n})\r\n})\r\n\r\n\r\nexport const getSegmentQuerySkipDefault = 0;export const getSegmentQueryTakeDefault = 100;\r\n\r\nexport const getSegmentQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getSegmentQueryTakeDefault)\r\n})\r\n\r\nexport const getSegmentResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"name\": zod.string(),\r\n  \"alias\": zod.string()\r\n}))\r\n})\r\n\r\n\r\nexport const getServerConfigurationResponse = zod.object({\r\n  \"allowPasswordReset\": zod.boolean(),\r\n  \"versionCheckPeriod\": zod.number(),\r\n  \"allowLocalLogin\": zod.boolean()\r\n})\r\n\r\n\r\nexport const getServerInformationResponse = zod.object({\r\n  \"version\": zod.string(),\r\n  \"assemblyVersion\": zod.string(),\r\n  \"baseUtcOffset\": zod.string(),\r\n  \"runtimeMode\": zod.enum(['BackofficeDevelopment', 'Development', 'Production'])\r\n})\r\n\r\n\r\nexport const getServerStatusResponse = zod.object({\r\n  \"serverStatus\": zod.enum(['Unknown', 'Boot', 'Install', 'Upgrade', 'Run', 'BootFailed'])\r\n})\r\n\r\n\r\nexport const getServerTroubleshootingResponse = zod.object({\r\n  \"items\": zod.array(zod.object({\r\n  \"name\": zod.string(),\r\n  \"data\": zod.string()\r\n}))\r\n})\r\n\r\n\r\nexport const getServerUpgradeCheckResponse = zod.object({\r\n  \"type\": zod.string(),\r\n  \"comment\": zod.string(),\r\n  \"url\": zod.string()\r\n})\r\n\r\n\r\nexport const getItemStaticFileQueryParams = zod.object({\r\n  \"path\": zod.array(zod.string()).optional()\r\n})\r\n\r\nexport const getItemStaticFileResponseItem = zod.object({\r\n  \"path\": zod.string(),\r\n  \"name\": zod.string(),\r\n  \"parent\": zod.object({\r\n  \"path\": zod.string()\r\n}).nullish(),\r\n  \"isFolder\": zod.boolean()\r\n})\r\nexport const getItemStaticFileResponse = zod.array(getItemStaticFileResponseItem)\r\n\r\n\r\nexport const getTreeStaticFileAncestorsQueryParams = zod.object({\r\n  \"descendantPath\": zod.string().optional()\r\n})\r\n\r\nexport const getTreeStaticFileAncestorsResponseItem = zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"name\": zod.string(),\r\n  \"path\": zod.string(),\r\n  \"parent\": zod.object({\r\n  \"path\": zod.string()\r\n}).nullish(),\r\n  \"isFolder\": zod.boolean()\r\n})\r\nexport const getTreeStaticFileAncestorsResponse = zod.array(getTreeStaticFileAncestorsResponseItem)\r\n\r\n\r\nexport const getTreeStaticFileChildrenQuerySkipDefault = 0;export const getTreeStaticFileChildrenQueryTakeDefault = 100;\r\n\r\nexport const getTreeStaticFileChildrenQueryParams = zod.object({\r\n  \"parentPath\": zod.string().optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getTreeStaticFileChildrenQueryTakeDefault)\r\n})\r\n\r\nexport const getTreeStaticFileChildrenResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"name\": zod.string(),\r\n  \"path\": zod.string(),\r\n  \"parent\": zod.object({\r\n  \"path\": zod.string()\r\n}).nullish(),\r\n  \"isFolder\": zod.boolean()\r\n}))\r\n})\r\n\r\n\r\nexport const getTreeStaticFileRootQuerySkipDefault = 0;export const getTreeStaticFileRootQueryTakeDefault = 100;\r\n\r\nexport const getTreeStaticFileRootQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getTreeStaticFileRootQueryTakeDefault)\r\n})\r\n\r\nexport const getTreeStaticFileRootResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"name\": zod.string(),\r\n  \"path\": zod.string(),\r\n  \"parent\": zod.object({\r\n  \"path\": zod.string()\r\n}).nullish(),\r\n  \"isFolder\": zod.boolean()\r\n}))\r\n})\r\n\r\n\r\nexport const getItemStylesheetQueryParams = zod.object({\r\n  \"path\": zod.array(zod.string()).optional()\r\n})\r\n\r\nexport const getItemStylesheetResponseItem = zod.object({\r\n  \"path\": zod.string(),\r\n  \"name\": zod.string(),\r\n  \"parent\": zod.object({\r\n  \"path\": zod.string()\r\n}).nullish(),\r\n  \"isFolder\": zod.boolean()\r\n})\r\nexport const getItemStylesheetResponse = zod.array(getItemStylesheetResponseItem)\r\n\r\n\r\nexport const postStylesheetBody = zod.object({\r\n  \"name\": zod.string(),\r\n  \"parent\": zod.object({\r\n  \"path\": zod.string()\r\n}).nullish(),\r\n  \"content\": zod.string()\r\n})\r\n\r\n\r\nexport const getStylesheetByPathParams = zod.object({\r\n  \"path\": zod.string()\r\n})\r\n\r\nexport const getStylesheetByPathResponse = zod.object({\r\n  \"path\": zod.string(),\r\n  \"name\": zod.string(),\r\n  \"parent\": zod.object({\r\n  \"path\": zod.string()\r\n}).nullish(),\r\n  \"content\": zod.string()\r\n})\r\n\r\n\r\nexport const deleteStylesheetByPathParams = zod.object({\r\n  \"path\": zod.string()\r\n})\r\n\r\n\r\nexport const putStylesheetByPathParams = zod.object({\r\n  \"path\": zod.string()\r\n})\r\n\r\nexport const putStylesheetByPathBody = zod.object({\r\n  \"content\": zod.string()\r\n})\r\n\r\n\r\nexport const putStylesheetByPathRenameParams = zod.object({\r\n  \"path\": zod.string()\r\n})\r\n\r\nexport const putStylesheetByPathRenameBody = zod.object({\r\n  \"name\": zod.string()\r\n})\r\n\r\n\r\nexport const postStylesheetFolderBody = zod.object({\r\n  \"name\": zod.string(),\r\n  \"parent\": zod.object({\r\n  \"path\": zod.string()\r\n}).nullish()\r\n})\r\n\r\n\r\nexport const getStylesheetFolderByPathParams = zod.object({\r\n  \"path\": zod.string()\r\n})\r\n\r\nexport const getStylesheetFolderByPathResponse = zod.object({\r\n  \"path\": zod.string(),\r\n  \"name\": zod.string(),\r\n  \"parent\": zod.object({\r\n  \"path\": zod.string()\r\n}).nullish()\r\n})\r\n\r\n\r\nexport const deleteStylesheetFolderByPathParams = zod.object({\r\n  \"path\": zod.string()\r\n})\r\n\r\n\r\nexport const getTreeStylesheetAncestorsQueryParams = zod.object({\r\n  \"descendantPath\": zod.string().optional()\r\n})\r\n\r\nexport const getTreeStylesheetAncestorsResponseItem = zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"name\": zod.string(),\r\n  \"path\": zod.string(),\r\n  \"parent\": zod.object({\r\n  \"path\": zod.string()\r\n}).nullish(),\r\n  \"isFolder\": zod.boolean()\r\n})\r\nexport const getTreeStylesheetAncestorsResponse = zod.array(getTreeStylesheetAncestorsResponseItem)\r\n\r\n\r\nexport const getTreeStylesheetChildrenQuerySkipDefault = 0;export const getTreeStylesheetChildrenQueryTakeDefault = 100;\r\n\r\nexport const getTreeStylesheetChildrenQueryParams = zod.object({\r\n  \"parentPath\": zod.string().optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getTreeStylesheetChildrenQueryTakeDefault)\r\n})\r\n\r\nexport const getTreeStylesheetChildrenResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"name\": zod.string(),\r\n  \"path\": zod.string(),\r\n  \"parent\": zod.object({\r\n  \"path\": zod.string()\r\n}).nullish(),\r\n  \"isFolder\": zod.boolean()\r\n}))\r\n})\r\n\r\n\r\nexport const getTreeStylesheetRootQuerySkipDefault = 0;export const getTreeStylesheetRootQueryTakeDefault = 100;\r\n\r\nexport const getTreeStylesheetRootQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getTreeStylesheetRootQueryTakeDefault)\r\n})\r\n\r\nexport const getTreeStylesheetRootResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"name\": zod.string(),\r\n  \"path\": zod.string(),\r\n  \"parent\": zod.object({\r\n  \"path\": zod.string()\r\n}).nullish(),\r\n  \"isFolder\": zod.boolean()\r\n}))\r\n})\r\n\r\n\r\nexport const getTagQuerySkipDefault = 0;export const getTagQueryTakeDefault = 100;\r\n\r\nexport const getTagQueryParams = zod.object({\r\n  \"query\": zod.string().optional(),\r\n  \"tagGroup\": zod.string().optional(),\r\n  \"culture\": zod.string().optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getTagQueryTakeDefault)\r\n})\r\n\r\nexport const getTagResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"text\": zod.string().nullish(),\r\n  \"group\": zod.string().nullish(),\r\n  \"nodeCount\": zod.number()\r\n}))\r\n})\r\n\r\n\r\nexport const getTelemetryQuerySkipDefault = 0;export const getTelemetryQueryTakeDefault = 100;\r\n\r\nexport const getTelemetryQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getTelemetryQueryTakeDefault)\r\n})\r\n\r\nexport const getTelemetryResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"telemetryLevel\": zod.enum(['Minimal', 'Basic', 'Detailed'])\r\n}))\r\n})\r\n\r\n\r\nexport const getTelemetryLevelResponse = zod.object({\r\n  \"telemetryLevel\": zod.enum(['Minimal', 'Basic', 'Detailed'])\r\n})\r\n\r\n\r\nexport const postTelemetryLevelBody = zod.object({\r\n  \"telemetryLevel\": zod.enum(['Minimal', 'Basic', 'Detailed'])\r\n})\r\n\r\n\r\nexport const getItemTemplateQueryParams = zod.object({\r\n  \"id\": zod.array(zod.string().uuid()).optional()\r\n})\r\n\r\nexport const getItemTemplateResponseItem = zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string(),\r\n  \"alias\": zod.string()\r\n})\r\nexport const getItemTemplateResponse = zod.array(getItemTemplateResponseItem)\r\n\r\n\r\nexport const getItemTemplateSearchQuerySkipDefault = 0;export const getItemTemplateSearchQueryTakeDefault = 100;\r\n\r\nexport const getItemTemplateSearchQueryParams = zod.object({\r\n  \"query\": zod.string().optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getItemTemplateSearchQueryTakeDefault)\r\n})\r\n\r\nexport const getItemTemplateSearchResponse = zod.object({\r\n  \"items\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string(),\r\n  \"alias\": zod.string()\r\n})),\r\n  \"total\": zod.number()\r\n})\r\n\r\n\r\nexport const postTemplateBody = zod.object({\r\n  \"name\": zod.string().min(1),\r\n  \"alias\": zod.string().min(1),\r\n  \"content\": zod.string().nullish(),\r\n  \"id\": zod.string().uuid().nullish()\r\n})\r\n\r\n\r\nexport const getTemplateByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getTemplateByIdResponse = zod.object({\r\n  \"name\": zod.string().min(1),\r\n  \"alias\": zod.string().min(1),\r\n  \"content\": zod.string().nullish(),\r\n  \"id\": zod.string().uuid(),\r\n  \"masterTemplate\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish()\r\n})\r\n\r\n\r\nexport const deleteTemplateByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const putTemplateByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putTemplateByIdBody = zod.object({\r\n  \"name\": zod.string().min(1),\r\n  \"alias\": zod.string().min(1),\r\n  \"content\": zod.string().nullish()\r\n})\r\n\r\n\r\nexport const getTemplateConfigurationResponse = zod.object({\r\n  \"disabled\": zod.boolean()\r\n})\r\n\r\n\r\nexport const postTemplateQueryExecuteBody = zod.object({\r\n  \"rootDocument\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"documentTypeAlias\": zod.string().nullish(),\r\n  \"filters\": zod.array(zod.object({\r\n  \"propertyAlias\": zod.string().min(1),\r\n  \"constraintValue\": zod.string().min(1),\r\n  \"operator\": zod.enum(['Equals', 'NotEquals', 'Contains', 'NotContains', 'LessThan', 'LessThanEqualTo', 'GreaterThan', 'GreaterThanEqualTo'])\r\n})).nullish(),\r\n  \"sort\": zod.object({\r\n  \"propertyAlias\": zod.string(),\r\n  \"direction\": zod.string().nullish()\r\n}).nullish(),\r\n  \"take\": zod.number()\r\n})\r\n\r\nexport const postTemplateQueryExecuteResponse = zod.object({\r\n  \"queryExpression\": zod.string(),\r\n  \"sampleResults\": zod.array(zod.object({\r\n  \"icon\": zod.string(),\r\n  \"name\": zod.string()\r\n})),\r\n  \"resultCount\": zod.number(),\r\n  \"executionTime\": zod.number()\r\n})\r\n\r\n\r\nexport const getTemplateQuerySettingsResponse = zod.object({\r\n  \"documentTypeAliases\": zod.array(zod.string()),\r\n  \"properties\": zod.array(zod.object({\r\n  \"alias\": zod.string(),\r\n  \"type\": zod.enum(['String', 'DateTime', 'Integer'])\r\n})),\r\n  \"operators\": zod.array(zod.object({\r\n  \"operator\": zod.enum(['Equals', 'NotEquals', 'Contains', 'NotContains', 'LessThan', 'LessThanEqualTo', 'GreaterThan', 'GreaterThanEqualTo']),\r\n  \"applicableTypes\": zod.array(zod.enum(['String', 'DateTime', 'Integer']))\r\n}))\r\n})\r\n\r\n\r\nexport const getTreeTemplateAncestorsQueryParams = zod.object({\r\n  \"descendantId\": zod.string().uuid().optional()\r\n})\r\n\r\nexport const getTreeTemplateAncestorsResponseItem = zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"id\": zod.string().uuid(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"name\": zod.string()\r\n})\r\nexport const getTreeTemplateAncestorsResponse = zod.array(getTreeTemplateAncestorsResponseItem)\r\n\r\n\r\nexport const getTreeTemplateChildrenQuerySkipDefault = 0;export const getTreeTemplateChildrenQueryTakeDefault = 100;\r\n\r\nexport const getTreeTemplateChildrenQueryParams = zod.object({\r\n  \"parentId\": zod.string().uuid().optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getTreeTemplateChildrenQueryTakeDefault)\r\n})\r\n\r\nexport const getTreeTemplateChildrenResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"id\": zod.string().uuid(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"name\": zod.string()\r\n}))\r\n})\r\n\r\n\r\nexport const getTreeTemplateRootQuerySkipDefault = 0;export const getTreeTemplateRootQueryTakeDefault = 100;\r\n\r\nexport const getTreeTemplateRootQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getTreeTemplateRootQueryTakeDefault)\r\n})\r\n\r\nexport const getTreeTemplateRootResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"hasChildren\": zod.boolean(),\r\n  \"id\": zod.string().uuid(),\r\n  \"parent\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"name\": zod.string()\r\n}))\r\n})\r\n\r\n\r\nexport const postTemporaryFileBody = zod.object({\r\n  \"Id\": zod.string().uuid(),\r\n  \"File\": zod.instanceof(FileLike)\r\n})\r\n\r\n\r\nexport const getTemporaryFileByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getTemporaryFileByIdResponse = zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"availableUntil\": zod.string().datetime({\"local\":true}).nullish(),\r\n  \"fileName\": zod.string().min(1)\r\n})\r\n\r\n\r\nexport const deleteTemporaryFileByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const getTemporaryFileConfigurationResponse = zod.object({\r\n  \"imageFileTypes\": zod.array(zod.string()),\r\n  \"disallowedUploadedFilesExtensions\": zod.array(zod.string()),\r\n  \"allowedUploadedFileExtensions\": zod.array(zod.string()),\r\n  \"maxFileSize\": zod.number().nullish()\r\n})\r\n\r\n\r\nexport const getUpgradeSettingsResponse = zod.object({\r\n  \"currentState\": zod.string().min(1),\r\n  \"newState\": zod.string().min(1),\r\n  \"newVersion\": zod.string().min(1),\r\n  \"oldVersion\": zod.string().min(1),\r\n  \"reportUrl\": zod.string()\r\n})\r\n\r\n\r\nexport const postUserDataBody = zod.object({\r\n  \"group\": zod.string(),\r\n  \"identifier\": zod.string(),\r\n  \"value\": zod.string(),\r\n  \"key\": zod.string().uuid().nullish()\r\n})\r\n\r\n\r\nexport const getUserDataQuerySkipDefault = 0;export const getUserDataQueryTakeDefault = 100;\r\n\r\nexport const getUserDataQueryParams = zod.object({\r\n  \"groups\": zod.array(zod.string()).optional(),\r\n  \"identifiers\": zod.array(zod.string()).optional(),\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getUserDataQueryTakeDefault)\r\n})\r\n\r\nexport const getUserDataResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"group\": zod.string(),\r\n  \"identifier\": zod.string(),\r\n  \"value\": zod.string(),\r\n  \"key\": zod.string().uuid()\r\n}))\r\n})\r\n\r\n\r\nexport const putUserDataBody = zod.object({\r\n  \"group\": zod.string(),\r\n  \"identifier\": zod.string(),\r\n  \"value\": zod.string(),\r\n  \"key\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const getUserDataByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getUserDataByIdResponse = zod.object({\r\n  \"group\": zod.string(),\r\n  \"identifier\": zod.string(),\r\n  \"value\": zod.string()\r\n})\r\n\r\n\r\nexport const getFilterUserGroupQuerySkipDefault = 0;export const getFilterUserGroupQueryTakeDefault = 100;export const getFilterUserGroupQueryFilterDefault = \"\";\r\n\r\nexport const getFilterUserGroupQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getFilterUserGroupQueryTakeDefault),\r\n  \"filter\": zod.string().optional()\r\n})\r\n\r\nexport const getFilterUserGroupResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"name\": zod.string(),\r\n  \"alias\": zod.string(),\r\n  \"icon\": zod.string().nullish(),\r\n  \"sections\": zod.array(zod.string()),\r\n  \"languages\": zod.array(zod.string()),\r\n  \"hasAccessToAllLanguages\": zod.boolean(),\r\n  \"documentStartNode\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"documentRootAccess\": zod.boolean(),\r\n  \"mediaStartNode\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"mediaRootAccess\": zod.boolean(),\r\n  \"fallbackPermissions\": zod.array(zod.string()),\r\n  \"permissions\": zod.array(zod.object({\r\n  \"$type\": zod.enum(['DocumentPermissionPresentationModel']),\r\n  \"document\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"verbs\": zod.array(zod.string())\r\n}).or(zod.object({\r\n  \"$type\": zod.enum(['UnknownTypePermissionPresentationModel']),\r\n  \"verbs\": zod.array(zod.string()),\r\n  \"context\": zod.string()\r\n}))),\r\n  \"id\": zod.string().uuid(),\r\n  \"isDeletable\": zod.boolean(),\r\n  \"aliasCanBeChanged\": zod.boolean()\r\n}))\r\n})\r\n\r\n\r\nexport const getItemUserGroupQueryParams = zod.object({\r\n  \"id\": zod.array(zod.string().uuid()).optional()\r\n})\r\n\r\nexport const getItemUserGroupResponseItem = zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string(),\r\n  \"icon\": zod.string().nullish(),\r\n  \"alias\": zod.string().nullish()\r\n})\r\nexport const getItemUserGroupResponse = zod.array(getItemUserGroupResponseItem)\r\n\r\n\r\nexport const deleteUserGroupBody = zod.object({\r\n  \"userGroupIds\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid()\r\n}))\r\n})\r\n\r\n\r\nexport const postUserGroupBody = zod.object({\r\n  \"name\": zod.string(),\r\n  \"alias\": zod.string(),\r\n  \"icon\": zod.string().nullish(),\r\n  \"sections\": zod.array(zod.string()),\r\n  \"languages\": zod.array(zod.string()),\r\n  \"hasAccessToAllLanguages\": zod.boolean(),\r\n  \"documentStartNode\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"documentRootAccess\": zod.boolean(),\r\n  \"mediaStartNode\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"mediaRootAccess\": zod.boolean(),\r\n  \"fallbackPermissions\": zod.array(zod.string()),\r\n  \"permissions\": zod.array(zod.object({\r\n  \"$type\": zod.enum(['DocumentPermissionPresentationModel']),\r\n  \"document\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"verbs\": zod.array(zod.string())\r\n}).or(zod.object({\r\n  \"$type\": zod.enum(['UnknownTypePermissionPresentationModel']),\r\n  \"verbs\": zod.array(zod.string()),\r\n  \"context\": zod.string()\r\n}))),\r\n  \"id\": zod.string().uuid().nullish()\r\n})\r\n\r\n\r\nexport const getUserGroupQuerySkipDefault = 0;export const getUserGroupQueryTakeDefault = 100;\r\n\r\nexport const getUserGroupQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getUserGroupQueryTakeDefault)\r\n})\r\n\r\nexport const getUserGroupResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"name\": zod.string(),\r\n  \"alias\": zod.string(),\r\n  \"icon\": zod.string().nullish(),\r\n  \"sections\": zod.array(zod.string()),\r\n  \"languages\": zod.array(zod.string()),\r\n  \"hasAccessToAllLanguages\": zod.boolean(),\r\n  \"documentStartNode\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"documentRootAccess\": zod.boolean(),\r\n  \"mediaStartNode\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"mediaRootAccess\": zod.boolean(),\r\n  \"fallbackPermissions\": zod.array(zod.string()),\r\n  \"permissions\": zod.array(zod.object({\r\n  \"$type\": zod.enum(['DocumentPermissionPresentationModel']),\r\n  \"document\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"verbs\": zod.array(zod.string())\r\n}).or(zod.object({\r\n  \"$type\": zod.enum(['UnknownTypePermissionPresentationModel']),\r\n  \"verbs\": zod.array(zod.string()),\r\n  \"context\": zod.string()\r\n}))),\r\n  \"id\": zod.string().uuid(),\r\n  \"isDeletable\": zod.boolean(),\r\n  \"aliasCanBeChanged\": zod.boolean()\r\n}))\r\n})\r\n\r\n\r\nexport const getUserGroupByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getUserGroupByIdResponse = zod.object({\r\n  \"name\": zod.string(),\r\n  \"alias\": zod.string(),\r\n  \"icon\": zod.string().nullish(),\r\n  \"sections\": zod.array(zod.string()),\r\n  \"languages\": zod.array(zod.string()),\r\n  \"hasAccessToAllLanguages\": zod.boolean(),\r\n  \"documentStartNode\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"documentRootAccess\": zod.boolean(),\r\n  \"mediaStartNode\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"mediaRootAccess\": zod.boolean(),\r\n  \"fallbackPermissions\": zod.array(zod.string()),\r\n  \"permissions\": zod.array(zod.object({\r\n  \"$type\": zod.enum(['DocumentPermissionPresentationModel']),\r\n  \"document\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"verbs\": zod.array(zod.string())\r\n}).or(zod.object({\r\n  \"$type\": zod.enum(['UnknownTypePermissionPresentationModel']),\r\n  \"verbs\": zod.array(zod.string()),\r\n  \"context\": zod.string()\r\n}))),\r\n  \"id\": zod.string().uuid(),\r\n  \"isDeletable\": zod.boolean(),\r\n  \"aliasCanBeChanged\": zod.boolean()\r\n})\r\n\r\n\r\nexport const deleteUserGroupByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const putUserGroupByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putUserGroupByIdBody = zod.object({\r\n  \"name\": zod.string(),\r\n  \"alias\": zod.string(),\r\n  \"icon\": zod.string().nullish(),\r\n  \"sections\": zod.array(zod.string()),\r\n  \"languages\": zod.array(zod.string()),\r\n  \"hasAccessToAllLanguages\": zod.boolean(),\r\n  \"documentStartNode\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"documentRootAccess\": zod.boolean(),\r\n  \"mediaStartNode\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}).nullish(),\r\n  \"mediaRootAccess\": zod.boolean(),\r\n  \"fallbackPermissions\": zod.array(zod.string()),\r\n  \"permissions\": zod.array(zod.object({\r\n  \"$type\": zod.enum(['DocumentPermissionPresentationModel']),\r\n  \"document\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"verbs\": zod.array(zod.string())\r\n}).or(zod.object({\r\n  \"$type\": zod.enum(['UnknownTypePermissionPresentationModel']),\r\n  \"verbs\": zod.array(zod.string()),\r\n  \"context\": zod.string()\r\n})))\r\n})\r\n\r\n\r\nexport const deleteUserGroupByIdUsersParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const deleteUserGroupByIdUsersBodyItem = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\nexport const deleteUserGroupByIdUsersBody = zod.array(deleteUserGroupByIdUsersBodyItem)\r\n\r\n\r\nexport const postUserGroupByIdUsersParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const postUserGroupByIdUsersBodyItem = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\nexport const postUserGroupByIdUsersBody = zod.array(postUserGroupByIdUsersBodyItem)\r\n\r\n\r\nexport const getFilterUserQuerySkipDefault = 0;export const getFilterUserQueryTakeDefault = 100;export const getFilterUserQueryFilterDefault = \"\";\r\n\r\nexport const getFilterUserQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getFilterUserQueryTakeDefault),\r\n  \"orderBy\": zod.enum(['UserName', 'Language', 'Name', 'Email', 'Id', 'CreateDate', 'UpdateDate', 'IsApproved', 'IsLockedOut', 'LastLoginDate']).optional(),\r\n  \"orderDirection\": zod.enum(['Ascending', 'Descending']).optional(),\r\n  \"userGroupIds\": zod.array(zod.string().uuid()).optional(),\r\n  \"userStates\": zod.array(zod.enum(['Active', 'Disabled', 'LockedOut', 'Invited', 'Inactive', 'All'])).optional(),\r\n  \"filter\": zod.string().optional()\r\n})\r\n\r\nexport const getFilterUserResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"email\": zod.string(),\r\n  \"userName\": zod.string(),\r\n  \"name\": zod.string(),\r\n  \"userGroupIds\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid()\r\n})),\r\n  \"id\": zod.string().uuid(),\r\n  \"languageIsoCode\": zod.string().nullish(),\r\n  \"documentStartNodeIds\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid()\r\n})),\r\n  \"hasDocumentRootAccess\": zod.boolean(),\r\n  \"mediaStartNodeIds\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid()\r\n})),\r\n  \"hasMediaRootAccess\": zod.boolean(),\r\n  \"avatarUrls\": zod.array(zod.string()),\r\n  \"state\": zod.enum(['Active', 'Disabled', 'LockedOut', 'Invited', 'Inactive', 'All']),\r\n  \"failedLoginAttempts\": zod.number(),\r\n  \"createDate\": zod.string().datetime({\"local\":true}),\r\n  \"updateDate\": zod.string().datetime({\"local\":true}),\r\n  \"lastLoginDate\": zod.string().datetime({\"local\":true}).nullish(),\r\n  \"lastLockoutDate\": zod.string().datetime({\"local\":true}).nullish(),\r\n  \"lastPasswordChangeDate\": zod.string().datetime({\"local\":true}).nullish(),\r\n  \"isAdmin\": zod.boolean(),\r\n  \"kind\": zod.enum(['Default', 'Api'])\r\n}))\r\n})\r\n\r\n\r\nexport const getItemUserQueryParams = zod.object({\r\n  \"id\": zod.array(zod.string().uuid()).optional()\r\n})\r\n\r\nexport const getItemUserResponseItem = zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"name\": zod.string(),\r\n  \"avatarUrls\": zod.array(zod.string()),\r\n  \"kind\": zod.enum(['Default', 'Api'])\r\n})\r\nexport const getItemUserResponse = zod.array(getItemUserResponseItem)\r\n\r\n\r\nexport const postUserBody = zod.object({\r\n  \"email\": zod.string(),\r\n  \"userName\": zod.string(),\r\n  \"name\": zod.string(),\r\n  \"userGroupIds\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid()\r\n})),\r\n  \"id\": zod.string().uuid().nullish(),\r\n  \"kind\": zod.enum(['Default', 'Api'])\r\n})\r\n\r\n\r\nexport const deleteUserBody = zod.object({\r\n  \"userIds\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid()\r\n}))\r\n})\r\n\r\n\r\nexport const getUserQuerySkipDefault = 0;export const getUserQueryTakeDefault = 100;\r\n\r\nexport const getUserQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getUserQueryTakeDefault)\r\n})\r\n\r\nexport const getUserResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"email\": zod.string(),\r\n  \"userName\": zod.string(),\r\n  \"name\": zod.string(),\r\n  \"userGroupIds\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid()\r\n})),\r\n  \"id\": zod.string().uuid(),\r\n  \"languageIsoCode\": zod.string().nullish(),\r\n  \"documentStartNodeIds\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid()\r\n})),\r\n  \"hasDocumentRootAccess\": zod.boolean(),\r\n  \"mediaStartNodeIds\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid()\r\n})),\r\n  \"hasMediaRootAccess\": zod.boolean(),\r\n  \"avatarUrls\": zod.array(zod.string()),\r\n  \"state\": zod.enum(['Active', 'Disabled', 'LockedOut', 'Invited', 'Inactive', 'All']),\r\n  \"failedLoginAttempts\": zod.number(),\r\n  \"createDate\": zod.string().datetime({\"local\":true}),\r\n  \"updateDate\": zod.string().datetime({\"local\":true}),\r\n  \"lastLoginDate\": zod.string().datetime({\"local\":true}).nullish(),\r\n  \"lastLockoutDate\": zod.string().datetime({\"local\":true}).nullish(),\r\n  \"lastPasswordChangeDate\": zod.string().datetime({\"local\":true}).nullish(),\r\n  \"isAdmin\": zod.boolean(),\r\n  \"kind\": zod.enum(['Default', 'Api'])\r\n}))\r\n})\r\n\r\n\r\nexport const getUserByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getUserByIdResponse = zod.object({\r\n  \"email\": zod.string(),\r\n  \"userName\": zod.string(),\r\n  \"name\": zod.string(),\r\n  \"userGroupIds\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid()\r\n})),\r\n  \"id\": zod.string().uuid(),\r\n  \"languageIsoCode\": zod.string().nullish(),\r\n  \"documentStartNodeIds\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid()\r\n})),\r\n  \"hasDocumentRootAccess\": zod.boolean(),\r\n  \"mediaStartNodeIds\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid()\r\n})),\r\n  \"hasMediaRootAccess\": zod.boolean(),\r\n  \"avatarUrls\": zod.array(zod.string()),\r\n  \"state\": zod.enum(['Active', 'Disabled', 'LockedOut', 'Invited', 'Inactive', 'All']),\r\n  \"failedLoginAttempts\": zod.number(),\r\n  \"createDate\": zod.string().datetime({\"local\":true}),\r\n  \"updateDate\": zod.string().datetime({\"local\":true}),\r\n  \"lastLoginDate\": zod.string().datetime({\"local\":true}).nullish(),\r\n  \"lastLockoutDate\": zod.string().datetime({\"local\":true}).nullish(),\r\n  \"lastPasswordChangeDate\": zod.string().datetime({\"local\":true}).nullish(),\r\n  \"isAdmin\": zod.boolean(),\r\n  \"kind\": zod.enum(['Default', 'Api'])\r\n})\r\n\r\n\r\nexport const deleteUserByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const putUserByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putUserByIdBody = zod.object({\r\n  \"email\": zod.string(),\r\n  \"userName\": zod.string(),\r\n  \"name\": zod.string(),\r\n  \"userGroupIds\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid()\r\n})),\r\n  \"languageIsoCode\": zod.string(),\r\n  \"documentStartNodeIds\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid()\r\n})),\r\n  \"hasDocumentRootAccess\": zod.boolean(),\r\n  \"mediaStartNodeIds\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid()\r\n})),\r\n  \"hasMediaRootAccess\": zod.boolean()\r\n})\r\n\r\n\r\nexport const getUserById2faParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getUserById2faResponseItem = zod.object({\r\n  \"providerName\": zod.string(),\r\n  \"isEnabledOnUser\": zod.boolean()\r\n})\r\nexport const getUserById2faResponse = zod.array(getUserById2faResponseItem)\r\n\r\n\r\nexport const deleteUserById2faByProviderNameParams = zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"providerName\": zod.string()\r\n})\r\n\r\n\r\nexport const getUserByIdCalculateStartNodesParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getUserByIdCalculateStartNodesResponse = zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"documentStartNodeIds\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid()\r\n})),\r\n  \"hasDocumentRootAccess\": zod.boolean(),\r\n  \"mediaStartNodeIds\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid()\r\n})),\r\n  \"hasMediaRootAccess\": zod.boolean()\r\n})\r\n\r\n\r\nexport const postUserByIdChangePasswordParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const postUserByIdChangePasswordBody = zod.object({\r\n  \"newPassword\": zod.string()\r\n})\r\n\r\n\r\nexport const postUserByIdClientCredentialsParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const postUserByIdClientCredentialsBody = zod.object({\r\n  \"clientId\": zod.string(),\r\n  \"clientSecret\": zod.string()\r\n})\r\n\r\n\r\nexport const getUserByIdClientCredentialsParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getUserByIdClientCredentialsResponseItem = zod.string()\r\nexport const getUserByIdClientCredentialsResponse = zod.array(getUserByIdClientCredentialsResponseItem)\r\n\r\n\r\nexport const deleteUserByIdClientCredentialsByClientIdParams = zod.object({\r\n  \"id\": zod.string().uuid(),\r\n  \"clientId\": zod.string()\r\n})\r\n\r\n\r\nexport const postUserByIdResetPasswordParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const postUserByIdResetPasswordResponse = zod.object({\r\n  \"resetPassword\": zod.string().nullish()\r\n})\r\n\r\n\r\nexport const deleteUserAvatarByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const postUserAvatarByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const postUserAvatarByIdBody = zod.object({\r\n  \"file\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n})\r\n\r\n\r\nexport const getUserConfigurationResponse = zod.object({\r\n  \"canInviteUsers\": zod.boolean(),\r\n  \"usernameIsEmail\": zod.boolean(),\r\n  \"passwordConfiguration\": zod.object({\r\n  \"minimumPasswordLength\": zod.number(),\r\n  \"requireNonLetterOrDigit\": zod.boolean(),\r\n  \"requireDigit\": zod.boolean(),\r\n  \"requireLowercase\": zod.boolean(),\r\n  \"requireUppercase\": zod.boolean()\r\n}),\r\n  \"allowChangePassword\": zod.boolean(),\r\n  \"allowTwoFactor\": zod.boolean()\r\n})\r\n\r\n\r\nexport const getUserCurrentResponse = zod.object({\r\n  \"email\": zod.string(),\r\n  \"userName\": zod.string(),\r\n  \"name\": zod.string(),\r\n  \"userGroupIds\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid()\r\n})),\r\n  \"id\": zod.string().uuid(),\r\n  \"languageIsoCode\": zod.string().nullable(),\r\n  \"documentStartNodeIds\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid()\r\n})),\r\n  \"hasDocumentRootAccess\": zod.boolean(),\r\n  \"mediaStartNodeIds\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid()\r\n})),\r\n  \"hasMediaRootAccess\": zod.boolean(),\r\n  \"avatarUrls\": zod.array(zod.string()),\r\n  \"languages\": zod.array(zod.string()),\r\n  \"hasAccessToAllLanguages\": zod.boolean(),\r\n  \"hasAccessToSensitiveData\": zod.boolean(),\r\n  \"fallbackPermissions\": zod.array(zod.string()),\r\n  \"permissions\": zod.array(zod.object({\r\n  \"$type\": zod.enum(['DocumentPermissionPresentationModel']),\r\n  \"document\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"verbs\": zod.array(zod.string())\r\n}).or(zod.object({\r\n  \"$type\": zod.enum(['UnknownTypePermissionPresentationModel']),\r\n  \"verbs\": zod.array(zod.string()),\r\n  \"context\": zod.string()\r\n}))),\r\n  \"allowedSections\": zod.array(zod.string()),\r\n  \"isAdmin\": zod.boolean()\r\n})\r\n\r\n\r\nexport const getUserCurrent2faResponseItem = zod.object({\r\n  \"providerName\": zod.string(),\r\n  \"isEnabledOnUser\": zod.boolean()\r\n})\r\nexport const getUserCurrent2faResponse = zod.array(getUserCurrent2faResponseItem)\r\n\r\n\r\nexport const deleteUserCurrent2faByProviderNameParams = zod.object({\r\n  \"providerName\": zod.string()\r\n})\r\n\r\nexport const deleteUserCurrent2faByProviderNameQueryParams = zod.object({\r\n  \"code\": zod.string().optional()\r\n})\r\n\r\n\r\nexport const postUserCurrent2faByProviderNameParams = zod.object({\r\n  \"providerName\": zod.string()\r\n})\r\n\r\nexport const postUserCurrent2faByProviderNameBody = zod.object({\r\n  \"code\": zod.string(),\r\n  \"secret\": zod.string()\r\n})\r\n\r\nexport const postUserCurrent2faByProviderNameResponse = zod.object({\r\n\r\n})\r\n\r\n\r\nexport const getUserCurrent2faByProviderNameParams = zod.object({\r\n  \"providerName\": zod.string()\r\n})\r\n\r\nexport const getUserCurrent2faByProviderNameResponse = zod.object({\r\n\r\n})\r\n\r\n\r\nexport const postUserCurrentAvatarBody = zod.object({\r\n  \"file\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n})\r\n\r\n\r\nexport const postUserCurrentChangePasswordBody = zod.object({\r\n  \"newPassword\": zod.string(),\r\n  \"oldPassword\": zod.string().nullish()\r\n})\r\n\r\n\r\nexport const getUserCurrentConfigurationResponse = zod.object({\r\n  \"keepUserLoggedIn\": zod.boolean(),\r\n  \"usernameIsEmail\": zod.boolean(),\r\n  \"passwordConfiguration\": zod.object({\r\n  \"minimumPasswordLength\": zod.number(),\r\n  \"requireNonLetterOrDigit\": zod.boolean(),\r\n  \"requireDigit\": zod.boolean(),\r\n  \"requireLowercase\": zod.boolean(),\r\n  \"requireUppercase\": zod.boolean()\r\n}),\r\n  \"allowChangePassword\": zod.boolean(),\r\n  \"allowTwoFactor\": zod.boolean()\r\n})\r\n\r\n\r\nexport const getUserCurrentLoginProvidersResponseItem = zod.object({\r\n  \"providerSchemeName\": zod.string(),\r\n  \"providerKey\": zod.string().nullish(),\r\n  \"isLinkedOnUser\": zod.boolean(),\r\n  \"hasManualLinkingEnabled\": zod.boolean()\r\n})\r\nexport const getUserCurrentLoginProvidersResponse = zod.array(getUserCurrentLoginProvidersResponseItem)\r\n\r\n\r\nexport const getUserCurrentPermissionsQueryParams = zod.object({\r\n  \"id\": zod.array(zod.string().uuid()).optional()\r\n})\r\n\r\nexport const getUserCurrentPermissionsResponse = zod.object({\r\n  \"permissions\": zod.array(zod.object({\r\n  \"nodeKey\": zod.string().uuid(),\r\n  \"permissions\": zod.array(zod.string())\r\n}))\r\n})\r\n\r\n\r\nexport const getUserCurrentPermissionsDocumentQueryParams = zod.object({\r\n  \"id\": zod.array(zod.string().uuid()).optional()\r\n})\r\n\r\nexport const getUserCurrentPermissionsDocumentResponseItem = zod.object({\r\n  \"permissions\": zod.array(zod.object({\r\n  \"nodeKey\": zod.string().uuid(),\r\n  \"permissions\": zod.array(zod.string())\r\n}))\r\n})\r\nexport const getUserCurrentPermissionsDocumentResponse = zod.array(getUserCurrentPermissionsDocumentResponseItem)\r\n\r\n\r\nexport const getUserCurrentPermissionsMediaQueryParams = zod.object({\r\n  \"id\": zod.array(zod.string().uuid()).optional()\r\n})\r\n\r\nexport const getUserCurrentPermissionsMediaResponse = zod.object({\r\n  \"permissions\": zod.array(zod.object({\r\n  \"nodeKey\": zod.string().uuid(),\r\n  \"permissions\": zod.array(zod.string())\r\n}))\r\n})\r\n\r\n\r\nexport const postUserDisableBody = zod.object({\r\n  \"userIds\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid()\r\n}))\r\n})\r\n\r\n\r\nexport const postUserEnableBody = zod.object({\r\n  \"userIds\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid()\r\n}))\r\n})\r\n\r\n\r\nexport const postUserInviteBody = zod.object({\r\n  \"email\": zod.string(),\r\n  \"userName\": zod.string(),\r\n  \"name\": zod.string(),\r\n  \"userGroupIds\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid()\r\n})),\r\n  \"id\": zod.string().uuid().nullish(),\r\n  \"message\": zod.string().nullish()\r\n})\r\n\r\n\r\nexport const postUserInviteCreatePasswordBody = zod.object({\r\n  \"user\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"token\": zod.string().min(1),\r\n  \"password\": zod.string()\r\n})\r\n\r\n\r\nexport const postUserInviteResendBody = zod.object({\r\n  \"user\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"message\": zod.string().nullish()\r\n})\r\n\r\n\r\nexport const postUserInviteVerifyBody = zod.object({\r\n  \"user\": zod.object({\r\n  \"id\": zod.string().uuid()\r\n}),\r\n  \"token\": zod.string().min(1)\r\n})\r\n\r\nexport const postUserInviteVerifyResponse = zod.object({\r\n  \"passwordConfiguration\": zod.object({\r\n  \"minimumPasswordLength\": zod.number(),\r\n  \"requireNonLetterOrDigit\": zod.boolean(),\r\n  \"requireDigit\": zod.boolean(),\r\n  \"requireLowercase\": zod.boolean(),\r\n  \"requireUppercase\": zod.boolean()\r\n})\r\n})\r\n\r\n\r\nexport const postUserSetUserGroupsBody = zod.object({\r\n  \"userIds\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid()\r\n})),\r\n  \"userGroupIds\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid()\r\n}))\r\n})\r\n\r\n\r\nexport const postUserUnlockBody = zod.object({\r\n  \"userIds\": zod.array(zod.object({\r\n  \"id\": zod.string().uuid()\r\n}))\r\n})\r\n\r\n\r\nexport const getItemWebhookQueryParams = zod.object({\r\n  \"id\": zod.array(zod.string().uuid()).optional()\r\n})\r\n\r\nexport const getItemWebhookResponseItem = zod.object({\r\n  \"enabled\": zod.boolean(),\r\n  \"name\": zod.string(),\r\n  \"events\": zod.string(),\r\n  \"url\": zod.string(),\r\n  \"types\": zod.string()\r\n})\r\nexport const getItemWebhookResponse = zod.array(getItemWebhookResponseItem)\r\n\r\n\r\nexport const getWebhookQuerySkipDefault = 0;export const getWebhookQueryTakeDefault = 100;\r\n\r\nexport const getWebhookQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getWebhookQueryTakeDefault)\r\n})\r\n\r\nexport const getWebhookResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"enabled\": zod.boolean(),\r\n  \"name\": zod.string().nullish(),\r\n  \"description\": zod.string().nullish(),\r\n  \"url\": zod.string().min(1),\r\n  \"contentTypeKeys\": zod.array(zod.string().uuid()),\r\n  \"headers\": zod.record(zod.string(), zod.string()),\r\n  \"id\": zod.string().uuid(),\r\n  \"events\": zod.array(zod.object({\r\n  \"eventName\": zod.string(),\r\n  \"eventType\": zod.string(),\r\n  \"alias\": zod.string()\r\n}))\r\n}))\r\n})\r\n\r\n\r\nexport const postWebhookBody = zod.object({\r\n  \"enabled\": zod.boolean(),\r\n  \"name\": zod.string().nullish(),\r\n  \"description\": zod.string().nullish(),\r\n  \"url\": zod.string().min(1),\r\n  \"contentTypeKeys\": zod.array(zod.string().uuid()),\r\n  \"headers\": zod.record(zod.string(), zod.string()),\r\n  \"id\": zod.string().uuid().nullish(),\r\n  \"events\": zod.array(zod.string())\r\n})\r\n\r\n\r\nexport const getWebhookByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getWebhookByIdResponse = zod.object({\r\n  \"enabled\": zod.boolean(),\r\n  \"name\": zod.string().nullish(),\r\n  \"description\": zod.string().nullish(),\r\n  \"url\": zod.string().min(1),\r\n  \"contentTypeKeys\": zod.array(zod.string().uuid()),\r\n  \"headers\": zod.record(zod.string(), zod.string()),\r\n  \"id\": zod.string().uuid(),\r\n  \"events\": zod.array(zod.object({\r\n  \"eventName\": zod.string(),\r\n  \"eventType\": zod.string(),\r\n  \"alias\": zod.string()\r\n}))\r\n})\r\n\r\n\r\nexport const deleteWebhookByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\n\r\nexport const putWebhookByIdParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const putWebhookByIdBody = zod.object({\r\n  \"enabled\": zod.boolean(),\r\n  \"name\": zod.string().nullish(),\r\n  \"description\": zod.string().nullish(),\r\n  \"url\": zod.string().min(1),\r\n  \"contentTypeKeys\": zod.array(zod.string().uuid()),\r\n  \"headers\": zod.record(zod.string(), zod.string()),\r\n  \"events\": zod.array(zod.string())\r\n})\r\n\r\n\r\nexport const getWebhookByIdLogsParams = zod.object({\r\n  \"id\": zod.string().uuid()\r\n})\r\n\r\nexport const getWebhookByIdLogsQuerySkipDefault = 0;export const getWebhookByIdLogsQueryTakeDefault = 100;\r\n\r\nexport const getWebhookByIdLogsQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getWebhookByIdLogsQueryTakeDefault)\r\n})\r\n\r\nexport const getWebhookByIdLogsResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"key\": zod.string().uuid(),\r\n  \"webhookKey\": zod.string().uuid(),\r\n  \"statusCode\": zod.string(),\r\n  \"isSuccessStatusCode\": zod.boolean(),\r\n  \"date\": zod.string().datetime({\"local\":true}),\r\n  \"eventAlias\": zod.string(),\r\n  \"url\": zod.string(),\r\n  \"retryCount\": zod.number(),\r\n  \"requestHeaders\": zod.string(),\r\n  \"requestBody\": zod.string(),\r\n  \"responseHeaders\": zod.string(),\r\n  \"responseBody\": zod.string(),\r\n  \"exceptionOccured\": zod.boolean()\r\n}))\r\n})\r\n\r\n\r\nexport const getWebhookEventsQuerySkipDefault = 0;export const getWebhookEventsQueryTakeDefault = 100;\r\n\r\nexport const getWebhookEventsQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getWebhookEventsQueryTakeDefault)\r\n})\r\n\r\nexport const getWebhookEventsResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"eventName\": zod.string(),\r\n  \"eventType\": zod.string(),\r\n  \"alias\": zod.string()\r\n}))\r\n})\r\n\r\n\r\nexport const getWebhookLogsQuerySkipDefault = 0;export const getWebhookLogsQueryTakeDefault = 100;\r\n\r\nexport const getWebhookLogsQueryParams = zod.object({\r\n  \"skip\": zod.number().optional(),\r\n  \"take\": zod.number().default(getWebhookLogsQueryTakeDefault)\r\n})\r\n\r\nexport const getWebhookLogsResponse = zod.object({\r\n  \"total\": zod.number(),\r\n  \"items\": zod.array(zod.object({\r\n  \"key\": zod.string().uuid(),\r\n  \"webhookKey\": zod.string().uuid(),\r\n  \"statusCode\": zod.string(),\r\n  \"isSuccessStatusCode\": zod.boolean(),\r\n  \"date\": zod.string().datetime({\"local\":true}),\r\n  \"eventAlias\": zod.string(),\r\n  \"url\": zod.string(),\r\n  \"retryCount\": zod.number(),\r\n  \"requestHeaders\": zod.string(),\r\n  \"requestBody\": zod.string(),\r\n  \"responseHeaders\": zod.string(),\r\n  \"responseBody\": zod.string(),\r\n  \"exceptionOccured\": zod.boolean()\r\n}))\r\n})\r\n\r\n\r\n","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\r\nimport { CreateUmbracoTool } from \"@/helpers/create-umbraco-tool.js\";\r\nimport { GetCultureParams } from \"@/umb-management-api/schemas/index.js\";\r\nimport { getCultureQueryParams } from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\r\n\r\nconst GetCulturesTool = CreateUmbracoTool(\r\n  \"get-culture\",\r\n  \"Retrieves a paginated list of cultures that Umbraco can be configured to use\",\r\n  getCultureQueryParams.shape,\r\n  async (params: GetCultureParams) => {\r\n    const client = UmbracoManagementClient.getClient();\r\n    var response = await client.getCulture(params);\r\n    return {\r\n      content: [\r\n        {\r\n          type: \"text\" as const,\r\n          text: JSON.stringify(response),\r\n        },\r\n      ],\r\n    };\r\n  }\r\n);\r\n\r\nexport default GetCulturesTool;\r\n","import GetCulturesTool from \"./get-cultures.js\";\r\n\r\nexport const CultureTools = [GetCulturesTool];\r\n","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\r\nimport { CreateUmbracoTool } from \"@/helpers/create-umbraco-tool.js\";\r\nimport { GetTreeDataTypeRootParams } from \"@/umb-management-api/schemas/index.js\";\r\nimport { getCultureQueryParams } from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\r\n\r\nconst GetDataTypeRootTool = CreateUmbracoTool(\r\n  \"get-data-type-root\",\r\n  \"Gets the root level of the data type tree.\",\r\n  getCultureQueryParams.shape,\r\n  async (params: GetTreeDataTypeRootParams) => {\r\n    const client = UmbracoManagementClient.getClient();\r\n    var response = await client.getTreeDataTypeRoot(params);\r\n    return {\r\n      content: [\r\n        {\r\n          type: \"text\" as const,\r\n          text: JSON.stringify(response),\r\n        },\r\n      ],\r\n    };\r\n  }\r\n);\r\n\r\nexport default GetDataTypeRootTool;\r\n","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\r\nimport { CreateUmbracoTool } from \"@/helpers/create-umbraco-tool.js\";\r\nimport { CreateDataTypeRequestModel } from \"@/umb-management-api/schemas/index.js\";\r\nimport { postDataTypeBody } from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\r\n\r\nconst CreateDataTypeTool = CreateUmbracoTool(\r\n  \"create-data-type\",\r\n  \"Creates a new data type\",\r\n  postDataTypeBody.shape,\r\n  async (model: CreateDataTypeRequestModel) => {\r\n    try {\r\n      const client = UmbracoManagementClient.getClient();\r\n      var response = await client.postDataType(model);\r\n\r\n      return {\r\n        content: [\r\n          {\r\n            type: \"text\" as const,\r\n            text: JSON.stringify(response),\r\n          },\r\n        ],\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Error creating data type:\", error);\r\n      return {\r\n        content: [\r\n          {\r\n            type: \"text\" as const,\r\n            text: `Error: ${error}`,\r\n          },\r\n        ],\r\n      };\r\n    }\r\n  }\r\n);\r\n\r\nexport default CreateDataTypeTool;\r\n","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\r\nimport { CreateUmbracoTool } from \"@/helpers/create-umbraco-tool.js\";\r\nimport { deleteDataTypeByIdParams } from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\r\n\r\nconst DeleteDataTypeTool = CreateUmbracoTool(\r\n  \"delete-data-type\",\r\n  \"Deletes a data type by Id\",\r\n  deleteDataTypeByIdParams.shape,\r\n  async ({ id }) => {\r\n    try {\r\n      const client = UmbracoManagementClient.getClient();\r\n      var response = await client.deleteDataTypeById(id);\r\n\r\n      return {\r\n        content: [\r\n          {\r\n            type: \"text\" as const,\r\n            text: JSON.stringify(response),\r\n          },\r\n        ],\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Error creating data type:\", error);\r\n      return {\r\n        content: [\r\n          {\r\n            type: \"text\" as const,\r\n            text: `Error: ${error}`,\r\n          },\r\n        ],\r\n      };\r\n    }\r\n  }\r\n);\r\n\r\nexport default DeleteDataTypeTool;\r\n","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\r\nimport { CreateUmbracoTool } from \"@/helpers/create-umbraco-tool.js\";\r\nimport { GetFilterDataTypeParams } from \"@/umb-management-api/schemas/index.js\";\r\nimport { getFilterDataTypeQueryParams } from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\r\n\r\nconst FindDataTypeTool = CreateUmbracoTool(\r\n  \"find-data-type\",\r\n  \"Finds a data type by Id or name\",\r\n  getFilterDataTypeQueryParams.shape,\r\n  async (model: GetFilterDataTypeParams) => {\r\n    try {\r\n      const client = UmbracoManagementClient.getClient();\r\n      var response = await client.getFilterDataType(model);\r\n\r\n      return {\r\n        content: [\r\n          {\r\n            type: \"text\" as const,\r\n            text: JSON.stringify(response),\r\n          },\r\n        ],\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Error creating data type:\", error);\r\n      return {\r\n        content: [\r\n          {\r\n            type: \"text\" as const,\r\n            text: `Error: ${error}`,\r\n          },\r\n        ],\r\n      };\r\n    }\r\n  }\r\n);\r\n\r\nexport default FindDataTypeTool;\r\n","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\r\nimport { CreateUmbracoTool } from \"@/helpers/create-umbraco-tool.js\";\r\nimport { getDataTypeByIdParams } from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\r\n\r\nconst GetDataTypeTool = CreateUmbracoTool(\r\n  \"get-data-type\",\r\n  \"Gets a data type by Id\",\r\n  getDataTypeByIdParams.shape,\r\n  async ({ id }) => {\r\n    try {\r\n      const client = UmbracoManagementClient.getClient();\r\n      const response = await client.getDataTypeById(id);\r\n\r\n      return {\r\n        content: [\r\n          {\r\n            type: \"text\" as const,\r\n            text: JSON.stringify(response),\r\n          },\r\n        ],\r\n        resource: {\r\n          type: \"data-type\" as const,\r\n          ...response,\r\n          uri: `/umbraco/section/settings/workspace/data-type/edit/${response.id}`,\r\n        },\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Error creating data type:\", error);\r\n      return {\r\n        content: [\r\n          {\r\n            type: \"text\" as const,\r\n            text: `Error: ${error}`,\r\n          },\r\n        ],\r\n      };\r\n    }\r\n  }\r\n);\r\n\r\nexport default GetDataTypeTool;\r\n","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\r\nimport { CreateUmbracoTool } from \"@/helpers/create-umbraco-tool.js\";\r\nimport { UpdateDataTypeRequestModel } from \"@/umb-management-api/schemas/index.js\";\r\nimport {\r\n  putDataTypeByIdBody,\r\n  putDataTypeByIdParams,\r\n} from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\r\n\r\nimport { z } from \"zod\";\r\n\r\nconst UpdateDataTypeTool = CreateUmbracoTool(\r\n  \"update-data-type\",\r\n  \"Updates a data type by Id\",\r\n  {\r\n    id: putDataTypeByIdParams.shape.id,\r\n    data: z.object(putDataTypeByIdBody.shape),\r\n  },\r\n  async (model: { id: string; data: UpdateDataTypeRequestModel }) => {\r\n    try {\r\n      const client = UmbracoManagementClient.getClient();\r\n      var response = await client.putDataTypeById(model.id, model.data);\r\n\r\n      return {\r\n        content: [\r\n          {\r\n            type: \"text\" as const,\r\n            text: JSON.stringify(response),\r\n          },\r\n        ],\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Error creating data type:\", error);\r\n      return {\r\n        content: [\r\n          {\r\n            type: \"text\" as const,\r\n            text: `Error: ${error}`,\r\n          },\r\n        ],\r\n      };\r\n    }\r\n  }\r\n);\r\n\r\nexport default UpdateDataTypeTool;\r\n","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\r\nimport { CreateUmbracoTool } from \"@/helpers/create-umbraco-tool.js\";\r\nimport { CopyDataTypeRequestModel } from \"@/umb-management-api/schemas/index.js\";\r\nimport {\r\n  postDataTypeByIdCopyParams,\r\n  postDataTypeByIdCopyBody,\r\n} from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\r\nimport { z } from \"zod\";\r\n\r\nconst CopyDataTypeTool = CreateUmbracoTool(\r\n  \"copy-data-type\",\r\n  \"Copy a data type by Id\",\r\n  {\r\n    id: postDataTypeByIdCopyParams.shape.id,\r\n    body: z.object(postDataTypeByIdCopyBody.shape),\r\n  },\r\n  async ({ id, body }: { id: string; body: CopyDataTypeRequestModel }) => {\r\n    try {\r\n      const client = UmbracoManagementClient.getClient();\r\n      var response = await client.postDataTypeByIdCopy(id, body);\r\n\r\n      return {\r\n        content: [\r\n          {\r\n            type: \"text\" as const,\r\n            text: JSON.stringify(response),\r\n          },\r\n        ],\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Error copying data type:\", error);\r\n      return {\r\n        content: [\r\n          {\r\n            type: \"text\" as const,\r\n            text: `Error: ${error}`,\r\n          },\r\n        ],\r\n      };\r\n    }\r\n  }\r\n);\r\n\r\nexport default CopyDataTypeTool;\r\n","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\r\nimport { CreateUmbracoTool } from \"@/helpers/create-umbraco-tool.js\";\r\nimport { getDataTypeByIdIsUsedParams } from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\r\n\r\nconst IsUsedDataTypeTool = CreateUmbracoTool(\r\n  \"is-used-data-type\",\r\n  \"Checks if a data type is used within Umbraco\",\r\n  getDataTypeByIdIsUsedParams.shape,\r\n  async ({ id }) => {\r\n    try {\r\n      const client = UmbracoManagementClient.getClient();\r\n      var response = await client.getDataTypeByIdIsUsed(id);\r\n\r\n      return {\r\n        content: [\r\n          {\r\n            type: \"text\" as const,\r\n            text: JSON.stringify(response),\r\n          },\r\n        ],\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Error creating data type:\", error);\r\n      return {\r\n        content: [\r\n          {\r\n            type: \"text\" as const,\r\n            text: `Error: ${error}`,\r\n          },\r\n        ],\r\n      };\r\n    }\r\n  }\r\n);\r\n\r\nexport default IsUsedDataTypeTool;\r\n","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\r\nimport { CreateUmbracoTool } from \"@/helpers/create-umbraco-tool.js\";\r\nimport { MoveDataTypeRequestModel } from \"@/umb-management-api/schemas/index.js\";\r\nimport {\r\n  putDataTypeByIdMoveParams,\r\n  putDataTypeByIdMoveBody,\r\n} from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\r\n\r\nimport { z } from \"zod\";\r\n\r\nconst MoveDataTypeTool = CreateUmbracoTool(\r\n  \"move-data-type\",\r\n  \"Updates a data type by Id\",\r\n  {\r\n    id: putDataTypeByIdMoveParams.shape.id,\r\n    data: z.object(putDataTypeByIdMoveBody.shape),\r\n  },\r\n  async (model: { id: string; data: MoveDataTypeRequestModel }) => {\r\n    try {\r\n      const client = UmbracoManagementClient.getClient();\r\n      var response = await client.putDataTypeByIdMove(model.id, model.data);\r\n\r\n      return {\r\n        content: [\r\n          {\r\n            type: \"text\" as const,\r\n            text: JSON.stringify(response),\r\n          },\r\n        ],\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Error creating data type:\", error);\r\n      return {\r\n        content: [\r\n          {\r\n            type: \"text\" as const,\r\n            text: `Error: ${error}`,\r\n          },\r\n        ],\r\n      };\r\n    }\r\n  }\r\n);\r\n\r\nexport default MoveDataTypeTool;\r\n","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\r\nimport { CreateUmbracoTool } from \"@/helpers/create-umbraco-tool.js\";\r\nimport { getDataTypeByIdReferencesParams } from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\r\n\r\nconst GetReferencesDataTypeTool = CreateUmbracoTool(\r\n  \"get-references-data-type\",\r\n  \"Gets a data type by Id\",\r\n  getDataTypeByIdReferencesParams.shape,\r\n  async ({ id }) => {\r\n    try {\r\n      const client = UmbracoManagementClient.getClient();\r\n      var response = await client.getDataTypeByIdReferences(id);\r\n\r\n      return {\r\n        content: [\r\n          {\r\n            type: \"text\" as const,\r\n            text: JSON.stringify(response),\r\n          },\r\n        ],\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Error creating data type:\", error);\r\n      return {\r\n        content: [\r\n          {\r\n            type: \"text\" as const,\r\n            text: `Error: ${error}`,\r\n          },\r\n        ],\r\n      };\r\n    }\r\n  }\r\n);\r\n\r\nexport default GetReferencesDataTypeTool;\r\n","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\r\nimport { CreateUmbracoTool } from \"@/helpers/create-umbraco-tool.js\";\r\nimport { CreateFolderRequestModel } from \"@/umb-management-api/schemas/index.js\";\r\nimport { postDataTypeFolderBody } from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\r\n\r\nconst CreateDataTypeFolderTool = CreateUmbracoTool(\r\n  \"create-data-type-folder\",\r\n  \"Creates a new data type folder\",\r\n  postDataTypeFolderBody.shape,\r\n  async (model: CreateFolderRequestModel) => {\r\n    try {\r\n      const client = UmbracoManagementClient.getClient();\r\n      var response = await client.postDataTypeFolder(model);\r\n\r\n      return {\r\n        content: [\r\n          {\r\n            type: \"text\" as const,\r\n            text: JSON.stringify(response),\r\n          },\r\n        ],\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Error creating data type:\", error);\r\n      return {\r\n        content: [\r\n          {\r\n            type: \"text\" as const,\r\n            text: `Error: ${error}`,\r\n          },\r\n        ],\r\n      };\r\n    }\r\n  }\r\n);\r\n\r\nexport default CreateDataTypeFolderTool;\r\n","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\r\nimport { CreateUmbracoTool } from \"@/helpers/create-umbraco-tool.js\";\r\nimport { deleteDataTypeFolderByIdParams } from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\r\n\r\nconst DeleteDataTypeFolderTool = CreateUmbracoTool(\r\n  \"delete-data-type-folder\",\r\n  \"Deletes a data type folder by Id\",\r\n  deleteDataTypeFolderByIdParams.shape,\r\n  async ({ id }) => {\r\n    try {\r\n      const client = UmbracoManagementClient.getClient();\r\n      var response = await client.deleteDataTypeFolderById(id);\r\n\r\n      return {\r\n        content: [\r\n          {\r\n            type: \"text\" as const,\r\n            text: JSON.stringify(response),\r\n          },\r\n        ],\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Error creating data type:\", error);\r\n      return {\r\n        content: [\r\n          {\r\n            type: \"text\" as const,\r\n            text: `Error: ${error}`,\r\n          },\r\n        ],\r\n      };\r\n    }\r\n  }\r\n);\r\n\r\nexport default DeleteDataTypeFolderTool;\r\n","import { UmbracoManagementClient } from \"@/clients/umbraco-management-client.js\";\r\nimport { CreateUmbracoTool } from \"@/helpers/create-umbraco-tool.js\";\r\nimport { getDataTypeFolderByIdParams } from \"@/umb-management-api/umbracoManagementAPI.zod.js\";\r\n\r\nconst GetDataTypeFolderTool = CreateUmbracoTool(\r\n  \"get-data-type-folder\",\r\n  \"Gets a data typ folder by Id\",\r\n  getDataTypeFolderByIdParams.shape,\r\n  async ({ id }) => {\r\n    try {\r\n      const client = UmbracoManagementClient.getClient();\r\n      var response = await client.getDataTypeFolderById(id);\r\n\r\n      return {\r\n        content: [\r\n          {\r\n            type: \"text\" as const,\r\n            text: JSON.stringify(response),\r\n          },\r\n        ],\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Error creating data type:\", error);\r\n      return {\r\n        content: [\r\n          {\r\n            type: \"text\" as const,\r\n            text: `Error: ${error}`,\r\n          },\r\n        ],\r\n      };\r\n    }\r\n  }\r\n);\r\n\r\nexport default GetDataTypeFolderTool;\r\n","import GetDataTypeRootTool from \"./get/get-root.js\";\r\nimport CreateDataTypeTool from \"./post/create-data-type.js\";\r\nimport DeleteDataTypeTool from \"./delete/delete-data-type.js\";\r\nimport FindDataTypeTool from \"./get/find-data-type.js\";\r\nimport GetDataTypeTool from \"./get/get-data-type.js\";\r\nimport UpdateDataTypeTool from \"./put/update-data-type.js\";\r\nimport CopyDataTypeTool from \"./post/copy-data-type.js\";\r\nimport IsUsedDataTypeTool from \"./get/is-used-data-type.js\";\r\nimport MoveDataTypeTool from \"./put/move-data-type.js\";\r\nimport GetReferencesDataTypeTool from \"./get/get-references-data-type.js\";\r\nimport CreateDataTypeFolderTool from \"./folders/post/create-folder.js\";\r\nimport DeleteDataTypeFolderTool from \"./folders/delete/delete-folder.js\";\r\nimport GetDataTypeFolderTool from \"./folders/get/get-folder.js\";\r\n\r\nexport const DataTypeTools = [\r\n  GetDataTypeRootTool,\r\n  CreateDataTypeTool,\r\n  DeleteDataTypeTool,\r\n  FindDataTypeTool,\r\n  GetDataTypeTool,\r\n  UpdateDataTypeTool,\r\n  CopyDataTypeTool,\r\n  IsUsedDataTypeTool,\r\n  MoveDataTypeTool,\r\n  GetReferencesDataTypeTool,\r\n  CreateDataTypeFolderTool,\r\n  DeleteDataTypeFolderTool,\r\n  GetDataTypeFolderTool,\r\n];\r\n","import { McpServer } from \"@modelcontextprotocol/sdk/server/mcp.js\";\r\n\r\nimport { CultureTools } from \"./culture/index.js\";\r\nimport { DataTypeTools } from \"./data-types/index.js\";\r\n\r\nexport function ToolFactory(server: McpServer) {\r\n  CultureTools.map((tool) => tool()).forEach((tool) =>\r\n    server.tool(tool.name, tool.description, tool.schema, tool.handler)\r\n  );\r\n  DataTypeTools.map((tool) => tool()).forEach((tool) =>\r\n    server.tool(tool.name, tool.description, tool.schema, tool.handler)\r\n  );\r\n}\r\n"],"mappings":";;;AAEA,SAAS,4BAA4B;;;ACFrC,SAAS,iBAAiB;AAEnB,IAAM,mBAAN,MAAM,kBAAiB;AAAA,EAC5B,OAAe,WAA6B;AAAA,EAEpC,cAAc;AAAA,EAAC;AAAA,EAEvB,OAAc,YAAuB;AACnC,QAAI,kBAAiB,aAAa,MAAM;AACtC,wBAAiB,WAAW,IAAI,UAAU;AAAA,QACxC,MAAM;AAAA,QACN,SAAS;AAAA,QACT,cAAc;AAAA,UACZ,OAAO,CAAC;AAAA,QACV;AAAA,MACF,CAAC;AAAA,IACH;AACA,WAAO,kBAAiB;AAAA,EAC1B;AACF;;;ACnBA,OAAO,WAAmC;AAE1C,IAAM,YAAY,QAAQ,IAAI;AAC9B,IAAM,gBAAgB,QAAQ,IAAI;AAClC,IAAM,aAAa;AAEnB,IAAM,UAAU,QAAQ,IAAI;AAE5B,IAAI,CAAC;AACH,QAAM,IAAI,MAAM,yDAAyD;AAC3E,IAAI,CAAC;AACH,QAAM,IAAI,MAAM,0DAA0D;AAC5E,IAAI,CAAC,iBAAiB,cAAc;AAClC,QAAM,IAAI;AAAA,IACR;AAAA,EACF;AAEF,IAAM,YAAY;AAEX,IAAM,eAAe,MAAM,OAAO,EAAE,QAAQ,CAAC;AAEpD,IAAI,cAA6B;AACjC,IAAI,cAA6B;AAGjC,IAAM,mBAAmB,YAAoC;AAC3D,QAAM,WAAW,MAAM,MAAM;AAAA,IAC3B,GAAG,OAAO,GAAG,SAAS;AAAA,IACtB;AAAA,MACE;AAAA,MACA,eAAe,iBAAiB;AAAA,MAChC;AAAA,IACF;AAAA,IACA;AAAA,MACE,SAAS;AAAA,QACP,gBAAgB;AAAA,MAClB;AAAA,IACF;AAAA,EACF;AAEA,QAAM,EAAE,cAAc,WAAW,IAAI,SAAS;AAC9C,gBAAc;AACd,gBAAc,KAAK,IAAI,IAAI,aAAa;AACxC,SAAO;AACT;AAGA,aAAa,aAAa,QAAQ,IAAI,OAAO,WAAW;AACtD,MAAI,CAAC,eAAgB,eAAe,KAAK,IAAI,KAAK,aAAc;AAC9D,UAAM,iBAAiB;AAAA,EACzB;AAEA,MAAI,aAAa;AACf,WAAO,QAAQ,gBAAgB,UAAU,WAAW;AAAA,EACtD;AAEA,SAAO;AACT,CAAC;AAGD,aAAa,aAAa,SAAS;AAAA,EACjC,CAAC,aAAa;AAAA;AAAA,EACd,CAAC,UAAU;AACT,QAAI,MAAM,UAAU;AAElB,cAAQ;AAAA,QACN,eAAe,MAAM,SAAS,MAAM;AAAA,QACpC,MAAM,SAAS;AAAA,MACjB;AAAA,IACF,WAAW,MAAM,SAAS;AAExB,cAAQ,MAAM,yBAAyB,MAAM,OAAO;AAAA,IACtD,OAAO;AAEL,cAAQ,MAAM,6BAA6B,MAAM,OAAO;AAAA,IAC1D;AAGA,WAAO,QAAQ,OAAO,KAAK;AAAA,EAC7B;AACF;AAGO,IAAM,0BAA0B,CACrC,QACA,YACe;AACf,QAAM,SAAS,MAAM,YAAY,OAAO;AACxC,QAAM,UAAU,aAAa;AAAA,IAC3B,GAAG;AAAA,IACH,GAAG;AAAA,IACH,aAAa,OAAO;AAAA,EACtB,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,MAAM,IAAI;AAG1B,UAAQ,SAAS,MAAM;AACrB,WAAO,OAAO,qBAAqB;AAAA,EACrC;AAEA,SAAO;AACT;;;ACqWS,IAAM,0BAA0B,MAAM;AAC/C,QAAM,aAAa,CACf,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAsC,QAAQ;AAAA,QAClD;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,eAAe,CACjB,4BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAwC,QAAQ;AAAA,QACtD,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,kBAAkB,CACpB,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,wCAAwC,EAAE;AAAA,QAAI,QAAQ;AAAA,MAC9D;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,qBAAqB,CACvB,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,wCAAwC,EAAE;AAAA,QAAI,QAAQ;AAAA,MAC9D;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,kBAAkB,CACpB,IACA,4BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,wCAAwC,EAAE;AAAA,QAAI,QAAQ;AAAA,QAC5D,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,uBAAuB,CACzB,IACA,0BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,wCAAwC,EAAE;AAAA,QAAS,QAAQ;AAAA,QACjE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wBAAwB,CAC1B,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,wCAAwC,EAAE;AAAA,QAAY,QAAQ;AAAA,MACtE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,sBAAsB,CACxB,IACA,0BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,wCAAwC,EAAE;AAAA,QAAS,QAAQ;AAAA,QACjE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,4BAA4B,CAC9B,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,wCAAwC,EAAE;AAAA,QAAe,QAAQ;AAAA,MACzE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,2BAA2B,CAEhC,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAsD,QAAQ;AAAA,MACtE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,qBAAqB,CACvB,0BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA+C,QAAQ;AAAA,QAC7D,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wBAAwB,CAC1B,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,+CAA+C,EAAE;AAAA,QAAI,QAAQ;AAAA,MACrE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,2BAA2B,CAC7B,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,+CAA+C,EAAE;AAAA,QAAI,QAAQ;AAAA,MACrE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wBAAwB,CAC1B,IACA,2BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,+CAA+C,EAAE;AAAA,QAAI,QAAQ;AAAA,QACnE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,oBAAoB,CACtB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA+C,QAAQ;AAAA,QAC3D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,kBAAkB,CACpB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA6C,QAAQ;AAAA,QACzD;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wBAAwB,CAC1B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAoD,QAAQ;AAAA,QAChE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,2BAA2B,CAC7B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAuD,QAAQ;AAAA,QACnE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,0BAA0B,CAC5B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAsD,QAAQ;AAAA,QAClE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,sBAAsB,CACxB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAkD,QAAQ;AAAA,QAC9D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,gBAAgB,CAClB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAyC,QAAQ;AAAA,QACrD;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,iBAAiB,CACnB,kCACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAyC,QAAQ;AAAA,QACvD,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,oBAAoB,CACtB,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,yCAAyC,EAAE;AAAA,QAAI,QAAQ;AAAA,MAC/D;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,uBAAuB,CACzB,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,yCAAyC,EAAE;AAAA,QAAI,QAAQ;AAAA,MAC/D;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,oBAAoB,CACtB,IACA,kCACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,yCAAyC,EAAE;AAAA,QAAI,QAAQ;AAAA,QAC7D,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,0BAA0B,CAC5B,IACA,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,yCAAyC,EAAE;AAAA,QAAW,QAAQ;AAAA,QAClE;AAAA,QACA,cAAc;AAAA,MAClB;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wBAAwB,CAC1B,IACA,4BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,yCAAyC,EAAE;AAAA,QAAS,QAAQ;AAAA,QAClE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,uBAAuB,CACzB,8BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAgD,QAAQ;AAAA,QAC9D,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,oBAAoB,CACtB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA8C,QAAQ;AAAA,QAC1D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,6BAA6B,CAC/B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAwD,QAAQ;AAAA,QACpE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,4BAA4B,CAC9B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAuD,QAAQ;AAAA,QACnE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wBAAwB,CAC1B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAmD,QAAQ;AAAA,QAC/D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wBAAwB,CAC1B,qCACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAiD,QAAQ;AAAA,QAC/D,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,2BAA2B,CAC7B,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,iDAAiD,EAAE;AAAA,QAAI,QAAQ;AAAA,MACvE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,8BAA8B,CAChC,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,iDAAiD,EAAE;AAAA,QAAI,QAAQ;AAAA,MACvE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,2BAA2B,CAC7B,IACA,qCACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,iDAAiD,EAAE;AAAA,QAAI,QAAQ;AAAA,QACrE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,+BAA+B,CACjC,IACA,mCACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,iDAAiD,EAAE;AAAA,QAAS,QAAQ;AAAA,QAC1E,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,8BAA8B,CAChC,0BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAwD,QAAQ;AAAA,QACtE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,iCAAiC,CACnC,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,wDAAwD,EAAE;AAAA,QAAI,QAAQ;AAAA,MAC9E;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,oCAAoC,CACtC,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,wDAAwD,EAAE;AAAA,QAAI,QAAQ;AAAA,MAC9E;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,iCAAiC,CACnC,IACA,2BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,wDAAwD,EAAE;AAAA,QAAI,QAAQ;AAAA,QAC5E,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,oCAAoC,CACtC,iDACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA+D,QAAQ;AAAA,QAC7E,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,2BAA2B,CAC7B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAsD,QAAQ;AAAA,QAClE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,oCAAoC,CACtC,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAgE,QAAQ;AAAA,QAC5E;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,mCAAmC,CACrC,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA+D,QAAQ;AAAA,QAC3E;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,+BAA+B,CACjC,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA2D,QAAQ;AAAA,QACvE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,mBAAmB,CACrB,gCACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA4C,QAAQ;AAAA,QAC1D,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,sBAAsB,CACxB,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,4CAA4C,EAAE;AAAA,QAAI,QAAQ;AAAA,MAClE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,yBAAyB,CAC3B,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,4CAA4C,EAAE;AAAA,QAAI,QAAQ;AAAA,MAClE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,sBAAsB,CACxB,IACA,gCACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,4CAA4C,EAAE;AAAA,QAAI,QAAQ;AAAA,QAChE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,qCAAqC,CACvC,IACA,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,4CAA4C,EAAE;AAAA,QAAqB,QAAQ;AAAA,QAC/E;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,+BAA+B,CACjC,IACA,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,4CAA4C,EAAE;AAAA,QAAc,QAAQ;AAAA,QACxE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,2CAA2C,CAC7C,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,4CAA4C,EAAE;AAAA,QAA2B,QAAQ;AAAA,MACzF;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,2BAA2B,CAC7B,IACA,8BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,4CAA4C,EAAE;AAAA,QAAS,QAAQ;AAAA,QACrE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,4BAA4B,CAC9B,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,4CAA4C,EAAE;AAAA,QAAW,QAAQ;AAAA,QACrE,cAAc;AAAA,MAClB;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,4BAA4B,CAC9B,IACA,gCACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,4CAA4C,EAAE;AAAA,QAAW,QAAQ;AAAA,QACvE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,0BAA0B,CAC5B,IACA,8BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,4CAA4C,EAAE;AAAA,QAAS,QAAQ;AAAA,QACrE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,+BAA+B,CACjC,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA4D,QAAQ;AAAA,QACxE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wCAAwC,CAC1C,qCACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAmE,QAAQ;AAAA,QACjF,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,+BAA+B,CAEpC,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA0D,QAAQ;AAAA,MAC1E;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,yBAAyB,CAC3B,0BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAmD,QAAQ;AAAA,QACjE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,4BAA4B,CAC9B,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,mDAAmD,EAAE;AAAA,QAAI,QAAQ;AAAA,MACzE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,+BAA+B,CACjC,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,mDAAmD,EAAE;AAAA,QAAI,QAAQ;AAAA,MACzE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,4BAA4B,CAC9B,IACA,2BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,mDAAmD,EAAE;AAAA,QAAI,QAAQ;AAAA,QACvE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,yBAAyB,CAC3B,gCACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAmD,QAAQ;AAAA,QACjE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,sBAAsB,CACxB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAiD,QAAQ;AAAA,QAC7D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,4BAA4B,CAC9B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAwD,QAAQ;AAAA,QACpE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,+BAA+B,CACjC,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA2D,QAAQ;AAAA,QACvE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,8BAA8B,CAChC,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA0D,QAAQ;AAAA,QACtE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,0BAA0B,CAC5B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAsD,QAAQ;AAAA,QAClE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,qBAAqB,CACvB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA+C,QAAQ;AAAA,QAC3D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,yBAAyB,CAC3B,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,+CAA+C,EAAE;AAAA,QAAI,QAAQ;AAAA,MACrE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,uCAAuC,CACzC,IACA,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,+CAA+C,EAAE;AAAA,QAAoB,QAAQ;AAAA,QACjF;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,kCAAkC,CACpC,IACA,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,+CAA+C,EAAE;AAAA,QAAa,QAAQ;AAAA,QAC1E;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,4BAA4B,CAC9B,IACA,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,kDAAkD,EAAE;AAAA,QAAI,QAAQ;AAAA,QACpE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,eAAe,CACjB,4BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAuC,QAAQ;AAAA,QACrD,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,kBAAkB,CACpB,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,uCAAuC,EAAE;AAAA,QAAI,QAAQ;AAAA,MAC7D;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,qBAAqB,CACvB,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,uCAAuC,EAAE;AAAA,QAAI,QAAQ;AAAA,MAC7D;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,kBAAkB,CACpB,IACA,4BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,uCAAuC,EAAE;AAAA,QAAI,QAAQ;AAAA,QAC3D,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,0BAA0B,CAC5B,IACA,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,uCAAuC,EAAE;AAAA,QAAc,QAAQ;AAAA,QACnE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,uBAAuB,CACzB,IACA,0BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,uCAAuC,EAAE;AAAA,QAAS,QAAQ;AAAA,QAChE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,yBAAyB,CAC3B,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,uCAAuC,EAAE;AAAA,QAAY,QAAQ;AAAA,MACrE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,yBAAyB,CAC3B,IACA,2BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,uCAAuC,EAAE;AAAA,QAAY,QAAQ;AAAA,QACnE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,sBAAsB,CACxB,IACA,0BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,uCAAuC,EAAE;AAAA,QAAS,QAAQ;AAAA,QAChE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,kCAAkC,CACpC,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,uCAAuC,EAAE;AAAA,QAAwB,QAAQ;AAAA,MACjF;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,+BAA+B,CACjC,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,uCAAuC,EAAE;AAAA,QAAkB,QAAQ;AAAA,MAC3E;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,+BAA+B,CACjC,IACA,yCACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,uCAAuC,EAAE;AAAA,QAAkB,QAAQ;AAAA,QACzE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,+BAA+B,CACjC,IACA,0BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,uCAAuC,EAAE;AAAA,QAAkB,QAAQ;AAAA,QACzE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,iCAAiC,CACnC,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,uCAAuC,EAAE;AAAA,QAAkB,QAAQ;AAAA,MAC3E;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,8BAA8B,CAChC,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,uCAAuC,EAAE;AAAA,QAAkB,QAAQ;AAAA,MAC3E;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,8BAA8B,CAChC,IACA,0BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,uCAAuC,EAAE;AAAA,QAAkB,QAAQ;AAAA,QACzE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,yBAAyB,CAC3B,IACA,6BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,uCAAuC,EAAE;AAAA,QAAY,QAAQ;AAAA,QACnE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wCAAwC,CAC1C,IACA,4CACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,uCAAuC,EAAE;AAAA,QAA6B,QAAQ;AAAA,QACpF,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,2BAA2B,CAC7B,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,uCAAuC,EAAE;AAAA,QAAc,QAAQ;AAAA,MACvE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,8BAA8B,CAChC,IACA,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,uCAAuC,EAAE;AAAA,QAAkB,QAAQ;AAAA,QACvE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,uCAAuC,CACzC,IACA,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,uCAAuC,EAAE;AAAA,QAA2B,QAAQ;AAAA,QAChF;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,2BAA2B,CAC7B,IACA,+BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,uCAAuC,EAAE;AAAA,QAAc,QAAQ;AAAA,QACrE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAKJ,QAAM,0BAA0B,CAC5B,IACA,4BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,uCAAuC,EAAE;AAAA,QAAa,QAAQ;AAAA,QACpE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,mDAAmD,CACrD,IACA,oCACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,yCAAyC,EAAE;AAAA,QAAa,QAAQ;AAAA,QACtE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,2BAA2B,CAC7B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAsD,QAAQ;AAAA,QAClE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,2BAA2B,CAEhC,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAqD,QAAQ;AAAA,MACrE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,kBAAkB,CACpB,qBACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA4C,QAAQ;AAAA,QAC1D,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,kBAAkB,CACpB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA4C,QAAQ;AAAA,QACxD;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,uBAAuB,CACzB,4BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAgD,QAAQ;AAAA,QAC9D,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,kBAAkB,CACpB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA4C,QAAQ;AAAA,QACxD;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wBAAwB,CAC1B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAmD,QAAQ;AAAA,QAC/D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,2BAA2B,CAEhC,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAmD,QAAQ;AAAA,MACnE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,+BAA+B,CACjC,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,mDAAmD,EAAE;AAAA,QAAI,QAAQ;AAAA,MACzE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,0CAA0C,CAC5C,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,mDAAmD,EAAE;AAAA,QAAoB,QAAQ;AAAA,MACzF;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,mCAAmC,CACrC,IACA,uBACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,mDAAmD,EAAE;AAAA,QAAY,QAAQ;AAAA,QAC/E,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,gCAAgC,CAClC,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA4D,QAAQ;AAAA,QACxE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,4BAA4B,CAC9B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAwD,QAAQ;AAAA,QACpE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,2BAA2B,CAC7B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAsD,QAAQ;AAAA,QAClE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,0BAA0B,CAC5B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAqD,QAAQ;AAAA,QACjE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,sBAAsB,CACxB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAiD,QAAQ;AAAA,QAC7D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,uBAAuB,CACzB,yBACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAiD,QAAQ;AAAA,QAC/D,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,sBAAsB,CAE3B,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAiD,QAAQ;AAAA,MACjE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,sBAAsB,CACxB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAiD,QAAQ;AAAA,QAC7D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,4BAA4B,CAC9B,MACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,iDAAiD,IAAI;AAAA,QAAI,QAAQ;AAAA,MACzE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,kCAAkC,CACpC,MACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,iDAAiD,IAAI;AAAA,QAAU,QAAQ;AAAA,MAC/E;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,+BAA+B,CACjC,+BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA0D,QAAQ;AAAA,QACxE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,UAAU,CACZ,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAmC,QAAQ;AAAA,QAC/C;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,uBAAuB,CACzB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAkD,QAAQ;AAAA,QAC9D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,mBAAmB,CACrB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA6C,QAAQ;AAAA,QACzD;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,aAAa,CACf,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAsC,QAAQ;AAAA,QAClD;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wBAAwB,CAC1B,WACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,sCAAsC,SAAS;AAAA,QAAI,QAAQ;AAAA,MACnE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,gCAAgC,CAClC,WACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,sCAAsC,SAAS;AAAA,QAAY,QAAQ;AAAA,MAC3E;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,qBAAqB,CAE1B,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA+C,QAAQ;AAAA,MAC/D;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,mBAAmB,CACrB,qBACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA4C,QAAQ;AAAA,QAC1D,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,8BAA8B,CAChC,6BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAwD,QAAQ;AAAA,QACtE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,kBAAkB,CACpB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA4C,QAAQ;AAAA,QACxD;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,yBAAyB,CAE9B,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAoD,QAAQ;AAAA,MACpE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,cAAc,CAChB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAuC,QAAQ;AAAA,QACnD;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,eAAe,CACjB,4BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAuC,QAAQ;AAAA,QACrD,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,uBAAuB,CACzB,SACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,uCAAuC,OAAO;AAAA,QAAI,QAAQ;AAAA,MAClE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,0BAA0B,CAC5B,SACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,uCAAuC,OAAO;AAAA,QAAI,QAAQ;AAAA,MAClE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,uBAAuB,CACzB,SACA,4BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,uCAAuC,OAAO;AAAA,QAAI,QAAQ;AAAA,QAChE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,oBAAoB,CACtB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA+C,QAAQ;AAAA,QAC3D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,yBAAyB,CAC3B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAqD,QAAQ;AAAA,QACjE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,kBAAkB,CACpB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA6C,QAAQ;AAAA,QACzD;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,8BAA8B,CAChC,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA0D,QAAQ;AAAA,QACtE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,0BAA0B,CAC5B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAsD,QAAQ;AAAA,QAClE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,2BAA2B,CAC7B,4BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAsD,QAAQ;AAAA,QACpE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,gCAAgC,CAClC,MACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,sDAAsD,IAAI;AAAA,QAAI,QAAQ;AAAA,MAC9E;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,mCAAmC,CACrC,MACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,sDAAsD,IAAI;AAAA,QAAI,QAAQ;AAAA,MAC9E;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,+BAA+B,CACjC,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA4D,QAAQ;AAAA,QACxE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,sBAAsB,CAE3B,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAgD,QAAQ;AAAA,MAChE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,6BAA6B,CAElC,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAwD,QAAQ;AAAA,MACxE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,4BAA4B,CAEjC,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAuD,QAAQ;AAAA,MACvE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,mBAAmB,CACrB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA8C,QAAQ;AAAA,QAC1D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,0BAA0B,CAC5B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAsD,QAAQ;AAAA,QAClE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,0BAA0B,CAC5B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAsD,QAAQ;AAAA,QAClE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,yBAAyB,CAC3B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAqD,QAAQ;AAAA,QACjE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,gBAAgB,CAClB,6BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAyC,QAAQ;AAAA,QACvD,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,mBAAmB,CACrB,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,yCAAyC,EAAE;AAAA,QAAI,QAAQ;AAAA,MAC/D;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,sBAAsB,CACxB,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,yCAAyC,EAAE;AAAA,QAAI,QAAQ;AAAA,MAC/D;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,mBAAmB,CACrB,IACA,6BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,yCAAyC,EAAE;AAAA,QAAI,QAAQ;AAAA,QAC7D,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,kCAAkC,CACpC,IACA,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,yCAAyC,EAAE;AAAA,QAAqB,QAAQ;AAAA,QAC5E;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wCAAwC,CAC1C,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,yCAAyC,EAAE;AAAA,QAA2B,QAAQ;AAAA,MACtF;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wBAAwB,CAC1B,IACA,2BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,yCAAyC,EAAE;AAAA,QAAS,QAAQ;AAAA,QAClE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,yBAAyB,CAC3B,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,yCAAyC,EAAE;AAAA,QAAW,QAAQ;AAAA,QAClE,cAAc;AAAA,MAClB;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,yBAAyB,CAC3B,IACA,6BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,yCAAyC,EAAE;AAAA,QAAW,QAAQ;AAAA,QACpE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,uBAAuB,CACzB,IACA,2BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,yCAAyC,EAAE;AAAA,QAAS,QAAQ;AAAA,QAClE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,4BAA4B,CAC9B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAyD,QAAQ;AAAA,QACrE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,qCAAqC,CACvC,kCACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAgE,QAAQ;AAAA,QAC9E,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,4BAA4B,CAEjC,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAuD,QAAQ;AAAA,MACvE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,sBAAsB,CACxB,0BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAgD,QAAQ;AAAA,QAC9D,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,yBAAyB,CAC3B,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,gDAAgD,EAAE;AAAA,QAAI,QAAQ;AAAA,MACtE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,4BAA4B,CAC9B,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,gDAAgD,EAAE;AAAA,QAAI,QAAQ;AAAA,MACtE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,yBAAyB,CAC3B,IACA,2BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,gDAAgD,EAAE;AAAA,QAAI,QAAQ;AAAA,QACpE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,sBAAsB,CACxB,6BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAgD,QAAQ;AAAA,QAC9D,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,4BAA4B,CAC9B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAwD,QAAQ;AAAA,QACpE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,2BAA2B,CAC7B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAuD,QAAQ;AAAA,QACnE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,uBAAuB,CACzB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAmD,QAAQ;AAAA,QAC/D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,qBAAqB,CACvB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA+C,QAAQ;AAAA,QAC3D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,eAAe,CACjB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAyC,QAAQ;AAAA,QACrD;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,qBAAqB,CACvB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAgD,QAAQ;AAAA,QAC5D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,YAAY,CACd,yBACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAoC,QAAQ;AAAA,QAClD,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,eAAe,CACjB,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,oCAAoC,EAAE;AAAA,QAAI,QAAQ;AAAA,MAC1D;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,kBAAkB,CACpB,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,oCAAoC,EAAE;AAAA,QAAI,QAAQ;AAAA,MAC1D;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,eAAe,CACjB,IACA,yBACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,oCAAoC,EAAE;AAAA,QAAI,QAAQ;AAAA,QACxD,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,uBAAuB,CACzB,IACA,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,oCAAoC,EAAE;AAAA,QAAc,QAAQ;AAAA,QAChE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,mBAAmB,CACrB,IACA,uBACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,oCAAoC,EAAE;AAAA,QAAS,QAAQ;AAAA,QAC7D,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,+BAA+B,CACjC,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,oCAAoC,EAAE;AAAA,QAAwB,QAAQ;AAAA,MAC9E;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,2BAA2B,CAC7B,IACA,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,oCAAoC,EAAE;AAAA,QAAkB,QAAQ;AAAA,QACpE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,oCAAoC,CACtC,IACA,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,oCAAoC,EAAE;AAAA,QAA2B,QAAQ;AAAA,QAC7E;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,uBAAuB,CACzB,IACA,yBACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,oCAAoC,EAAE;AAAA,QAAa,QAAQ;AAAA,QACjE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wBAAwB,CAC1B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAmD,QAAQ;AAAA,QAC/D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wBAAwB,CAE7B,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAkD,QAAQ;AAAA,MAClE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,eAAe,CACjB,qBACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAyC,QAAQ;AAAA,QACvD,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,eAAe,CACjB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAyC,QAAQ;AAAA,QACrD;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,oBAAoB,CACtB,yBACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA6C,QAAQ;AAAA,QAC3D,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wBAAwB,CAE7B,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAgD,QAAQ;AAAA,MAChE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,4BAA4B,CAC9B,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,gDAAgD,EAAE;AAAA,QAAI,QAAQ;AAAA,MACtE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,uCAAuC,CACzC,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,gDAAgD,EAAE;AAAA,QAAoB,QAAQ;AAAA,MACtF;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,gCAAgC,CAClC,IACA,uBACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,gDAAgD,EAAE;AAAA,QAAY,QAAQ;AAAA,QAC5E,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,6BAA6B,CAC/B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAyD,QAAQ;AAAA,QACrE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,yBAAyB,CAC3B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAqD,QAAQ;AAAA,QACjE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wBAAwB,CAC1B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAmD,QAAQ;AAAA,QAC/D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,uBAAuB,CACzB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAkD,QAAQ;AAAA,QAC9D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,mBAAmB,CACrB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA8C,QAAQ;AAAA,QAC1D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,qBAAqB,CACvB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAgD,QAAQ;AAAA,QAC5D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,iBAAiB,CACnB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA2C,QAAQ;AAAA,QACvD;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,kBAAkB,CACpB,+BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA2C,QAAQ;AAAA,QACzD,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,qBAAqB,CACvB,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,2CAA2C,EAAE;AAAA,QAAI,QAAQ;AAAA,MACjE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wBAAwB,CAC1B,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,2CAA2C,EAAE;AAAA,QAAI,QAAQ;AAAA,MACjE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,qBAAqB,CACvB,IACA,+BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,2CAA2C,EAAE;AAAA,QAAI,QAAQ;AAAA,QAC/D,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,yBAAyB,CAC3B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAqD,QAAQ;AAAA,QACjE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,oBAAoB,CACtB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA+C,QAAQ;AAAA,QAC3D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,0BAA0B,CAC5B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAsD,QAAQ;AAAA,QAClE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,iBAAiB,CACnB,8BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA0C,QAAQ;AAAA,QACxD,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,oBAAoB,CACtB,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,0CAA0C,EAAE;AAAA,QAAI,QAAQ;AAAA,MAChE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,uBAAuB,CACzB,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,0CAA0C,EAAE;AAAA,QAAI,QAAQ;AAAA,MAChE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,oBAAoB,CACtB,IACA,8BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,0CAA0C,EAAE;AAAA,QAAI,QAAQ;AAAA,QAC9D,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,yCAAyC,CAC3C,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,0CAA0C,EAAE;AAAA,QAA2B,QAAQ;AAAA,MACvF;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,yBAAyB,CAC3B,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,0CAA0C,EAAE;AAAA,QAAS,QAAQ;AAAA,MACrE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,sCAAsC,CACxC,mCACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAiE,QAAQ;AAAA,QAC/E,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,6BAA6B,CAElC,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAwD,QAAQ;AAAA,MACxE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wBAAwB,CAC1B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAoD,QAAQ;AAAA,QAChE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,kBAAkB,CACpB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA4C,QAAQ;AAAA,QACxD;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,gBAAgB,CAClB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA0C,QAAQ;AAAA,QACtD;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,sBAAsB,CACxB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAiD,QAAQ;AAAA,QAC7D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,aAAa,CACf,0BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAqC,QAAQ;AAAA,QACnD,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,gBAAgB,CAClB,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,qCAAqC,EAAE;AAAA,QAAI,QAAQ;AAAA,MAC3D;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,mBAAmB,CACrB,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,qCAAqC,EAAE;AAAA,QAAI,QAAQ;AAAA,MAC3D;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,gBAAgB,CAClB,IACA,0BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,qCAAqC,EAAE;AAAA,QAAI,QAAQ;AAAA,QACzD,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wBAAwB,CAC1B,IACA,0BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,qCAAqC,EAAE;AAAA,QAAa,QAAQ;AAAA,QAClE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,yBAAyB,CAE9B,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAmD,QAAQ;AAAA,MACnE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,qBAAqB,CACvB,0BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA8C,QAAQ;AAAA,QAC5D,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,yBAAyB,CAE9B,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAmD,QAAQ;AAAA,MACnE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,4BAA4B,CAEjC,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAuD,QAAQ;AAAA,MACvE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,yBAAyB,CAE9B,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAoD,QAAQ;AAAA,MACpE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,iBAAiB,CACnB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA2C,QAAQ;AAAA,QACvD;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,iBAAiB,CACnB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA2C,QAAQ;AAAA,QACvD;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,gCAAgC,CAClC,MACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,sCAAsC,IAAI;AAAA,QAAkB,QAAQ;AAAA,MAC5E;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,0BAA0B,CAE/B,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAoD,QAAQ;AAAA,MACpE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,oBAAoB,CACtB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA8C,QAAQ;AAAA,QAC1D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,qBAAqB,CACvB,2BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA8C,QAAQ;AAAA,QAC5D,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wBAAwB,CAC1B,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,8CAA8C,EAAE;AAAA,QAAI,QAAQ;AAAA,MACpE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,2BAA2B,CAC7B,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,8CAA8C,EAAE;AAAA,QAAI,QAAQ;AAAA,MACpE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wBAAwB,CAC1B,IACA,2BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,8CAA8C,EAAE;AAAA,QAAI,QAAQ;AAAA,QAClE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,gCAAgC,CAClC,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,8CAA8C,EAAE;AAAA,QAAa,QAAQ;AAAA,QACzE,cAAc;AAAA,MAClB;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,4BAA4B,CAC9B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAuD,QAAQ;AAAA,QACnE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,qBAAqB,CACvB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAgD,QAAQ;AAAA,QAC5D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,kBAAkB,CACpB,+BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA2C,QAAQ;AAAA,QACzD,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,uBAAuB,CACzB,MACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,2CAA2C,IAAI;AAAA,QAAI,QAAQ;AAAA,MACnE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,0BAA0B,CAC5B,MACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,2CAA2C,IAAI;AAAA,QAAI,QAAQ;AAAA,MACnE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,uBAAuB,CACzB,MACA,+BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,2CAA2C,IAAI;AAAA,QAAI,QAAQ;AAAA,QACjE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,6BAA6B,CAC/B,MACA,+BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,2CAA2C,IAAI;AAAA,QAAW,QAAQ;AAAA,QACxE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wBAAwB,CAC1B,qCACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAkD,QAAQ;AAAA,QAChE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,6BAA6B,CAC/B,MACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,kDAAkD,IAAI;AAAA,QAAI,QAAQ;AAAA,MAC1E;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,gCAAgC,CAClC,MACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,kDAAkD,IAAI;AAAA,QAAI,QAAQ;AAAA,MAC1E;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wBAAwB,CAC1B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAmD,QAAQ;AAAA,QAC/D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,4BAA4B,CAC9B,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,mDAAmD,EAAE;AAAA,QAAI,QAAQ;AAAA,MACzE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,8BAA8B,CAChC,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA0D,QAAQ;AAAA,QACtE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,6BAA6B,CAC/B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAyD,QAAQ;AAAA,QACrE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,yBAAyB,CAC3B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAqD,QAAQ;AAAA,QACjE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,gBAAgB,CAErB,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAsC,QAAQ;AAAA,MACtD;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,cAAc,CAEnB,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAsC,QAAQ;AAAA,MACtD;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,qBAAqB,CAE1B,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA+C,QAAQ;AAAA,MAC/D;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,qBAAqB,CACvB,6BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA+C,QAAQ;AAAA,QAC7D,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wBAAwB,CAC1B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAoD,QAAQ;AAAA,QAChE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAKJ,QAAM,4BAA4B,CAEjC,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAsD,QAAQ;AAAA,MACtE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,4BAA4B,CAEjC,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAsD,QAAQ;AAAA,MACtE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,2BAA2B,CAEhC,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAqD,QAAQ;AAAA,MACrE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAKJ,QAAM,0BAA0B,CAE/B,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAqD,QAAQ;AAAA,MACrE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wBAAwB,CAC1B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAkD,QAAQ;AAAA,QAC9D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,4BAA4B,CAC9B,IACA,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,kDAAkD,EAAE;AAAA,QAAI,QAAQ;AAAA,QACpE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,+BAA+B,CACjC,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,kDAAkD,EAAE;AAAA,QAAI,QAAQ;AAAA,MACxE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,8BAA8B,CAEnC,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAyD,QAAQ;AAAA,MACzE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,+BAA+B,CACjC,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAyD,QAAQ;AAAA,QACrE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,sBAAsB,CACxB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAiD,QAAQ;AAAA,QAC7D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,kBAAkB,CACpB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA4C,QAAQ;AAAA,QACxD;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,sBAAsB,CACxB,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,4CAA4C,EAAE;AAAA,QAAI,QAAQ;AAAA,MAClE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,8BAA8B,CAChC,IACA,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,4CAA4C,EAAE;AAAA,QAAI,QAAQ;AAAA,QAC9D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,gBAAgB,CAClB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA0C,QAAQ;AAAA,QACtD;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,aAAa,CACf,0BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAqC,QAAQ;AAAA,QACnD,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,kBAAkB,CACpB,MACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,qCAAqC,IAAI;AAAA,QAAI,QAAQ;AAAA,MAC7D;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,qBAAqB,CACvB,MACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,qCAAqC,IAAI;AAAA,QAAI,QAAQ;AAAA,MAC7D;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,kBAAkB,CACpB,MACA,0BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,qCAAqC,IAAI;AAAA,QAAI,QAAQ;AAAA,QAC3D,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wBAAwB,CAC1B,MACA,0BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,qCAAqC,IAAI;AAAA,QAAW,QAAQ;AAAA,QAClE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,mBAAmB,CACrB,gCACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA4C,QAAQ;AAAA,QAC1D,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wBAAwB,CAC1B,MACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,4CAA4C,IAAI;AAAA,QAAI,QAAQ;AAAA,MACpE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,2BAA2B,CAC7B,MACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,4CAA4C,IAAI;AAAA,QAAI,QAAQ;AAAA,MACpE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,yBAAyB,CAC3B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAoD,QAAQ;AAAA,QAChE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wBAAwB,CAC1B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAmD,QAAQ;AAAA,QAC/D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,oBAAoB,CACtB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA+C,QAAQ;AAAA,QAC3D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,cAAc,CAChB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAuC,QAAQ;AAAA,QACnD;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,iCAAiC,CACnC,cACA,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,uCAAuC,YAAY;AAAA,QAAU,QAAQ;AAAA,QACzE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,2BAA2B,CAEhC,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAqD,QAAQ;AAAA,MACrE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,6BAA6B,CAC/B,2BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAuD,QAAQ;AAAA,QACrE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,kCAAkC,CACpC,gCACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA6D,QAAQ;AAAA,QAC3E,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,mCAAmC,CACrC,sCACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA8D,QAAQ;AAAA,QAC5E,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,aAAa,CACf,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAsC,QAAQ;AAAA,QAClD;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,yBAAyB,CAE9B,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAmD,QAAQ;AAAA,MACnE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,uBAAuB,CAE5B,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAiD,QAAQ;AAAA,MACjE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,kBAAkB,CAEvB,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA4C,QAAQ;AAAA,MAC5D;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,2BAA2B,CAEhC,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAqD,QAAQ;AAAA,MACrE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wBAAwB,CAE7B,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAmD,QAAQ;AAAA,MACnE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,oBAAoB,CACtB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA+C,QAAQ;AAAA,QAC3D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,6BAA6B,CAC/B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAyD,QAAQ;AAAA,QACrE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,4BAA4B,CAC9B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAwD,QAAQ;AAAA,QACpE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wBAAwB,CAC1B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAoD,QAAQ;AAAA,QAChE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,oBAAoB,CACtB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA8C,QAAQ;AAAA,QAC1D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,iBAAiB,CACnB,8BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAyC,QAAQ;AAAA,QACvD,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,sBAAsB,CACxB,MACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,yCAAyC,IAAI;AAAA,QAAI,QAAQ;AAAA,MACjE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,yBAAyB,CAC3B,MACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,yCAAyC,IAAI;AAAA,QAAI,QAAQ;AAAA,MACjE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,sBAAsB,CACxB,MACA,8BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,yCAAyC,IAAI;AAAA,QAAI,QAAQ;AAAA,QAC/D,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,4BAA4B,CAC9B,MACA,8BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,yCAAyC,IAAI;AAAA,QAAW,QAAQ;AAAA,QACtE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,uBAAuB,CACzB,oCACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAgD,QAAQ;AAAA,QAC9D,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,4BAA4B,CAC9B,MACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,gDAAgD,IAAI;AAAA,QAAI,QAAQ;AAAA,MACxE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,+BAA+B,CACjC,MACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,gDAAgD,IAAI;AAAA,QAAI,QAAQ;AAAA,MACxE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,6BAA6B,CAC/B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAwD,QAAQ;AAAA,QACpE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,4BAA4B,CAC9B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAuD,QAAQ;AAAA,QACnE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wBAAwB,CAC1B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAmD,QAAQ;AAAA,QAC/D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,SAAS,CACX,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAkC,QAAQ;AAAA,QAC9C;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,eAAe,CACjB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAwC,QAAQ;AAAA,QACpD;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,oBAAoB,CAEzB,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA8C,QAAQ;AAAA,MAC9D;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,qBAAqB,CACvB,uBACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA8C,QAAQ;AAAA,QAC5D,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,kBAAkB,CACpB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA4C,QAAQ;AAAA,QACxD;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wBAAwB,CAC1B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAmD,QAAQ;AAAA,QAC/D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,eAAe,CACjB,4BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAuC,QAAQ;AAAA,QACrD,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,kBAAkB,CACpB,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,uCAAuC,EAAE;AAAA,QAAI,QAAQ;AAAA,MAC7D;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,qBAAqB,CACvB,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,uCAAuC,EAAE;AAAA,QAAI,QAAQ;AAAA,MAC7D;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,kBAAkB,CACpB,IACA,4BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,uCAAuC,EAAE;AAAA,QAAI,QAAQ;AAAA,QAC3D,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,2BAA2B,CAEhC,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAqD,QAAQ;AAAA,MACrE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,2BAA2B,CAC7B,2BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAqD,QAAQ;AAAA,QACnE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,2BAA2B,CAEhC,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAsD,QAAQ;AAAA,MACtE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,2BAA2B,CAC7B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAsD,QAAQ;AAAA,QAClE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,0BAA0B,CAC5B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAqD,QAAQ;AAAA,QACjE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,sBAAsB,CACxB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAiD,QAAQ;AAAA,QAC7D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,oBAAoB,CACtBA,wBACH,YAA+D;AAAC,UAAM,WAAW,IAAI,SAAS;AAC/F,aAAS,OAAO,MAAMA,uBAAsB,EAAE;AAC9C,aAAS,OAAO,QAAQA,uBAAsB,IAAI;AAE5C,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA6C,QAAQ;AAAA,QAC3D,SAAS,EAAC,gBAAgB,sBAAuB;AAAA,QAChD,MAAM;AAAA,MACT;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,uBAAuB,CACzB,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,6CAA6C,EAAE;AAAA,QAAI,QAAQ;AAAA,MACnE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,0BAA0B,CAC5B,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,6CAA6C,EAAE;AAAA,QAAI,QAAQ;AAAA,MACnE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,gCAAgC,CAErC,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA2D,QAAQ;AAAA,MAC3E;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,uBAAuB,CAE5B,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAgD,QAAQ;AAAA,MAChE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,qBAAqB,CAE1B,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA+C,QAAQ;AAAA,MAC/D;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,eAAe,CACjB,4BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAwC,QAAQ;AAAA,QACtD,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,cAAc,CAChB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAwC,QAAQ;AAAA,QACpD;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,cAAc,CAChB,4BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAwC,QAAQ;AAAA,QACtD,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,kBAAkB,CACpB,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,wCAAwC,EAAE;AAAA,QAAI,QAAQ;AAAA,MAC9D;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,qBAAqB,CACvB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAgD,QAAQ;AAAA,QAC5D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,mBAAmB,CACrB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA8C,QAAQ;AAAA,QAC1D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,kBAAkB,CACpB,8BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAyC,QAAQ;AAAA,QACvD,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,gBAAgB,CAClB,6BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAyC,QAAQ;AAAA,QACvD,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,eAAe,CACjB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAyC,QAAQ;AAAA,QACrD;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,mBAAmB,CACrB,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,yCAAyC,EAAE;AAAA,QAAI,QAAQ;AAAA,MAC/D;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,sBAAsB,CACxB,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,yCAAyC,EAAE;AAAA,QAAI,QAAQ;AAAA,MAC/D;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,mBAAmB,CACrB,IACA,6BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,yCAAyC,EAAE;AAAA,QAAI,QAAQ;AAAA,QAC7D,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,2BAA2B,CAC7B,IACA,oBACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,yCAAyC,EAAE;AAAA,QAAU,QAAQ;AAAA,QACnE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,yBAAyB,CAC3B,IACA,oBACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,yCAAyC,EAAE;AAAA,QAAU,QAAQ;AAAA,QACnE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,gBAAgB,CAClB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA0C,QAAQ;AAAA,QACtD;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,cAAc,CAChB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAwC,QAAQ;AAAA,QACpD;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,WAAW,CACb,wBACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAmC,QAAQ;AAAA,QACjD,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,aAAa,CACf,yBACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAmC,QAAQ;AAAA,QACjD,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,UAAU,CACZ,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAmC,QAAQ;AAAA,QAC/C;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,cAAc,CAChB,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,mCAAmC,EAAE;AAAA,QAAI,QAAQ;AAAA,MACzD;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,iBAAiB,CACnB,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,mCAAmC,EAAE;AAAA,QAAI,QAAQ;AAAA,MACzD;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,cAAc,CAChB,IACA,wBACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,mCAAmC,EAAE;AAAA,QAAI,QAAQ;AAAA,QACvD,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,iBAAiB,CACnB,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,mCAAmC,EAAE;AAAA,QAAQ,QAAQ;AAAA,MAC7D;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,kCAAkC,CACpC,IACA,cACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,mCAAmC,EAAE,QAAQ,YAAY;AAAA,QAAI,QAAQ;AAAA,MAC7E;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,iCAAiC,CACnC,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,mCAAmC,EAAE;AAAA,QAA0B,QAAQ;AAAA,MAC/E;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,6BAA6B,CAC/B,IACA,gCACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,mCAAmC,EAAE;AAAA,QAAoB,QAAQ;AAAA,QACvE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,gCAAgC,CAClC,IACA,yCACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,mCAAmC,EAAE;AAAA,QAAuB,QAAQ;AAAA,QAC1E,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,+BAA+B,CACjC,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,mCAAmC,EAAE;AAAA,QAAuB,QAAQ;AAAA,MAC5E;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,4CAA4C,CAC9C,IACA,UACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,mCAAmC,EAAE,uBAAuB,QAAQ;AAAA,QAAI,QAAQ;AAAA,MACxF;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,4BAA4B,CAC9B,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,mCAAmC,EAAE;AAAA,QAAmB,QAAQ;AAAA,MACxE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,uBAAuB,CACzB,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,0CAA0C,EAAE;AAAA,QAAI,QAAQ;AAAA,MAChE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,qBAAqB,CACvB,IACA,uBACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,0CAA0C,EAAE;AAAA,QAAI,QAAQ;AAAA,QAC9D,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,uBAAuB,CAE5B,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAiD,QAAQ;AAAA,MACjE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,iBAAiB,CAEtB,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA2C,QAAQ;AAAA,MAC3D;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,oBAAoB,CAEzB,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA+C,QAAQ;AAAA,MAC/D;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,qCAAqC,CACvC,cACA,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,+CAA+C,YAAY;AAAA,QAAI,QAAQ;AAAA,QAC3E;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,mCAAmC,CACrC,cACA,6BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,+CAA+C,YAAY;AAAA,QAAI,QAAQ;AAAA,QAC7E,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,kCAAkC,CACpC,cACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,+CAA+C,YAAY;AAAA,QAAI,QAAQ;AAAA,MAC/E;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wBAAwB,CAC1B,uBACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAkD,QAAQ;AAAA,QAChE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,gCAAgC,CAClC,uCACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA2D,QAAQ;AAAA,QACzE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,8BAA8B,CAEnC,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAyD,QAAQ;AAAA,MACzE;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,+BAA+B,CAEpC,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA2D,QAAQ;AAAA,MAC3E;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,4BAA4B,CAC9B,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAuD,QAAQ;AAAA,QACnE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,oCAAoC,CACtC,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAgE,QAAQ;AAAA,QAC5E;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,iCAAiC,CACnC,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA6D,QAAQ;AAAA,QACzE;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,kBAAkB,CACpB,yBACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA2C,QAAQ;AAAA,QACzD,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,iBAAiB,CACnB,wBACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA0C,QAAQ;AAAA,QACxD,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,iBAAiB,CACnB,wBACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA0C,QAAQ;AAAA,QACxD,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,+BAA+B,CACjC,uCACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA0D,QAAQ;AAAA,QACxE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,uBAAuB,CACzB,8BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAiD,QAAQ;AAAA,QAC/D,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,uBAAuB,CACzB,8BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAiD,QAAQ;AAAA,QAC/D,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,wBAAwB,CAC1B,oCACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAmD,QAAQ;AAAA,QACjE,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,iBAAiB,CACnB,yBACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA0C,QAAQ;AAAA,QACxD,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,iBAAiB,CACnB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA2C,QAAQ;AAAA,QACvD;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,aAAa,CACf,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAsC,QAAQ;AAAA,QAClD;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,cAAc,CAChB,2BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAAsC,QAAQ;AAAA,QACpD,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,iBAAiB,CACnB,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,sCAAsC,EAAE;AAAA,QAAI,QAAQ;AAAA,MAC5D;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,oBAAoB,CACtB,IACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,sCAAsC,EAAE;AAAA,QAAI,QAAQ;AAAA,MAC5D;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,iBAAiB,CACnB,IACA,2BACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,sCAAsC,EAAE;AAAA,QAAI,QAAQ;AAAA,QAC1D,SAAS,EAAC,gBAAgB,mBAAoB;AAAA,QAC9C,MAAM;AAAA,MACR;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,qBAAqB,CACvB,IACA,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK,sCAAsC,EAAE;AAAA,QAAS,QAAQ;AAAA,QAC7D;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,mBAAmB,CACrB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA6C,QAAQ;AAAA,QACzD;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,QAAM,iBAAiB,CACnB,QACH,YAA+D;AAC1D,WAAO;AAAA,MACP;AAAA,QAAC,KAAK;AAAA,QAA2C,QAAQ;AAAA,QACvD;AAAA,MACJ;AAAA,MACE;AAAA,IAAO;AAAA,EACT;AAEJ,SAAO,EAAC,YAAW,cAAa,iBAAgB,oBAAmB,iBAAgB,sBAAqB,uBAAsB,qBAAoB,2BAA0B,0BAAyB,oBAAmB,uBAAsB,0BAAyB,uBAAsB,mBAAkB,iBAAgB,uBAAsB,0BAAyB,yBAAwB,qBAAoB,eAAc,gBAAe,mBAAkB,sBAAqB,mBAAkB,yBAAwB,uBAAsB,sBAAqB,mBAAkB,4BAA2B,2BAA0B,uBAAsB,uBAAsB,0BAAyB,6BAA4B,0BAAyB,8BAA6B,6BAA4B,gCAA+B,mCAAkC,gCAA+B,mCAAkC,0BAAyB,mCAAkC,kCAAiC,8BAA6B,kBAAiB,qBAAoB,wBAAuB,qBAAoB,oCAAmC,8BAA6B,0CAAyC,0BAAyB,2BAA0B,2BAA0B,yBAAwB,8BAA6B,uCAAsC,8BAA6B,wBAAuB,2BAA0B,8BAA6B,2BAA0B,wBAAuB,qBAAoB,2BAA0B,8BAA6B,6BAA4B,yBAAwB,oBAAmB,wBAAuB,sCAAqC,iCAAgC,2BAA0B,cAAa,iBAAgB,oBAAmB,iBAAgB,yBAAwB,sBAAqB,wBAAuB,wBAAuB,qBAAoB,iCAAgC,8BAA6B,8BAA6B,8BAA6B,gCAA+B,6BAA4B,6BAA4B,wBAAuB,uCAAsC,0BAAyB,6BAA4B,sCAAqC,0BAAyB,yBAAwB,kDAAiD,0BAAyB,0BAAyB,iBAAgB,iBAAgB,sBAAqB,iBAAgB,uBAAsB,0BAAyB,8BAA6B,yCAAwC,kCAAiC,+BAA8B,2BAA0B,0BAAyB,yBAAwB,qBAAoB,sBAAqB,qBAAoB,qBAAoB,2BAA0B,iCAAgC,8BAA6B,SAAQ,sBAAqB,kBAAiB,YAAW,uBAAsB,+BAA8B,oBAAmB,kBAAiB,6BAA4B,iBAAgB,wBAAuB,aAAY,cAAa,sBAAqB,yBAAwB,sBAAqB,mBAAkB,wBAAuB,iBAAgB,6BAA4B,yBAAwB,0BAAyB,+BAA8B,kCAAiC,8BAA6B,qBAAoB,4BAA2B,2BAA0B,kBAAiB,yBAAwB,yBAAwB,wBAAuB,eAAc,kBAAiB,qBAAoB,kBAAiB,iCAAgC,uCAAsC,uBAAsB,wBAAuB,wBAAuB,sBAAqB,2BAA0B,oCAAmC,2BAA0B,qBAAoB,wBAAuB,2BAA0B,wBAAuB,qBAAoB,2BAA0B,0BAAyB,sBAAqB,oBAAmB,cAAa,oBAAmB,WAAU,cAAa,iBAAgB,cAAa,sBAAqB,kBAAiB,8BAA6B,0BAAyB,mCAAkC,sBAAqB,uBAAsB,uBAAsB,cAAa,cAAa,mBAAkB,uBAAsB,2BAA0B,sCAAqC,+BAA8B,4BAA2B,wBAAuB,uBAAsB,sBAAqB,kBAAiB,oBAAmB,gBAAe,iBAAgB,oBAAmB,uBAAsB,oBAAmB,wBAAuB,mBAAkB,yBAAwB,gBAAe,mBAAkB,sBAAqB,mBAAkB,wCAAuC,wBAAuB,qCAAoC,4BAA2B,uBAAsB,iBAAgB,eAAc,qBAAoB,YAAW,eAAc,kBAAiB,eAAc,uBAAsB,wBAAuB,oBAAmB,wBAAuB,2BAA0B,wBAAuB,gBAAe,gBAAe,+BAA8B,yBAAwB,mBAAkB,oBAAmB,uBAAsB,0BAAyB,uBAAsB,+BAA8B,2BAA0B,oBAAmB,iBAAgB,sBAAqB,yBAAwB,sBAAqB,4BAA2B,uBAAsB,4BAA2B,+BAA8B,uBAAsB,2BAA0B,6BAA4B,4BAA2B,wBAAuB,eAAc,aAAY,oBAAmB,oBAAmB,uBAAsB,2BAA0B,2BAA0B,0BAAyB,yBAAwB,uBAAsB,2BAA0B,8BAA6B,6BAA4B,8BAA6B,qBAAoB,iBAAgB,qBAAoB,6BAA4B,eAAc,YAAW,iBAAgB,oBAAmB,iBAAgB,uBAAsB,kBAAiB,uBAAsB,0BAAyB,wBAAuB,uBAAsB,mBAAkB,aAAY,gCAA+B,0BAAyB,4BAA2B,iCAAgC,kCAAiC,YAAW,wBAAuB,sBAAqB,iBAAgB,0BAAyB,uBAAsB,mBAAkB,4BAA2B,2BAA0B,uBAAsB,mBAAkB,gBAAe,qBAAoB,wBAAuB,qBAAoB,2BAA0B,sBAAqB,2BAA0B,8BAA6B,4BAA2B,2BAA0B,uBAAsB,QAAO,cAAa,mBAAkB,oBAAmB,iBAAgB,uBAAsB,cAAa,iBAAgB,oBAAmB,iBAAgB,0BAAyB,0BAAyB,0BAAyB,0BAAyB,yBAAwB,qBAAoB,mBAAkB,sBAAqB,yBAAwB,+BAA8B,sBAAqB,oBAAmB,cAAa,aAAY,aAAY,iBAAgB,oBAAmB,kBAAiB,iBAAgB,eAAc,cAAa,kBAAiB,qBAAoB,kBAAiB,0BAAyB,wBAAuB,eAAc,aAAY,UAAS,YAAW,SAAQ,aAAY,gBAAe,aAAY,gBAAe,iCAAgC,gCAA+B,4BAA2B,+BAA8B,8BAA6B,2CAA0C,2BAA0B,sBAAqB,oBAAmB,sBAAqB,gBAAe,mBAAkB,oCAAmC,kCAAiC,iCAAgC,uBAAsB,+BAA8B,6BAA4B,8BAA6B,2BAA0B,mCAAkC,gCAA+B,iBAAgB,gBAAe,gBAAe,8BAA6B,sBAAqB,sBAAqB,uBAAsB,gBAAe,gBAAe,YAAW,aAAY,gBAAe,mBAAkB,gBAAe,oBAAmB,kBAAiB,eAAc;AAAC;;;AC56IztR,IAAMC,2BAAN,MAA8B;AAAA,EACnC,OAAe,WACb;AAAA,EAEM,cAAc;AAAA,EAAC;AAAA,EAEvB,OAAc,YAAY;AACxB,QAAI,KAAK,aAAa,MAAM;AAC1B,WAAK,WAAW,wBAAwB;AAAA,IAC1C;AACA,WAAO,KAAK;AAAA,EACd;AACF;;;ACVO,IAAM,oBACX,CACE,MACA,aACA,QACA,YAEF,OAAO;AAAA,EACL;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;;;ACTF;AAAA,EACE,KAAK;AAAA,OACA;AAEP,IAAM,WAAN,MAAe;AAAA,EACb,YACS,MACA,MACA,MACP;AAHO;AACA;AACA;AAAA,EACN;AACL;AAGmD,IAAM,6BAA6B;AAE/E,IAAM,wBAAwB,IAAI,OAAO;AAAA,EAC9C,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,0BAA0B;AACzD,CAAC;AAEM,IAAM,qBAAqB,IAAI,OAAO;AAAA,EAC3C,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC1B,eAAe,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EACnC,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,mBAAmB,IAAI,OAAO;AAAA,EACzC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,eAAe,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EACjC,iBAAiB,IAAI,OAAO;AAAA,EAC5B,UAAU,IAAI,MAAM,IAAI,OAAO;AAAA,IAC/B,SAAS,IAAI,OAAO;AAAA,IACpB,SAAS,IAAI,IAAI,EAAE,QAAQ;AAAA,EAC7B,CAAC,CAAC;AAAA,EACA,MAAM,IAAI,OAAO,EAAE,KAAK,EAAE,QAAQ;AAAA,EAClC,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AACX,CAAC;AAGM,IAAM,wBAAwB,IAAI,OAAO;AAAA,EAC9C,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,0BAA0B,IAAI,OAAO;AAAA,EAChD,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,eAAe,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EACjC,iBAAiB,IAAI,OAAO;AAAA,EAC5B,UAAU,IAAI,MAAM,IAAI,OAAO;AAAA,IAC/B,SAAS,IAAI,OAAO;AAAA,IACpB,SAAS,IAAI,IAAI,EAAE,QAAQ;AAAA,EAC7B,CAAC,CAAC;AAAA,EACA,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,eAAe,IAAI,QAAQ;AAAA,EAC3B,uBAAuB,IAAI,QAAQ;AACrC,CAAC;AAGM,IAAM,2BAA2B,IAAI,OAAO;AAAA,EACjD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,wBAAwB,IAAI,OAAO;AAAA,EAC9C,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,sBAAsB,IAAI,OAAO;AAAA,EAC5C,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,eAAe,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EACjC,iBAAiB,IAAI,OAAO;AAAA,EAC5B,UAAU,IAAI,MAAM,IAAI,OAAO;AAAA,IAC/B,SAAS,IAAI,OAAO;AAAA,IACpB,SAAS,IAAI,IAAI,EAAE,QAAQ;AAAA,EAC7B,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,2BAA2B,IAAI,OAAO;AAAA,EACjD,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AACX,CAAC;AAGM,IAAM,8BAA8B,IAAI,OAAO;AAAA,EACpD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,gCAAgC,IAAI,QAAQ;AAGlD,IAAM,4BAA4B,IAAI,OAAO;AAAA,EAClD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,0BAA0B,IAAI,OAAO;AAAA,EAChD,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AACX,CAAC;AAGM,IAAM,kCAAkC,IAAI,OAAO;AAAA,EACxD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,wCAAwC,IAAI,OAAO;AAAA,EAC9D,eAAe,IAAI,OAAO;AAAA,IAC1B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,IAC9B,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,IAC9B,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAChC,CAAC;AAAA,EACC,cAAc,IAAI,MAAM,IAAI,OAAO;AAAA,IACnC,QAAQ,IAAI,OAAO;AAAA,IACnB,SAAS,IAAI,OAAO;AAAA,EACtB,CAAC,CAAC;AACF,CAAC;AACM,IAAM,oCAAoC,IAAI,MAAM,qCAAqC;AAGzF,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,gBAAgB,IAAI,KAAK,CAAC,QAAQ,SAAS,mBAAmB,CAAC;AAAA,EAC/D,sBAAsB,IAAI,OAAO,EAAE,KAAK;AAAA,EACxC,mBAAmB,IAAI,OAAO,EAAE,KAAK;AACvC,CAAC;AAGM,IAAM,yBAAyB,IAAI,OAAO;AAAA,EAC/C,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,MAAM,IAAI,OAAO,EAAE,KAAK,EAAE,QAAQ;AAAA,EAClC,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AACX,CAAC;AAGM,IAAM,8BAA8B,IAAI,OAAO;AAAA,EACpD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,8BAA8B,IAAI,OAAO;AAAA,EACpD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,4BAA4B,IAAI,OAAO;AAAA,EAClD,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAC5B,CAAC;AAGyD,IAAM,oCAAoC;AAE7F,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,iCAAiC;AAAA,EAC9D,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,iBAAiB,IAAI,OAAO,EAAE,SAAS;AAAA,EACvC,eAAe,IAAI,OAAO,EAAE,SAAS;AACvC,CAAC;AAEM,IAAM,4BAA4B,IAAI,OAAO;AAAA,EAClD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO;AAAA,IACnB,iBAAiB,IAAI,OAAO,EAAE,QAAQ;AAAA,IACtC,eAAe,IAAI,OAAO;AAAA,IAC1B,eAAe,IAAI,QAAQ;AAAA,EAC7B,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,MAAM,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC,EAAE,SAAS;AAChD,CAAC;AAEM,IAAM,8BAA8B,IAAI,OAAO;AAAA,EACpD,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,QAAQ,IAAI,OAAO;AAAA,EACnB,iBAAiB,IAAI,OAAO,EAAE,QAAQ;AAAA,EACtC,eAAe,IAAI,OAAO;AAAA,EAC1B,eAAe,IAAI,QAAQ;AAC7B,CAAC;AACM,IAAM,0BAA0B,IAAI,MAAM,2BAA2B;AAGd,IAAM,wCAAwC;AAErG,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,SAAS,IAAI,OAAO,EAAE,SAAS;AAAA,EAC/B,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,qCAAqC;AACpE,CAAC;AAEM,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO;AAAA,IACnB,iBAAiB,IAAI,OAAO,EAAE,QAAQ;AAAA,IACtC,eAAe,IAAI,OAAO;AAAA,IAC1B,eAAe,IAAI,QAAQ;AAAA,EAC7B,CAAC,CAAC;AAAA,EACA,SAAS,IAAI,OAAO;AACtB,CAAC;AAGM,IAAM,sCAAsC,IAAI,OAAO;AAAA,EAC5D,gBAAgB,IAAI,OAAO,EAAE,KAAK,EAAE,SAAS;AAC/C,CAAC;AAEM,IAAM,uCAAuC,IAAI,OAAO;AAAA,EAC7D,eAAe,IAAI,QAAQ;AAAA,EAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,QAAQ,IAAI,OAAO;AAAA,EACnB,YAAY,IAAI,QAAQ;AAAA,EACxB,iBAAiB,IAAI,OAAO,EAAE,QAAQ;AAAA,EACtC,eAAe,IAAI,QAAQ;AAC7B,CAAC;AACM,IAAM,mCAAmC,IAAI,MAAM,oCAAoC;AAG9B,IAAM,0CAA0C;AAEzG,IAAM,qCAAqC,IAAI,OAAO;AAAA,EAC3D,YAAY,IAAI,OAAO,EAAE,KAAK,EAAE,SAAS;AAAA,EACzC,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,uCAAuC;AAAA,EACpE,eAAe,IAAI,QAAQ,EAAE,SAAS;AACxC,CAAC;AAEM,IAAM,kCAAkC,IAAI,OAAO;AAAA,EACxD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,eAAe,IAAI,QAAQ;AAAA,IAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,QAAQ,IAAI,OAAO;AAAA,IACnB,YAAY,IAAI,QAAQ;AAAA,IACxB,iBAAiB,IAAI,OAAO,EAAE,QAAQ;AAAA,IACtC,eAAe,IAAI,QAAQ;AAAA,EAC7B,CAAC,CAAC;AACF,CAAC;AAG2D,IAAM,sCAAsC;AAEjG,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,mCAAmC;AAAA,EAChE,eAAe,IAAI,QAAQ,EAAE,SAAS;AACxC,CAAC;AAEM,IAAM,8BAA8B,IAAI,OAAO;AAAA,EACpD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,eAAe,IAAI,QAAQ;AAAA,IAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,QAAQ,IAAI,OAAO;AAAA,IACnB,YAAY,IAAI,QAAQ;AAAA,IACxB,iBAAiB,IAAI,OAAO,EAAE,QAAQ;AAAA,IACtC,eAAe,IAAI,QAAQ;AAAA,EAC7B,CAAC,CAAC;AACF,CAAC;AAGqD,IAAM,gCAAgC;AAErF,IAAM,2BAA2B,IAAI,OAAO;AAAA,EACjD,UAAU,IAAI,OAAO,EAAE,SAAS;AAAA,EAChC,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,6BAA6B;AAC5D,CAAC;AAEM,IAAM,wBAAwB,IAAI,OAAO;AAAA,EAC9C,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC7B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,sBAAsB,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EAC9C,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,qBAAqB,IAAI,OAAO;AAAA,EAC3C,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,gBAAgB,IAAI,MAAM,IAAI,OAAO;AAAA,IACrC,WAAW,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC7B,eAAe,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EACnC,CAAC,CAAC;AAAA,EACA,MAAM,IAAI,OAAO,EAAE,KAAK,EAAE,QAAQ;AAAA,EAClC,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AACX,CAAC;AAGM,IAAM,0BAA0B,IAAI,OAAO;AAAA,EAChD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,4BAA4B,IAAI,OAAO;AAAA,EAClD,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,gBAAgB,IAAI,MAAM,IAAI,OAAO;AAAA,IACrC,WAAW,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC7B,eAAe,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EACnC,CAAC,CAAC;AAAA,EACA,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,0BAA0B,IAAI,OAAO;AAAA,EAChD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,wBAAwB,IAAI,OAAO;AAAA,EAC9C,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,gBAAgB,IAAI,MAAM,IAAI,OAAO;AAAA,IACrC,WAAW,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC7B,eAAe,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EACnC,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAIM,IAAM,qCAAqC,IAAI,OAAO;AAAA,EAC3D,mBAAmB,IAAI,QAAQ,EAAE,SAAS;AAC5C,CAAC;AAEM,IAAM,kCAAkC,IAAI,WAAW,QAAQ;AAG/D,IAAM,8BAA8B,IAAI,OAAO;AAAA,EACpD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,4BAA4B,IAAI,OAAO;AAAA,EAClD,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AACX,CAAC;AAGM,IAAM,2BAA2B,IAAI,OAAO;AAAA,EACjD,iBAAiB,IAAI,OAAO;AAAA,IAC5B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC;AAAA,EACC,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AACX,CAAC;AAGM,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,MAAM,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC,EAAE,SAAS;AAChD,CAAC;AAEM,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,QAAQ,IAAI,OAAO;AACrB,CAAC;AACM,IAAM,4BAA4B,IAAI,MAAM,6BAA6B;AAGzE,IAAM,wCAAwC,IAAI,OAAO;AAAA,EAC9D,gBAAgB,IAAI,OAAO,EAAE,KAAK,EAAE,SAAS;AAC/C,CAAC;AAEM,IAAM,yCAAyC,IAAI,OAAO;AAAA,EAC/D,eAAe,IAAI,QAAQ;AAAA,EAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,QAAQ,IAAI,OAAO;AACrB,CAAC;AACM,IAAM,qCAAqC,IAAI,MAAM,sCAAsC;AAGhC,IAAM,4CAA4C;AAE7G,IAAM,uCAAuC,IAAI,OAAO;AAAA,EAC7D,YAAY,IAAI,OAAO,EAAE,KAAK,EAAE,SAAS;AAAA,EACzC,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,yCAAyC;AACxE,CAAC;AAEM,IAAM,oCAAoC,IAAI,OAAO;AAAA,EAC1D,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,eAAe,IAAI,QAAQ;AAAA,IAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,QAAQ,IAAI,OAAO;AAAA,EACrB,CAAC,CAAC;AACF,CAAC;AAG6D,IAAM,wCAAwC;AAErG,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,qCAAqC;AACpE,CAAC;AAEM,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,eAAe,IAAI,QAAQ;AAAA,IAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,QAAQ,IAAI,OAAO;AAAA,EACrB,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,4BAA4B,IAAI,OAAO;AAAA,EAClD,UAAU,IAAI,MAAM,IAAI,OAAO;AAAA,IAC/B,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC3B,SAAS,IAAI,IAAI,EAAE,QAAQ;AAAA,EAC7B,CAAC,CAAC;AAAA,EACA,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,IACjC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC5B,CAAC,CAAC;AAAA,EACA,MAAM,IAAI,OAAO,EAAE,KAAK,EAAE,QAAQ;AAAA,EAClC,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,gBAAgB,IAAI,OAAO;AAAA,IAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC;AACD,CAAC;AAGM,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,UAAU,IAAI,MAAM,IAAI,OAAO;AAAA,IAC/B,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC3B,SAAS,IAAI,IAAI,EAAE,QAAQ;AAAA,IAC3B,eAAe,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EACnC,CAAC,CAAC;AAAA,EACA,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,IACjC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC1B,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,IAClD,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,IAClD,SAAS,IAAI,KAAK,CAAC,cAAc,SAAS,aAAa,yBAAyB,CAAC;AAAA,IACjF,eAAe,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,QAAQ;AAAA,IAC7D,wBAAwB,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,QAAQ;AAAA,IACtE,0BAA0B,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,QAAQ;AAAA,EAC1E,CAAC,CAAC;AAAA,EACA,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,gBAAgB,IAAI,OAAO;AAAA,IAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO;AAAA,IACnB,cAAc,IAAI,OAAO;AAAA,MACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,EACX,CAAC;AACD,CAAC;AAGM,IAAM,oCAAoC,IAAI,OAAO;AAAA,EAC1D,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,UAAU,IAAI,MAAM,IAAI,OAAO;AAAA,IAC/B,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC3B,SAAS,IAAI,IAAI,EAAE,QAAQ;AAAA,EAC7B,CAAC,CAAC;AAAA,EACA,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,IACjC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC5B,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,qCAAqC,IAAI,OAAO;AAAA,EAC3D,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AACX,CAAC;AAGM,IAAM,kCAAkC,IAAI,OAAO;AAAA,EACxD,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,MAAM,IAAI,OAAO,EAAE,KAAK,EAAE,QAAQ;AAAA,EAClC,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AACX,CAAC;AAGM,IAAM,uCAAuC,IAAI,OAAO;AAAA,EAC7D,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,yCAAyC,IAAI,OAAO;AAAA,EAC/D,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,0CAA0C,IAAI,OAAO;AAAA,EAChE,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,uCAAuC,IAAI,OAAO;AAAA,EAC7D,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,qCAAqC,IAAI,OAAO;AAAA,EAC3D,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAC5B,CAAC;AAGM,IAAM,wCAAwC,IAAI,OAAO;AAAA,EAC9D,YAAY,IAAI,OAAO;AAAA,IACvB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC;AAAA,EACC,MAAM,IAAI,OAAO,EAAE,KAAK,EAAE,QAAQ;AAAA,EAClC,QAAQ,IAAI,OAAO;AAAA,EACnB,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AACX,CAAC;AAGM,IAAM,sCAAsC,IAAI,OAAO;AAAA,EAC5D,MAAM,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC,EAAE,SAAS;AAChD,CAAC;AAEM,IAAM,uCAAuC,IAAI,OAAO;AAAA,EAC7D,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,QAAQ,IAAI,OAAO;AAAA,EACnB,gBAAgB,IAAI,OAAO;AAAA,IAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO;AAAA,IACnB,cAAc,IAAI,OAAO;AAAA,MACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,EACX,CAAC;AACD,CAAC;AACM,IAAM,mCAAmC,IAAI,MAAM,oCAAoC;AAGvF,IAAM,+CAA+C,IAAI,OAAO;AAAA,EACrE,gBAAgB,IAAI,OAAO,EAAE,KAAK,EAAE,SAAS;AAC/C,CAAC;AAEM,IAAM,gDAAgD,IAAI,OAAO;AAAA,EACtE,eAAe,IAAI,QAAQ;AAAA,EAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,QAAQ,IAAI,OAAO;AAAA,EACnB,YAAY,IAAI,QAAQ;AAAA,EACxB,gBAAgB,IAAI,OAAO;AAAA,IAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO;AAAA,IACnB,cAAc,IAAI,OAAO;AAAA,MACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,EACX,CAAC,EAAE,QAAQ;AACX,CAAC;AACM,IAAM,4CAA4C,IAAI,MAAM,6CAA6C;AAGvC,IAAM,mDAAmD;AAE3H,IAAM,8CAA8C,IAAI,OAAO;AAAA,EACpE,YAAY,IAAI,OAAO,EAAE,KAAK,EAAE,SAAS;AAAA,EACzC,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,gDAAgD;AAAA,EAC7E,eAAe,IAAI,QAAQ,EAAE,SAAS;AACxC,CAAC;AAEM,IAAM,2CAA2C,IAAI,OAAO;AAAA,EACjE,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,eAAe,IAAI,QAAQ;AAAA,IAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,QAAQ,IAAI,OAAO;AAAA,IACnB,YAAY,IAAI,QAAQ;AAAA,IACxB,gBAAgB,IAAI,OAAO;AAAA,MAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MACxB,QAAQ,IAAI,OAAO;AAAA,MACnB,cAAc,IAAI,OAAO;AAAA,QACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MAC1B,CAAC,EAAE,QAAQ;AAAA,IACX,CAAC,EAAE,QAAQ;AAAA,EACX,CAAC,CAAC;AACF,CAAC;AAGoE,IAAM,+CAA+C;AAEnH,IAAM,0CAA0C,IAAI,OAAO;AAAA,EAChE,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,4CAA4C;AAAA,EACzE,eAAe,IAAI,QAAQ,EAAE,SAAS;AACxC,CAAC;AAEM,IAAM,uCAAuC,IAAI,OAAO;AAAA,EAC7D,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,eAAe,IAAI,QAAQ;AAAA,IAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,QAAQ,IAAI,OAAO;AAAA,IACnB,YAAY,IAAI,QAAQ;AAAA,IACxB,gBAAgB,IAAI,OAAO;AAAA,MAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MACxB,QAAQ,IAAI,OAAO;AAAA,MACnB,cAAc,IAAI,OAAO;AAAA,QACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MAC1B,CAAC,EAAE,QAAQ;AAAA,IACX,CAAC,EAAE,QAAQ;AAAA,EACX,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,uBAAuB,IAAI,OAAO;AAAA,EAC7C,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC3B,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,EACpC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,iBAAiB,IAAI,QAAQ;AAAA,EAC7B,mBAAmB,IAAI,QAAQ;AAAA,EAC/B,mBAAmB,IAAI,QAAQ;AAAA,EAC/B,cAAc,IAAI,OAAO;AAAA,IACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,aAAa,IAAI,QAAQ;AAAA,EACzB,cAAc,IAAI,MAAM,IAAI,OAAO;AAAA,IACnC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,aAAa,IAAI,OAAO;AAAA,MACxB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,aAAa,IAAI,OAAO;AAAA,IACxB,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC3B,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC1B,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,IACpC,YAAY,IAAI,OAAO;AAAA,MACvB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,mBAAmB,IAAI,QAAQ;AAAA,IAC/B,mBAAmB,IAAI,QAAQ;AAAA,IAC/B,cAAc,IAAI,OAAO;AAAA,MACzB,aAAa,IAAI,QAAQ;AAAA,MACzB,oBAAoB,IAAI,OAAO,EAAE,QAAQ;AAAA,MACzC,SAAS,IAAI,OAAO,EAAE,QAAQ;AAAA,MAC9B,gBAAgB,IAAI,OAAO,EAAE,QAAQ;AAAA,IACvC,CAAC;AAAA,IACC,cAAc,IAAI,OAAO;AAAA,MACzB,cAAc,IAAI,QAAQ;AAAA,IAC5B,CAAC;AAAA,EACD,CAAC,CAAC;AAAA,EACA,cAAc,IAAI,MAAM,IAAI,OAAO;AAAA,IACnC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC7B,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC1B,aAAa,IAAI,OAAO;AAAA,EAC1B,CAAC,CAAC;AAAA,EACA,MAAM,IAAI,OAAO,EAAE,KAAK,EAAE,QAAQ;AAAA,EAClC,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,oBAAoB,IAAI,MAAM,IAAI,OAAO;AAAA,IACzC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,CAAC;AAAA,EACA,mBAAmB,IAAI,OAAO;AAAA,IAC9B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,WAAW,IAAI,OAAO;AAAA,IACtB,kBAAkB,IAAI,QAAQ;AAAA,IAC9B,gCAAgC,IAAI,OAAO,EAAE,QAAQ;AAAA,IACrD,kCAAkC,IAAI,OAAO,EAAE,QAAQ;AAAA,EACzD,CAAC;AAAA,EACC,wBAAwB,IAAI,MAAM,IAAI,OAAO;AAAA,IAC7C,gBAAgB,IAAI,OAAO;AAAA,MAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,aAAa,IAAI,OAAO;AAAA,EAC1B,CAAC,CAAC;AAAA,EACA,gBAAgB,IAAI,MAAM,IAAI,OAAO;AAAA,IACrC,gBAAgB,IAAI,OAAO;AAAA,MAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,mBAAmB,IAAI,KAAK,CAAC,eAAe,aAAa,CAAC;AAAA,EAC5D,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,4BAA4B,IAAI,OAAO;AAAA,EAClD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,8BAA8B,IAAI,OAAO;AAAA,EACpD,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC3B,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,EACpC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,iBAAiB,IAAI,QAAQ;AAAA,EAC7B,mBAAmB,IAAI,QAAQ;AAAA,EAC/B,mBAAmB,IAAI,QAAQ;AAAA,EAC/B,cAAc,IAAI,OAAO;AAAA,IACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,aAAa,IAAI,QAAQ;AAAA,EACzB,cAAc,IAAI,MAAM,IAAI,OAAO;AAAA,IACnC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,aAAa,IAAI,OAAO;AAAA,MACxB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,aAAa,IAAI,OAAO;AAAA,IACxB,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC3B,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC1B,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,IACpC,YAAY,IAAI,OAAO;AAAA,MACvB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,mBAAmB,IAAI,QAAQ;AAAA,IAC/B,mBAAmB,IAAI,QAAQ;AAAA,IAC/B,cAAc,IAAI,OAAO;AAAA,MACzB,aAAa,IAAI,QAAQ;AAAA,MACzB,oBAAoB,IAAI,OAAO,EAAE,QAAQ;AAAA,MACzC,SAAS,IAAI,OAAO,EAAE,QAAQ;AAAA,MAC9B,gBAAgB,IAAI,OAAO,EAAE,QAAQ;AAAA,IACvC,CAAC;AAAA,IACC,cAAc,IAAI,OAAO;AAAA,MACzB,cAAc,IAAI,QAAQ;AAAA,IAC5B,CAAC;AAAA,EACD,CAAC,CAAC;AAAA,EACA,cAAc,IAAI,MAAM,IAAI,OAAO;AAAA,IACnC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC7B,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC1B,aAAa,IAAI,OAAO;AAAA,EAC1B,CAAC,CAAC;AAAA,EACA,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,oBAAoB,IAAI,MAAM,IAAI,OAAO;AAAA,IACzC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,CAAC;AAAA,EACA,mBAAmB,IAAI,OAAO;AAAA,IAC9B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,WAAW,IAAI,OAAO;AAAA,IACtB,kBAAkB,IAAI,QAAQ;AAAA,IAC9B,gCAAgC,IAAI,OAAO,EAAE,QAAQ;AAAA,IACrD,kCAAkC,IAAI,OAAO,EAAE,QAAQ;AAAA,EACzD,CAAC;AAAA,EACC,wBAAwB,IAAI,MAAM,IAAI,OAAO;AAAA,IAC7C,gBAAgB,IAAI,OAAO;AAAA,MAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,aAAa,IAAI,OAAO;AAAA,EAC1B,CAAC,CAAC;AAAA,EACA,gBAAgB,IAAI,MAAM,IAAI,OAAO;AAAA,IACrC,gBAAgB,IAAI,OAAO;AAAA,MAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,mBAAmB,IAAI,KAAK,CAAC,eAAe,aAAa,CAAC;AAAA,EAC5D,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,4BAA4B,IAAI,OAAO;AAAA,EAClD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,0BAA0B,IAAI,OAAO;AAAA,EAChD,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC3B,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,EACpC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,iBAAiB,IAAI,QAAQ;AAAA,EAC7B,mBAAmB,IAAI,QAAQ;AAAA,EAC/B,mBAAmB,IAAI,QAAQ;AAAA,EAC/B,cAAc,IAAI,OAAO;AAAA,IACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,aAAa,IAAI,QAAQ;AAAA,EACzB,cAAc,IAAI,MAAM,IAAI,OAAO;AAAA,IACnC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,aAAa,IAAI,OAAO;AAAA,MACxB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,aAAa,IAAI,OAAO;AAAA,IACxB,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC3B,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC1B,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,IACpC,YAAY,IAAI,OAAO;AAAA,MACvB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,mBAAmB,IAAI,QAAQ;AAAA,IAC/B,mBAAmB,IAAI,QAAQ;AAAA,IAC/B,cAAc,IAAI,OAAO;AAAA,MACzB,aAAa,IAAI,QAAQ;AAAA,MACzB,oBAAoB,IAAI,OAAO,EAAE,QAAQ;AAAA,MACzC,SAAS,IAAI,OAAO,EAAE,QAAQ;AAAA,MAC9B,gBAAgB,IAAI,OAAO,EAAE,QAAQ;AAAA,IACvC,CAAC;AAAA,IACC,cAAc,IAAI,OAAO;AAAA,MACzB,cAAc,IAAI,QAAQ;AAAA,IAC5B,CAAC;AAAA,EACD,CAAC,CAAC;AAAA,EACA,cAAc,IAAI,MAAM,IAAI,OAAO;AAAA,IACnC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC7B,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC1B,aAAa,IAAI,OAAO;AAAA,EAC1B,CAAC,CAAC;AAAA,EACA,oBAAoB,IAAI,MAAM,IAAI,OAAO;AAAA,IACzC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,CAAC;AAAA,EACA,mBAAmB,IAAI,OAAO;AAAA,IAC9B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,WAAW,IAAI,OAAO;AAAA,IACtB,kBAAkB,IAAI,QAAQ;AAAA,IAC9B,gCAAgC,IAAI,OAAO,EAAE,QAAQ;AAAA,IACrD,kCAAkC,IAAI,OAAO,EAAE,QAAQ;AAAA,EACzD,CAAC;AAAA,EACC,wBAAwB,IAAI,MAAM,IAAI,OAAO;AAAA,IAC7C,gBAAgB,IAAI,OAAO;AAAA,MAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,aAAa,IAAI,OAAO;AAAA,EAC1B,CAAC,CAAC;AAAA,EACA,gBAAgB,IAAI,MAAM,IAAI,OAAO;AAAA,IACrC,gBAAgB,IAAI,OAAO;AAAA,MAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,mBAAmB,IAAI,KAAK,CAAC,eAAe,aAAa,CAAC;AAAA,EAC5D,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,2CAA2C,IAAI,OAAO;AAAA,EACjE,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAE0E,IAAM,qDAAqD;AAE/H,IAAM,gDAAgD,IAAI,OAAO;AAAA,EACtE,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,kDAAkD;AACjF,CAAC;AAEM,IAAM,6CAA6C,IAAI,OAAO;AAAA,EACnE,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO;AAAA,IACnB,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,IACpC,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,EAC/B,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,qCAAqC,IAAI,OAAO;AAAA,EAC3D,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEoE,IAAM,+CAA+C;AAEnH,IAAM,0CAA0C,IAAI,OAAO;AAAA,EAChE,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,4CAA4C;AAC3E,CAAC;AAEM,IAAM,uCAAuC,IAAI,OAAO;AAAA,EAC7D,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO;AAAA,EACrB,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,iDAAiD,IAAI,OAAO;AAAA,EACvE,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,uDAAuD,IAAI,OAAO;AAAA,EAC7E,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,QAAQ,IAAI,OAAO;AAAA,EACnB,QAAQ,IAAI,OAAO;AACrB,CAAC;AACM,IAAM,mDAAmD,IAAI,MAAM,oDAAoD;AAGvH,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AACX,CAAC;AAGM,IAAM,kCAAkC,IAAI,OAAO;AAAA,EACxD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,oCAAoC,IAAI,WAAW,QAAQ;AAGjE,IAAM,kCAAkC,IAAI,OAAO;AAAA,EACxD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,QAAQ,IAAI,OAAO;AAAA,IACnB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC;AACD,CAAC;AAGM,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,8BAA8B,IAAI,OAAO;AAAA,EACpD,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AACX,CAAC;AAGoE,IAAM,+CAA+C;AAEnH,IAAM,0CAA0C,IAAI,OAAO;AAAA,EAChE,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,4CAA4C;AAC3E,CAAC;AAEM,IAAM,uCAAuC,IAAI,OAAO;AAAA,EAC7D,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO;AAAA,IACnB,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,IACpC,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,EAC/B,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,4CAA4C,IAAI,OAAO;AAAA,EAClE,MAAM,IAAI,OAAO,EAAE,KAAK,EAAE,QAAQ;AAAA,EAClC,0BAA0B,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EAChD,uBAAuB,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC;AAAA,EACpD,aAAa,IAAI,QAAQ;AAC3B,CAAC;AAEM,IAAM,oDAAoD,IAAI,OAAO;AAAA,EAC1E,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,QAAQ,IAAI,OAAO;AAAA,EACnB,QAAQ,IAAI,OAAO;AAAA,EACnB,cAAc,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACpC,gBAAgB,IAAI,QAAQ;AAC9B,CAAC;AACM,IAAM,gDAAgD,IAAI,MAAM,iDAAiD;AAGjH,IAAM,uCAAuC,IAAI,OAAO;AAAA,EAC7D,yBAAyB,IAAI,KAAK,CAAC,QAAQ,SAAS,mBAAmB,CAAC;AAAA,EACxE,oBAAoB,IAAI,QAAQ;AAAA,EAChC,eAAe,IAAI,QAAQ;AAAA,EAC3B,sBAAsB,IAAI,MAAM,IAAI,OAAO,CAAC;AAC9C,CAAC;AAGM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,MAAM,IAAI,OAAO,EAAE,KAAK,EAAE,QAAQ;AAAA,EAClC,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AACX,CAAC;AAGM,IAAM,kCAAkC,IAAI,OAAO;AAAA,EACxD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,oCAAoC,IAAI,OAAO;AAAA,EAC1D,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,qCAAqC,IAAI,OAAO;AAAA,EAC3D,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,kCAAkC,IAAI,OAAO;AAAA,EACxD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAC5B,CAAC;AAGM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,QAAQ,IAAI,OAAO;AAAA,IACnB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC;AACD,CAAC;AAGM,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,MAAM,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC,EAAE,SAAS;AAChD,CAAC;AAEM,IAAM,kCAAkC,IAAI,OAAO;AAAA,EACxD,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,QAAQ,IAAI,OAAO;AAAA,EACnB,aAAa,IAAI,QAAQ;AAAA,EACzB,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,EAC7B,eAAe,IAAI,OAAO,EAAE,QAAQ;AACtC,CAAC;AACM,IAAM,8BAA8B,IAAI,MAAM,+BAA+B;AAGlB,IAAM,4CAA4C;AAE7G,IAAM,uCAAuC,IAAI,OAAO;AAAA,EAC7D,SAAS,IAAI,OAAO,EAAE,SAAS;AAAA,EAC/B,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,yCAAyC;AACxE,CAAC;AAEM,IAAM,oCAAoC,IAAI,OAAO;AAAA,EAC1D,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO;AAAA,IACnB,aAAa,IAAI,QAAQ;AAAA,IACzB,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC7B,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,EACtC,CAAC,CAAC;AAAA,EACA,SAAS,IAAI,OAAO;AACtB,CAAC;AAGM,IAAM,0CAA0C,IAAI,OAAO;AAAA,EAChE,gBAAgB,IAAI,OAAO,EAAE,KAAK,EAAE,SAAS;AAC/C,CAAC;AAEM,IAAM,2CAA2C,IAAI,OAAO;AAAA,EACjE,eAAe,IAAI,QAAQ;AAAA,EAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,QAAQ,IAAI,OAAO;AAAA,EACnB,YAAY,IAAI,QAAQ;AAAA,EACxB,aAAa,IAAI,QAAQ;AAAA,EACzB,QAAQ,IAAI,OAAO;AACrB,CAAC;AACM,IAAM,uCAAuC,IAAI,MAAM,wCAAwC;AAGlC,IAAM,8CAA8C;AAEjH,IAAM,yCAAyC,IAAI,OAAO;AAAA,EAC/D,YAAY,IAAI,OAAO,EAAE,KAAK,EAAE,SAAS;AAAA,EACzC,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,2CAA2C;AAAA,EACxE,eAAe,IAAI,QAAQ,EAAE,SAAS;AACxC,CAAC;AAEM,IAAM,sCAAsC,IAAI,OAAO;AAAA,EAC5D,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,eAAe,IAAI,QAAQ;AAAA,IAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,QAAQ,IAAI,OAAO;AAAA,IACnB,YAAY,IAAI,QAAQ;AAAA,IACxB,aAAa,IAAI,QAAQ;AAAA,IACzB,QAAQ,IAAI,OAAO;AAAA,EACrB,CAAC,CAAC;AACF,CAAC;AAG+D,IAAM,0CAA0C;AAEzG,IAAM,qCAAqC,IAAI,OAAO;AAAA,EAC3D,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,uCAAuC;AAAA,EACpE,eAAe,IAAI,QAAQ,EAAE,SAAS;AACxC,CAAC;AAEM,IAAM,kCAAkC,IAAI,OAAO;AAAA,EACxD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,eAAe,IAAI,QAAQ;AAAA,IAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,QAAQ,IAAI,OAAO;AAAA,IACnB,YAAY,IAAI,QAAQ;AAAA,IACxB,aAAa,IAAI,QAAQ;AAAA,IACzB,QAAQ,IAAI,OAAO;AAAA,EACrB,CAAC,CAAC;AACF,CAAC;AAG0D,IAAM,qCAAqC;AAE/F,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,cAAc,IAAI,OAAO,EAAE,KAAK;AAAA,EAChC,WAAW,IAAI,OAAO,EAAE,SAAS;AAAA,EACjC,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,kCAAkC;AACjE,CAAC;AAEM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,YAAY,IAAI,OAAO;AAAA,MACvB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,gBAAgB,IAAI,OAAO;AAAA,MAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,QAAQ,IAAI,OAAO;AAAA,MACnB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,eAAe,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,IACnD,6BAA6B,IAAI,QAAQ;AAAA,IACzC,yBAAyB,IAAI,QAAQ;AAAA,IACrC,kBAAkB,IAAI,QAAQ;AAAA,EAChC,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,UAAU,IAAI,MAAM,IAAI,OAAO;AAAA,IAC/B,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC3B,SAAS,IAAI,IAAI,EAAE,QAAQ;AAAA,IAC3B,eAAe,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EACnC,CAAC,CAAC;AAAA,EACA,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,IACjC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC1B,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,IAClD,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,IAClD,SAAS,IAAI,KAAK,CAAC,cAAc,SAAS,aAAa,yBAAyB,CAAC;AAAA,IACjF,eAAe,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,QAAQ;AAAA,IAC7D,wBAAwB,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,QAAQ;AAAA,IACtE,0BAA0B,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,QAAQ;AAAA,EAC1E,CAAC,CAAC;AAAA,EACA,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,gBAAgB,IAAI,OAAO;AAAA,IAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO;AAAA,IACnB,cAAc,IAAI,OAAO;AAAA,MACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,EACX,CAAC;AAAA,EACC,YAAY,IAAI,OAAO;AAAA,IACvB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AACX,CAAC;AAGM,IAAM,6CAA6C,IAAI,OAAO;AAAA,EACnE,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,kDAAkD,IAAI,OAAO;AAAA,EACxE,kBAAkB,IAAI,QAAQ,EAAE,SAAS;AAC3C,CAAC;AAGM,IAAM,wCAAwC,IAAI,OAAO;AAAA,EAC9D,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,6CAA6C,IAAI,OAAO;AAAA,EACnE,WAAW,IAAI,OAAO,EAAE,SAAS;AACnC,CAAC;AAGM,IAAM,kCAAkC,IAAI,OAAO;AAAA,EACxD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,+CAA+C;AAA+E,IAAM,4CAA4C;AAEtL,IAAM,uCAAuC,IAAI,OAAO;AAAA,EAC7D,cAAc,IAAI,OAAO,EAAE,KAAK,EAAE,SAAS;AAAA,EAC3C,WAAW,IAAI,OAAO,EAAE,QAAQ,4CAA4C;AAAA,EAC5E,gBAAgB,IAAI,OAAO,EAAE,SAAS;AAAA,EACtC,kBAAkB,IAAI,KAAK,CAAC,aAAa,YAAY,CAAC,EAAE,SAAS;AAAA,EACjE,UAAU,IAAI,OAAO,EAAE,SAAS;AAAA,EAChC,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,yCAAyC;AACxE,CAAC;AAEM,IAAM,oCAAoC,IAAI,OAAO;AAAA,EAC1D,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,UAAU,IAAI,MAAM,IAAI,OAAO;AAAA,MAC/B,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,MAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,MAChC,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,MAC3B,SAAS,IAAI,IAAI,EAAE,QAAQ;AAAA,MAC3B,eAAe,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IACnC,CAAC,CAAC;AAAA,IACA,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,MACjC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,MAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,MAChC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,MAC1B,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,MAClD,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,MAClD,SAAS,IAAI,KAAK,CAAC,cAAc,SAAS,aAAa,yBAAyB,CAAC;AAAA,MACjF,eAAe,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,QAAQ;AAAA,MAC7D,wBAAwB,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,QAAQ;AAAA,MACtE,0BAA0B,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,QAAQ;AAAA,IAC1E,CAAC,CAAC;AAAA,IACA,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,aAAa,IAAI,OAAO;AAAA,IACxB,gBAAgB,IAAI,OAAO;AAAA,MAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MACxB,SAAS,IAAI,OAAO;AAAA,MACpB,QAAQ,IAAI,OAAO;AAAA,IACrB,CAAC;AAAA,IACC,aAAa,IAAI,QAAQ;AAAA,IACzB,eAAe,IAAI,QAAQ;AAAA,IAC3B,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,EAClC,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,mBAAmB,IAAI,OAAO;AAAA,EACzC,UAAU,IAAI,MAAM,IAAI,OAAO;AAAA,IAC/B,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC3B,SAAS,IAAI,IAAI,EAAE,QAAQ;AAAA,EAC7B,CAAC,CAAC;AAAA,EACA,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,IACjC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC5B,CAAC,CAAC;AAAA,EACA,MAAM,IAAI,OAAO,EAAE,KAAK,EAAE,QAAQ;AAAA,EAClC,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,gBAAgB,IAAI,OAAO;AAAA,IAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC;AAAA,EACC,YAAY,IAAI,OAAO;AAAA,IACvB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,SAAS;AACZ,CAAC;AAGM,IAAM,wBAAwB,IAAI,OAAO;AAAA,EAC9C,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,0BAA0B,IAAI,OAAO;AAAA,EAChD,UAAU,IAAI,MAAM,IAAI,OAAO;AAAA,IAC/B,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC3B,SAAS,IAAI,IAAI,EAAE,QAAQ;AAAA,IAC3B,eAAe,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EACnC,CAAC,CAAC;AAAA,EACA,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,IACjC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC1B,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,IAClD,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,IAClD,SAAS,IAAI,KAAK,CAAC,cAAc,SAAS,aAAa,yBAAyB,CAAC;AAAA,IACjF,eAAe,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,QAAQ;AAAA,IAC7D,wBAAwB,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,QAAQ;AAAA,IACtE,0BAA0B,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,QAAQ;AAAA,EAC1E,CAAC,CAAC;AAAA,EACA,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,gBAAgB,IAAI,OAAO;AAAA,IAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO;AAAA,IACnB,cAAc,IAAI,OAAO;AAAA,MACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,EACX,CAAC;AAAA,EACC,QAAQ,IAAI,MAAM,IAAI,OAAO;AAAA,IAC7B,WAAW,IAAI,OAAO,EAAE,SAAS;AAAA,IACjC,OAAO,IAAI,OAAO;AAAA,EACpB,CAAC,CAAC;AAAA,EACA,YAAY,IAAI,OAAO;AAAA,IACvB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,aAAa,IAAI,QAAQ;AAC3B,CAAC;AAGM,IAAM,2BAA2B,IAAI,OAAO;AAAA,EACjD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,wBAAwB,IAAI,OAAO;AAAA,EAC9C,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,sBAAsB,IAAI,OAAO;AAAA,EAC5C,UAAU,IAAI,MAAM,IAAI,OAAO;AAAA,IAC/B,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC3B,SAAS,IAAI,IAAI,EAAE,QAAQ;AAAA,EAC7B,CAAC,CAAC;AAAA,EACA,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,IACjC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC5B,CAAC,CAAC;AAAA,EACA,YAAY,IAAI,OAAO;AAAA,IACvB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AACX,CAAC;AAGM,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAE+D,IAAM,0CAA0C;AAEzG,IAAM,qCAAqC,IAAI,OAAO;AAAA,EAC3D,kBAAkB,IAAI,KAAK,CAAC,aAAa,YAAY,CAAC,EAAE,SAAS;AAAA,EACjE,aAAa,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,SAAS;AAAA,EAC5D,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,uCAAuC;AACtE,CAAC;AAEM,IAAM,kCAAkC,IAAI,OAAO;AAAA,EACxD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,QAAQ,IAAI,OAAO;AAAA,MACnB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,aAAa,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,IACjD,WAAW,IAAI,KAAK,CAAC,OAAO,QAAQ,eAAe,QAAQ,UAAU,WAAW,kBAAkB,iBAAiB,wBAAwB,aAAa,oBAAoB,QAAQ,QAAQ,gBAAgB,gBAAgB,QAAQ,UAAU,UAAU,YAAY,mBAAmB,qBAAqB,UAAU,gCAAgC,6BAA6B,CAAC;AAAA,IACpX,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,cAAc,IAAI,OAAO,EAAE,QAAQ;AAAA,EACrC,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,2BAA2B,IAAI,OAAO;AAAA,EACjD,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,oBAAoB,IAAI,QAAQ;AAAA,EAChC,sBAAsB,IAAI,QAAQ;AACpC,CAAC;AAGM,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,kBAAkB,IAAI,OAAO,EAAE,QAAQ;AAAA,EACvC,WAAW,IAAI,MAAM,IAAI,OAAO;AAAA,IAChC,cAAc,IAAI,OAAO;AAAA,IACzB,WAAW,IAAI,OAAO;AAAA,EACxB,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,kBAAkB,IAAI,OAAO,EAAE,QAAQ;AAAA,EACvC,WAAW,IAAI,MAAM,IAAI,OAAO;AAAA,IAChC,cAAc,IAAI,OAAO;AAAA,IACzB,WAAW,IAAI,OAAO;AAAA,EACxB,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,4BAA4B,IAAI,OAAO;AAAA,EAClD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,0BAA0B,IAAI,OAAO;AAAA,EAChD,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AACX,CAAC;AAGM,IAAM,wCAAwC,IAAI,OAAO;AAAA,EAC9D,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,qCAAqC,IAAI,OAAO;AAAA,EAC3D,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,2CAA2C,IAAI,OAAO;AAAA,EACjE,YAAY,IAAI,OAAO;AAAA,EACvB,SAAS,IAAI,OAAO;AAAA,EACpB,cAAc,IAAI,QAAQ;AAC5B,CAAC;AACM,IAAM,uCAAuC,IAAI,MAAM,wCAAwC;AAG/F,IAAM,qCAAqC,IAAI,OAAO;AAAA,EAC3D,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,uBAAuB,IAAI,MAAM,IAAI,OAAO,CAAC;AAC/C,CAAC;AAGM,IAAM,qCAAqC,IAAI,OAAO;AAAA,EAC3D,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,iBAAiB,IAAI,OAAO;AAAA,IAC5B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC;AAAA,EACC,iBAAiB,IAAI,OAAO;AAAA,IAC5B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC;AAAA,EACC,mBAAmB,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACzC,oBAAoB,IAAI,MAAM,IAAI,OAAO,CAAC;AAC5C,CAAC;AAGM,IAAM,uCAAuC,IAAI,OAAO;AAAA,EAC7D,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,oCAAoC,IAAI,OAAO;AAAA,EAC1D,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,sCAAsC,IAAI,OAAO;AAAA,EAC5D,iBAAiB,IAAI,OAAO;AAAA,IAC5B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC;AAAA,EACC,iBAAiB,IAAI,OAAO;AAAA,IAC5B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC;AAAA,EACC,WAAW,IAAI,MAAM,IAAI,OAAO;AAAA,IAChC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,cAAc,IAAI,OAAO;AAAA,MACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MACxB,QAAQ,IAAI,OAAO;AAAA,MACnB,cAAc,IAAI,OAAO;AAAA,QACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MAC1B,CAAC,EAAE,QAAQ;AAAA,IACX,CAAC;AAAA,IACC,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,MACjC,QAAQ,IAAI,OAAO;AAAA,MACnB,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAClC,CAAC,CAAC;AAAA,IACA,QAAQ,IAAI,KAAK,CAAC,WAAW,KAAK,CAAC;AAAA,EACrC,CAAC,CAAC;AAAA,EACA,UAAU,IAAI,MAAM,IAAI,OAAO;AAAA,IAC/B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO;AAAA,EACrB,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,oCAAoC,IAAI,OAAO;AAAA,EAC1D,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,kCAAkC,IAAI,OAAO;AAAA,EACxD,iBAAiB,IAAI,OAAO;AAAA,IAC5B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC;AAAA,EACC,iBAAiB,IAAI,OAAO;AAAA,IAC5B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC;AAAA,EACC,mBAAmB,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACzC,oBAAoB,IAAI,MAAM,IAAI,OAAO,CAAC;AAC5C,CAAC;AAGM,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,oBAAoB,IAAI,MAAM,IAAI,OAAO;AAAA,IACzC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,YAAY,IAAI,OAAO;AAAA,MACvB,eAAe,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,QAAQ;AAAA,MAC7D,iBAAiB,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,QAAQ;AAAA,IACjE,CAAC,EAAE,QAAQ;AAAA,EACX,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,8CAA8C,IAAI,OAAO;AAAA,EACpE,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,4CAA4C,IAAI,OAAO;AAAA,EAClE,iCAAiC,IAAI,QAAQ;AAAA,EAC7C,YAAY,IAAI,MAAM,IAAI,OAAO,CAAC;AACpC,CAAC;AAGM,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,UAAU,IAAI,MAAM,IAAI,OAAO;AAAA,IAC/B,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC3B,SAAS,IAAI,IAAI,EAAE,QAAQ;AAAA,IAC3B,eAAe,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EACnC,CAAC,CAAC;AAAA,EACA,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,IACjC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC1B,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,IAClD,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,IAClD,SAAS,IAAI,KAAK,CAAC,cAAc,SAAS,aAAa,yBAAyB,CAAC;AAAA,IACjF,eAAe,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,QAAQ;AAAA,IAC7D,wBAAwB,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,QAAQ;AAAA,IACtE,0BAA0B,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,QAAQ;AAAA,EAC1E,CAAC,CAAC;AAAA,EACA,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,gBAAgB,IAAI,OAAO;AAAA,IAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO;AAAA,IACnB,cAAc,IAAI,OAAO;AAAA,MACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,EACX,CAAC;AAAA,EACC,QAAQ,IAAI,MAAM,IAAI,OAAO;AAAA,IAC7B,WAAW,IAAI,OAAO,EAAE,SAAS;AAAA,IACjC,OAAO,IAAI,OAAO;AAAA,EACpB,CAAC,CAAC;AAAA,EACA,YAAY,IAAI,OAAO;AAAA,IACvB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,aAAa,IAAI,QAAQ;AAC3B,CAAC;AAGM,IAAM,oCAAoC,IAAI,OAAO;AAAA,EAC1D,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEmE,IAAM,8CAA8C;AAEjH,IAAM,yCAAyC,IAAI,OAAO;AAAA,EAC/D,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,2CAA2C;AAC1E,CAAC;AAEM,IAAM,sCAAsC,IAAI,OAAO;AAAA,EAC5D,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,SAAS,IAAI,KAAK,CAAC,+BAA+B,CAAC;AAAA,IACnD,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC7B,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC7B,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,EAC/B,CAAC,EAAE,GAAG,IAAI,OAAO;AAAA,IACf,SAAS,IAAI,KAAK,CAAC,gCAAgC,CAAC;AAAA,IACpD,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC7B,aAAa,IAAI,QAAQ,EAAE,QAAQ;AAAA,IACnC,gBAAgB,IAAI,OAAO;AAAA,MAC3B,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,MAC7B,SAAS,IAAI,OAAO,EAAE,QAAQ;AAAA,MAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC/B,CAAC;AAAA,EACD,CAAC,CAAC,EAAE,GAAG,IAAI,OAAO;AAAA,IAChB,SAAS,IAAI,KAAK,CAAC,6BAA6B,CAAC;AAAA,IACjD,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC7B,aAAa,IAAI,OAAO;AAAA,MACxB,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,MAC7B,SAAS,IAAI,OAAO,EAAE,QAAQ;AAAA,MAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC/B,CAAC;AAAA,EACD,CAAC,CAAC,CAAC;AACH,CAAC;AAGM,IAAM,6CAA6C,IAAI,OAAO;AAAA,EACnE,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAE4E,IAAM,uDAAuD;AAEnI,IAAM,kDAAkD,IAAI,OAAO;AAAA,EACxE,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,oDAAoD;AACnF,CAAC;AAEM,IAAM,+CAA+C,IAAI,OAAO;AAAA,EACrE,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,YAAY,IAAI,MAAM,IAAI,OAAO,CAAC,EAAE,QAAQ;AAC9C,CAAC;AAMM,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,8BAA8B,IAAI,OAAO;AAAA,EACpD,UAAU,IAAI,MAAM,IAAI,OAAO;AAAA,IAC/B,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC3B,SAAS,IAAI,IAAI,EAAE,QAAQ;AAAA,EAC7B,CAAC,CAAC;AAAA,EACA,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,IACjC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC5B,CAAC,CAAC;AAAA,EACA,YAAY,IAAI,OAAO;AAAA,IACvB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AACX,CAAC;AAGM,IAAM,yDAAyD,IAAI,OAAO;AAAA,EAC/E,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,uDAAuD,IAAI,OAAO;AAAA,EAC7E,UAAU,IAAI,MAAM,IAAI,OAAO;AAAA,IAC/B,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC3B,SAAS,IAAI,IAAI,EAAE,QAAQ;AAAA,EAC7B,CAAC,CAAC;AAAA,EACA,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,IACjC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC5B,CAAC,CAAC;AAAA,EACA,YAAY,IAAI,OAAO;AAAA,IACvB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,YAAY,IAAI,MAAM,IAAI,OAAO,CAAC,EAAE,QAAQ;AAC9C,CAAC;AAGgE,IAAM,2CAA2C;AAE3G,IAAM,sCAAsC,IAAI,OAAO;AAAA,EAC5D,MAAM,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC,EAAE,SAAS;AAAA,EAC9C,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,wCAAwC;AACvE,CAAC;AAEM,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,+BAA+B,IAAI,QAAQ;AAAA,EAC3C,kCAAkC,IAAI,QAAQ;AAAA,EAC9C,oCAAoC,IAAI,QAAQ;AAAA,EAChD,oCAAoC,IAAI,QAAQ;AAAA,EAChD,sBAAsB,IAAI,MAAM,IAAI,OAAO,CAAC;AAC9C,CAAC;AAGM,IAAM,sBAAsB,IAAI,OAAO;AAAA,EAC5C,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,WAAW,IAAI,MAAM,IAAI,OAAO;AAAA,IAChC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,aAAa,IAAI,OAAO;AAAA,EAC1B,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,MAAM,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC,EAAE,SAAS;AAChD,CAAC;AAEM,IAAM,8BAA8B,IAAI,OAAO;AAAA,EACpD,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,IACjC,WAAW,IAAI,OAAO,EAAE,SAAS;AAAA,IACjC,OAAO,IAAI,OAAO;AAAA,EACpB,CAAC,CAAC;AACF,CAAC;AACM,IAAM,0BAA0B,IAAI,MAAM,2BAA2B;AAGrE,IAAM,2BAA2B,IAAI,OAAO;AAAA,EACjD,UAAU,IAAI,MAAM,IAAI,OAAO;AAAA,IAC/B,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC3B,SAAS,IAAI,IAAI,EAAE,QAAQ;AAAA,EAC7B,CAAC,CAAC;AAAA,EACA,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,IACjC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC5B,CAAC,CAAC;AAAA,EACA,MAAM,IAAI,OAAO,EAAE,KAAK,EAAE,QAAQ;AAAA,EAClC,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,gBAAgB,IAAI,OAAO;AAAA,IAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC;AAAA,EACC,YAAY,IAAI,OAAO;AAAA,IACvB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,SAAS;AACZ,CAAC;AAGM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,MAAM,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC,EAAE,SAAS;AAChD,CAAC;AAEM,IAAM,8BAA8B,IAAI,OAAO;AAAA,EACpD,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,aAAa,IAAI,QAAQ;AAAA,EACzB,eAAe,IAAI,QAAQ;AAAA,EAC3B,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,eAAe,IAAI,QAAQ;AAAA,EAC3B,gBAAgB,IAAI,OAAO;AAAA,IAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO;AAAA,IACnB,cAAc,IAAI,OAAO;AAAA,MACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,EACX,CAAC;AAAA,EACC,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,IACjC,QAAQ,IAAI,OAAO;AAAA,IACnB,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,SAAS,IAAI,KAAK,CAAC,cAAc,SAAS,aAAa,yBAAyB,CAAC;AAAA,EACnF,CAAC,CAAC;AACF,CAAC;AACM,IAAM,0BAA0B,IAAI,MAAM,2BAA2B;AAGd,IAAM,wCAAwC;AAErG,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,SAAS,IAAI,OAAO,EAAE,SAAS;AAAA,EAC/B,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,qCAAqC;AAAA,EAClE,YAAY,IAAI,OAAO,EAAE,KAAK,EAAE,SAAS;AAAA,EACzC,wBAAwB,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC,EAAE,SAAS;AAClE,CAAC;AAEM,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,aAAa,IAAI,QAAQ;AAAA,IACzB,eAAe,IAAI,QAAQ;AAAA,IAC3B,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,eAAe,IAAI,QAAQ;AAAA,IAC3B,gBAAgB,IAAI,OAAO;AAAA,MAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MACxB,QAAQ,IAAI,OAAO;AAAA,MACnB,cAAc,IAAI,OAAO;AAAA,QACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MAC1B,CAAC,EAAE,QAAQ;AAAA,IACX,CAAC;AAAA,IACC,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,MACjC,QAAQ,IAAI,OAAO;AAAA,MACnB,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,MAChC,SAAS,IAAI,KAAK,CAAC,cAAc,SAAS,aAAa,yBAAyB,CAAC;AAAA,IACnF,CAAC,CAAC;AAAA,EACF,CAAC,CAAC;AAAA,EACA,SAAS,IAAI,OAAO;AACtB,CAAC;AAGM,IAAM,qCAAqC,IAAI,OAAO;AAAA,EAC3D,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,gDAAgD,IAAI,OAAO;AAAA,EACtE,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,kDAAkD,IAAI,OAAO;AAAA,EACxE,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,yCAAyC,IAAI,OAAO;AAAA,EAC/D,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,uCAAuC,IAAI,OAAO;AAAA,EAC7D,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AACX,CAAC;AAGqE,IAAM,gDAAgD;AAErH,IAAM,2CAA2C,IAAI,OAAO;AAAA,EACjE,YAAY,IAAI,OAAO,EAAE,KAAK,EAAE,SAAS;AAAA,EACzC,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,6CAA6C;AAC5E,CAAC;AAEM,IAAM,wCAAwC,IAAI,OAAO;AAAA,EAC9D,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,IAClD,eAAe,IAAI,QAAQ;AAAA,IAC3B,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,gBAAgB,IAAI,OAAO;AAAA,MAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MACxB,QAAQ,IAAI,OAAO;AAAA,MACnB,cAAc,IAAI,OAAO;AAAA,QACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MAC1B,CAAC,EAAE,QAAQ;AAAA,IACX,CAAC;AAAA,IACC,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,MACjC,QAAQ,IAAI,OAAO;AAAA,MACnB,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,MAChC,SAAS,IAAI,KAAK,CAAC,cAAc,SAAS,aAAa,yBAAyB,CAAC;AAAA,IACnF,CAAC,CAAC;AAAA,EACF,CAAC,CAAC;AACF,CAAC;AAGiE,IAAM,4CAA4C;AAE7G,IAAM,uCAAuC,IAAI,OAAO;AAAA,EAC7D,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,yCAAyC;AACxE,CAAC;AAEM,IAAM,oCAAoC,IAAI,OAAO;AAAA,EAC1D,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,IAClD,eAAe,IAAI,QAAQ;AAAA,IAC3B,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,gBAAgB,IAAI,OAAO;AAAA,MAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MACxB,QAAQ,IAAI,OAAO;AAAA,MACnB,cAAc,IAAI,OAAO;AAAA,QACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MAC1B,CAAC,EAAE,QAAQ;AAAA,IACX,CAAC;AAAA,IACC,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,MACjC,QAAQ,IAAI,OAAO;AAAA,MACnB,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,MAChC,SAAS,IAAI,KAAK,CAAC,cAAc,SAAS,aAAa,yBAAyB,CAAC;AAAA,IACnF,CAAC,CAAC;AAAA,EACF,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,sCAAsC,IAAI,OAAO;AAAA,EAC5D,gBAAgB,IAAI,OAAO,EAAE,KAAK,EAAE,SAAS;AAC/C,CAAC;AAEM,IAAM,uCAAuC,IAAI,OAAO;AAAA,EAC7D,eAAe,IAAI,QAAQ;AAAA,EAC3B,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,YAAY,IAAI,QAAQ;AAAA,EACxB,aAAa,IAAI,QAAQ;AAAA,EACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,EAClD,eAAe,IAAI,QAAQ;AAAA,EAC3B,gBAAgB,IAAI,OAAO;AAAA,IAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO;AAAA,IACnB,cAAc,IAAI,OAAO;AAAA,MACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,EACX,CAAC;AAAA,EACC,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,IACjC,QAAQ,IAAI,OAAO;AAAA,IACnB,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,SAAS,IAAI,KAAK,CAAC,cAAc,SAAS,aAAa,yBAAyB,CAAC;AAAA,EACnF,CAAC,CAAC;AACF,CAAC;AACM,IAAM,mCAAmC,IAAI,MAAM,oCAAoC;AAG9B,IAAM,0CAA0C;AAEzG,IAAM,qCAAqC,IAAI,OAAO;AAAA,EAC3D,YAAY,IAAI,OAAO,EAAE,KAAK,EAAE,SAAS;AAAA,EACzC,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,uCAAuC;AAAA,EACpE,cAAc,IAAI,OAAO,EAAE,KAAK,EAAE,SAAS;AAC7C,CAAC;AAEM,IAAM,kCAAkC,IAAI,OAAO;AAAA,EACxD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,eAAe,IAAI,QAAQ;AAAA,IAC3B,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,YAAY,IAAI,QAAQ;AAAA,IACxB,aAAa,IAAI,QAAQ;AAAA,IACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,IAClD,eAAe,IAAI,QAAQ;AAAA,IAC3B,gBAAgB,IAAI,OAAO;AAAA,MAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MACxB,QAAQ,IAAI,OAAO;AAAA,MACnB,cAAc,IAAI,OAAO;AAAA,QACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MAC1B,CAAC,EAAE,QAAQ;AAAA,IACX,CAAC;AAAA,IACC,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,MACjC,QAAQ,IAAI,OAAO;AAAA,MACnB,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,MAChC,SAAS,IAAI,KAAK,CAAC,cAAc,SAAS,aAAa,yBAAyB,CAAC;AAAA,IACnF,CAAC,CAAC;AAAA,EACF,CAAC,CAAC;AACF,CAAC;AAG2D,IAAM,sCAAsC;AAEjG,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,mCAAmC;AAAA,EAChE,cAAc,IAAI,OAAO,EAAE,KAAK,EAAE,SAAS;AAC7C,CAAC;AAEM,IAAM,8BAA8B,IAAI,OAAO;AAAA,EACpD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,eAAe,IAAI,QAAQ;AAAA,IAC3B,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,YAAY,IAAI,QAAQ;AAAA,IACxB,aAAa,IAAI,QAAQ;AAAA,IACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,IAClD,eAAe,IAAI,QAAQ;AAAA,IAC3B,gBAAgB,IAAI,OAAO;AAAA,MAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MACxB,QAAQ,IAAI,OAAO;AAAA,MACnB,cAAc,IAAI,OAAO;AAAA,QACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MAC1B,CAAC,EAAE,QAAQ;AAAA,IACX,CAAC;AAAA,IACC,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,MACjC,QAAQ,IAAI,OAAO;AAAA,MACnB,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,MAChC,SAAS,IAAI,KAAK,CAAC,cAAc,SAAS,aAAa,yBAAyB,CAAC;AAAA,IACnF,CAAC,CAAC;AAAA,EACF,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,2BAA2B,IAAI,OAAO;AAAA,EACjD,WAAW,IAAI,OAAO;AAAA,IACtB,MAAM,IAAI,OAAO,EAAE,KAAK,EAAE,QAAQ;AAAA,IAClC,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,EAClC,CAAC;AAAA,EACC,SAAS,IAAI,OAAO;AAAA,IACpB,UAAU,IAAI,OAAO;AAAA,MACrB,SAAS,IAAI,OAAO;AAAA,MACpB,MAAM,IAAI,OAAO,EAAE,KAAK,EAAE,QAAQ;AAAA,IACpC,CAAC;AAAA,IACC,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,MAC9B,SAAS,IAAI,OAAO;AAAA,MACpB,mBAAmB,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC;AAAA,IAClD,CAAC,CAAC;AAAA,EACF,CAAC;AACD,CAAC;AAEM,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,SAAS,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC;AACxC,CAAC;AAGM,IAAM,kCAAkC,IAAI,OAAO;AACnD,IAAM,8BAA8B,IAAI,MAAM,+BAA+B;AAGxB,IAAM,sCAAsC;AAEjG,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,mCAAmC;AAClE,CAAC;AAEM,IAAM,8BAA8B,IAAI,OAAO;AAAA,EACpD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,QAAQ,IAAI,OAAO;AAAA,EACrB,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,kCAAkC,IAAI,OAAO;AAAA,EACxD,QAAQ,IAAI,OAAO;AACrB,CAAC;AAEM,IAAM,oCAAoC,IAAI,OAAO;AAAA,EAC1D,QAAQ,IAAI,OAAO;AAAA,EACnB,UAAU,IAAI,MAAM,IAAI,OAAO;AAAA,IAC/B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO;AAAA,IACnB,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,EACtC,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,wCAAwC,IAAI,OAAO;AAAA,EAC9D,QAAQ,IAAI,OAAO;AACrB,CAAC;AAEM,IAAM,0CAA0C,IAAI,OAAO;AAAA,EAChE,UAAU,IAAI,MAAM,IAAI,OAAO;AAAA,IAC/B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,WAAW,IAAI,MAAM,IAAI,OAAO;AAAA,MAChC,WAAW,IAAI,OAAO;AAAA,MACtB,cAAc,IAAI,KAAK,CAAC,WAAW,WAAW,SAAS,MAAM,CAAC;AAAA,MAC9D,WAAW,IAAI,MAAM,IAAI,OAAO;AAAA,QAChC,eAAe,IAAI,OAAO;AAAA,UAC1B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,QAC1B,CAAC;AAAA,QACC,SAAS,IAAI,OAAO,EAAE,QAAQ;AAAA,QAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,QAC7B,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,QACpC,iBAAiB,IAAI,QAAQ;AAAA,QAC7B,iBAAiB,IAAI,OAAO,EAAE,QAAQ;AAAA,QACtC,2BAA2B,IAAI,OAAO,EAAE,QAAQ;AAAA,QAChD,gCAAgC,IAAI,OAAO,EAAE,QAAQ;AAAA,QACrD,oBAAoB,IAAI,OAAO,IAAI,OAAO,GAAG,IAAI,IAAI,CAAC,EAAE,QAAQ;AAAA,MAClE,CAAC,CAAC,EAAE,QAAQ;AAAA,MACV,gBAAgB,IAAI,OAAO,EAAE,QAAQ;AAAA,IACvC,CAAC,CAAC,EAAE,QAAQ;AAAA,EACZ,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,eAAe,IAAI,OAAO;AAAA,IAC1B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC;AAAA,EACC,SAAS,IAAI,OAAO,EAAE,QAAQ;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,EAC7B,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,EACpC,iBAAiB,IAAI,QAAQ;AAAA,EAC7B,iBAAiB,IAAI,OAAO,EAAE,QAAQ;AAAA,EACtC,2BAA2B,IAAI,OAAO,EAAE,QAAQ;AAAA,EAChD,gCAAgC,IAAI,OAAO,EAAE,QAAQ;AAAA,EACrD,oBAAoB,IAAI,OAAO,IAAI,OAAO,GAAG,IAAI,IAAI,CAAC,EAAE,QAAQ;AAClE,CAAC;AAEM,IAAM,uCAAuC,IAAI,OAAO;AAAA,EAC7D,WAAW,IAAI,OAAO;AAAA,EACtB,cAAc,IAAI,KAAK,CAAC,WAAW,WAAW,SAAS,MAAM,CAAC;AAAA,EAC9D,WAAW,IAAI,MAAM,IAAI,OAAO;AAAA,IAChC,eAAe,IAAI,OAAO;AAAA,MAC1B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,SAAS,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC7B,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,IACpC,iBAAiB,IAAI,QAAQ;AAAA,IAC7B,iBAAiB,IAAI,OAAO,EAAE,QAAQ;AAAA,IACtC,2BAA2B,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChD,gCAAgC,IAAI,OAAO,EAAE,QAAQ;AAAA,IACrD,oBAAoB,IAAI,OAAO,IAAI,OAAO,GAAG,IAAI,IAAI,CAAC,EAAE,QAAQ;AAAA,EAClE,CAAC,CAAC,EAAE,QAAQ;AAAA,EACV,gBAAgB,IAAI,OAAO,EAAE,QAAQ;AACvC,CAAC;AAG+C,IAAM,0BAA0B;AAAW,IAAM,6BAA6B;AAEvH,IAAM,qBAAqB,IAAI,OAAO;AAAA,EAC3C,WAAW,IAAI,OAAO,EAAE,SAAS;AAAA,EACjC,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,uBAAuB;AAAA,EACpD,WAAW,IAAI,OAAO,EAAE,QAAQ,0BAA0B;AAC5D,CAAC;AAEM,IAAM,kBAAkB,IAAI,OAAO;AAAA,EACxC,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC7B,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,IACpC,OAAO,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC5B,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,EAC/B,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,yCAAyC;AAAW,IAAM,wCAAwC;AAExG,IAAM,kCAAkC,IAAI,OAAO;AAAA,EACxD,MAAM,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC,EAAE,SAAS;AAAA,EAC9C,UAAU,IAAI,OAAO,EAAE,QAAQ,sCAAsC;AAAA,EACrE,SAAS,IAAI,OAAO,EAAE,QAAQ,qCAAqC;AAAA,EACnE,QAAQ,IAAI,KAAK,CAAC,QAAQ,OAAO,WAAW,OAAO,UAAU,KAAK,CAAC,EAAE,SAAS;AAChF,CAAC;AAEM,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,IACjC,WAAW,IAAI,OAAO,EAAE,SAAS;AAAA,IACjC,OAAO,IAAI,OAAO;AAAA,EACpB,CAAC,CAAC;AACF,CAAC;AACM,IAAM,+BAA+B,IAAI,MAAM,gCAAgC;AAG/E,IAAM,8BAA8B,IAAI,OAAO;AAAA,EACpD,mBAAmB,IAAI,OAAO,EAAE,KAAK,EAAE,SAAS;AAClD,CAAC;AAEM,IAAM,2BAA2B,IAAI,OAAO;AAAA,EACjD,cAAc,IAAI,OAAO;AAAA,EACzB,SAAS,IAAI,OAAO,EAAE,QAAQ;AAAA,EAC9B,OAAO,IAAI,OAAO,EAAE,KAAK,EAAE,QAAQ;AACrC,CAAC;AAGkD,IAAM,6BAA6B;AAE/E,IAAM,wBAAwB,IAAI,OAAO;AAAA,EAC9C,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,0BAA0B;AACzD,CAAC;AAEM,IAAM,qBAAqB,IAAI,OAAO;AAAA,EAC3C,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC1B,gBAAgB,IAAI,OAAO;AAAA,MAC3B,UAAU,IAAI,KAAK,CAAC,WAAW,aAAa,cAAc,SAAS,CAAC;AAAA,MACpE,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAClC,CAAC;AAAA,IACC,cAAc,IAAI,QAAQ;AAAA,IAC1B,gBAAgB,IAAI,OAAO;AAAA,IAC3B,iBAAiB,IAAI,OAAO;AAAA,IAC5B,cAAc,IAAI,OAAO;AAAA,IACzB,sBAAsB,IAAI,OAAO,IAAI,OAAO,GAAG,IAAI,IAAI,EAAE,SAAS,CAAC,EAAE,QAAQ;AAAA,EAC/E,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,8BAA8B,IAAI,OAAO;AAAA,EACpD,aAAa,IAAI,OAAO;AAC1B,CAAC;AAEM,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,gBAAgB,IAAI,OAAO;AAAA,IAC3B,UAAU,IAAI,KAAK,CAAC,WAAW,aAAa,cAAc,SAAS,CAAC;AAAA,IACpE,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,EAClC,CAAC;AAAA,EACC,cAAc,IAAI,QAAQ;AAAA,EAC1B,gBAAgB,IAAI,OAAO;AAAA,EAC3B,iBAAiB,IAAI,OAAO;AAAA,EAC5B,cAAc,IAAI,OAAO;AAAA,EACzB,sBAAsB,IAAI,OAAO,IAAI,OAAO,GAAG,IAAI,IAAI,EAAE,SAAS,CAAC,EAAE,QAAQ;AAC/E,CAAC;AAGM,IAAM,sCAAsC,IAAI,OAAO;AAAA,EAC5D,aAAa,IAAI,OAAO;AAC1B,CAAC;AAGM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,QAAQ,IAAI,OAAO;AAAA,IACnB,iBAAiB,IAAI,OAAO;AAAA,IAC5B,4BAA4B,IAAI,OAAO;AAAA,IACvC,iBAAiB,IAAI,MAAM,IAAI,OAAO;AAAA,MACtC,SAAS,IAAI,KAAK,CAAC,WAAW,SAAS,UAAU,CAAC;AAAA,MAClD,eAAe,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IACnC,CAAC,CAAC;AAAA,EACF,CAAC;AAAA,EACC,aAAa,IAAI,MAAM,IAAI,OAAO;AAAA,IAClC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,aAAa,IAAI,OAAO;AAAA,IACxB,eAAe,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IACjC,uBAAuB,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IACzC,gBAAgB,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAClC,gBAAgB,IAAI,QAAQ;AAAA,IAC5B,kBAAkB,IAAI,QAAQ;AAAA,IAC9B,qBAAqB,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IACvC,uBAAuB,IAAI,QAAQ;AAAA,IACnC,oCAAoC,IAAI,QAAQ;AAAA,IAChD,0BAA0B,IAAI,QAAQ;AAAA,EACxC,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,kCAAkC;AAExC,IAAM,kCAAkC;AAGxC,IAAM,uBAAuB,IAAI,OAAO;AAAA,EAC7C,QAAQ,IAAI,OAAO;AAAA,IACnB,QAAQ,IAAI,OAAO,EAAE,IAAI,+BAA+B,EAAE,IAAI,+BAA+B;AAAA,IAC7F,SAAS,IAAI,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC;AAAA,IACnC,YAAY,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC9B,yBAAyB,IAAI,QAAQ;AAAA,EACvC,CAAC;AAAA,EACC,YAAY,IAAI,OAAO;AAAA,IACvB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,gBAAgB,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAClC,UAAU,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC/B,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC7B,YAAY,IAAI,OAAO,EAAE,QAAQ;AAAA,IACjC,YAAY,IAAI,OAAO,EAAE,QAAQ;AAAA,IACjC,+BAA+B,IAAI,QAAQ;AAAA,IAC3C,oBAAoB,IAAI,OAAO,EAAE,QAAQ;AAAA,IACzC,0BAA0B,IAAI,QAAQ;AAAA,EACxC,CAAC;AAAA,EACC,kBAAkB,IAAI,KAAK,CAAC,WAAW,SAAS,UAAU,CAAC;AAC7D,CAAC;AAGM,IAAM,kCAAkC,IAAI,OAAO;AAAA,EACxD,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,gBAAgB,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAClC,UAAU,IAAI,OAAO,EAAE,QAAQ;AAAA,EAC/B,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,EAC7B,YAAY,IAAI,OAAO,EAAE,QAAQ;AAAA,EACjC,YAAY,IAAI,OAAO,EAAE,QAAQ;AAAA,EACjC,+BAA+B,IAAI,QAAQ;AAAA,EAC3C,oBAAoB,IAAI,OAAO,EAAE,QAAQ;AAAA,EACzC,0BAA0B,IAAI,QAAQ;AACxC,CAAC;AAGM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,WAAW,IAAI,MAAM,IAAI,OAAO,CAAC,EAAE,SAAS;AAC9C,CAAC;AAEM,IAAM,8BAA8B,IAAI,OAAO;AAAA,EACpD,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,WAAW,IAAI,OAAO,EAAE,IAAI,CAAC;AAC/B,CAAC;AACM,IAAM,0BAA0B,IAAI,MAAM,2BAA2B;AAGrE,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,WAAW,IAAI,OAAO,EAAE,IAAI,CAAC;AAC/B,CAAC;AAGmD,IAAM,8BAA8B;AAEjF,IAAM,yBAAyB,IAAI,OAAO;AAAA,EAC/C,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,2BAA2B;AAC1D,CAAC;AAEM,IAAM,sBAAsB,IAAI,OAAO;AAAA,EAC5C,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC1B,aAAa,IAAI,QAAQ;AAAA,IACzB,eAAe,IAAI,QAAQ;AAAA,IAC3B,mBAAmB,IAAI,OAAO,EAAE,QAAQ;AAAA,IACxC,WAAW,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC/B,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,mBAAmB,IAAI,OAAO;AAAA,EACzC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,aAAa,IAAI,QAAQ;AAAA,EACzB,eAAe,IAAI,QAAQ;AAAA,EAC3B,mBAAmB,IAAI,OAAO,EAAE,QAAQ;AAAA,EACxC,WAAW,IAAI,OAAO,EAAE,IAAI,CAAC;AAC/B,CAAC;AAGM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,WAAW,IAAI,OAAO;AACxB,CAAC;AAEM,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,aAAa,IAAI,QAAQ;AAAA,EACzB,eAAe,IAAI,QAAQ;AAAA,EAC3B,mBAAmB,IAAI,OAAO,EAAE,QAAQ;AAAA,EACxC,WAAW,IAAI,OAAO,EAAE,IAAI,CAAC;AAC/B,CAAC;AAGM,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,WAAW,IAAI,OAAO;AACxB,CAAC;AAGM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,WAAW,IAAI,OAAO;AACxB,CAAC;AAEM,IAAM,2BAA2B,IAAI,OAAO;AAAA,EACjD,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,aAAa,IAAI,QAAQ;AAAA,EACzB,eAAe,IAAI,QAAQ;AAAA,EAC3B,mBAAmB,IAAI,OAAO,EAAE,QAAQ;AAC1C,CAAC;AAGyD,IAAM,oCAAoC;AAE7F,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,iCAAiC;AAChE,CAAC;AAEM,IAAM,4BAA4B,IAAI,OAAO;AAAA,EAClD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,QAAQ,IAAI,OAAO;AAAA,IACnB,SAAS,IAAI,KAAK,CAAC,WAAW,SAAS,eAAe,WAAW,SAAS,OAAO,CAAC;AAAA,EACpF,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,oCAAoC,IAAI,OAAO;AAAA,EAC1D,aAAa,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,SAAS;AAAA,EAC5D,WAAW,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,SAAS;AAC5D,CAAC;AAEM,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,eAAe,IAAI,OAAO;AAAA,EAC1B,SAAS,IAAI,OAAO;AAAA,EACpB,WAAW,IAAI,OAAO;AAAA,EACtB,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,OAAO;AACtB,CAAC;AAGuD,IAAM,kCAAkC;AAEzF,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,+BAA+B;AAAA,EAC5D,kBAAkB,IAAI,KAAK,CAAC,aAAa,YAAY,CAAC,EAAE,SAAS;AAAA,EACjE,oBAAoB,IAAI,OAAO,EAAE,SAAS;AAAA,EAC1C,YAAY,IAAI,MAAM,IAAI,KAAK,CAAC,WAAW,SAAS,eAAe,WAAW,SAAS,OAAO,CAAC,CAAC,EAAE,SAAS;AAAA,EAC3G,aAAa,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,SAAS;AAAA,EAC5D,WAAW,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,SAAS;AAC5D,CAAC;AAEM,IAAM,0BAA0B,IAAI,OAAO;AAAA,EAChD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,aAAa,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,IACjD,SAAS,IAAI,KAAK,CAAC,WAAW,SAAS,eAAe,WAAW,SAAS,OAAO,CAAC;AAAA,IAClF,mBAAmB,IAAI,OAAO,EAAE,QAAQ;AAAA,IACxC,mBAAmB,IAAI,OAAO,EAAE,QAAQ;AAAA,IACxC,cAAc,IAAI,MAAM,IAAI,OAAO;AAAA,MACnC,QAAQ,IAAI,OAAO;AAAA,MACnB,SAAS,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,CAAC,CAAC;AAAA,IACA,aAAa,IAAI,OAAO,EAAE,QAAQ;AAAA,EACpC,CAAC,CAAC;AACF,CAAC;AAGmE,IAAM,8CAA8C;AAEjH,IAAM,yCAAyC,IAAI,OAAO;AAAA,EAC/D,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,2CAA2C;AAAA,EACxE,aAAa,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,SAAS;AAAA,EAC5D,WAAW,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,SAAS;AAC5D,CAAC;AAEM,IAAM,sCAAsC,IAAI,OAAO;AAAA,EAC5D,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,mBAAmB,IAAI,OAAO,EAAE,QAAQ;AAAA,IACxC,SAAS,IAAI,OAAO;AAAA,EACtB,CAAC,CAAC;AACF,CAAC;AAG+D,IAAM,0CAA0C;AAEzG,IAAM,qCAAqC,IAAI,OAAO;AAAA,EAC3D,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,uCAAuC;AACtE,CAAC;AAEM,IAAM,kCAAkC,IAAI,OAAO;AAAA,EACxD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,QAAQ,IAAI,OAAO;AAAA,IACnB,SAAS,IAAI,OAAO;AAAA,EACtB,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,QAAQ,IAAI,OAAO;AAAA,EACnB,SAAS,IAAI,OAAO;AACtB,CAAC;AAGM,IAAM,sCAAsC,IAAI,OAAO;AAAA,EAC5D,QAAQ,IAAI,OAAO;AACrB,CAAC;AAEM,IAAM,wCAAwC,IAAI,OAAO;AAAA,EAC9D,QAAQ,IAAI,OAAO;AAAA,EACnB,SAAS,IAAI,OAAO;AACtB,CAAC;AAGM,IAAM,yCAAyC,IAAI,OAAO;AAAA,EAC/D,QAAQ,IAAI,OAAO;AACrB,CAAC;AAGM,IAAM,0CAA0C,IAAI,OAAO;AAAA,EAChE,aAAa,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,SAAS;AAAA,EAC5D,WAAW,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,SAAS;AAC5D,CAAC;AAGM,IAAM,kCAAkC,IAAI,OAAO;AAAA,EACxD,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,MAAM,IAAI,OAAO,EAAE,QAAQ;AAAA,EAC3B,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,EAChC,cAAc,IAAI,MAAM,IAAI,IAAI,CAAC;AACnC,CAAC;AACM,IAAM,8BAA8B,IAAI,MAAM,+BAA+B;AAG7E,IAAM,yCAAyC,IAAI,OAAO;AAAA,EAC/D,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,MAAM,IAAI,OAAO,EAAE,QAAQ;AAAA,EAC3B,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,EAChC,cAAc,IAAI,MAAM,IAAI,IAAI,CAAC;AACnC,CAAC;AACM,IAAM,qCAAqC,IAAI,MAAM,sCAAsC;AAG3F,IAAM,wCAAwC,IAAI,OAAO;AAAA,EAC9D,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,MAAM,IAAI,OAAO,EAAE,QAAQ;AAAA,EAC3B,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,EAChC,cAAc,IAAI,MAAM,IAAI,IAAI,CAAC;AACnC,CAAC;AACM,IAAM,oCAAoC,IAAI,MAAM,qCAAqC;AAGzF,IAAM,8BAA8B,IAAI,OAAO;AAAA,EACpD,MAAM,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC,EAAE,SAAS;AAChD,CAAC;AAEM,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,QAAQ,IAAI,OAAO;AAAA,EACnB,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAC/B,CAAC;AACM,IAAM,2BAA2B,IAAI,MAAM,4BAA4B;AAGd,IAAM,0CAA0C;AAEzG,IAAM,qCAAqC,IAAI,OAAO;AAAA,EAC3D,iBAAiB,IAAI,OAAO,EAAE,SAAS;AAAA,EACvC,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,uCAAuC;AACtE,CAAC;AAEM,IAAM,kCAAkC,IAAI,OAAO;AAAA,EACxD,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO;AAAA,IACnB,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,EAC/B,CAAC,CAAC;AAAA,EACA,SAAS,IAAI,OAAO;AACtB,CAAC;AAG+D,IAAM,0CAA0C;AAEzG,IAAM,qCAAqC,IAAI,OAAO;AAAA,EAC3D,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,uCAAuC;AACtE,CAAC;AAEM,IAAM,kCAAkC,IAAI,OAAO;AAAA,EACxD,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO;AAAA,IACnB,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,EAC/B,CAAC,CAAC;AAAA,EACA,SAAS,IAAI,OAAO;AACtB,CAAC;AAG8D,IAAM,yCAAyC;AAEvG,IAAM,oCAAoC,IAAI,OAAO;AAAA,EAC1D,SAAS,IAAI,OAAO,EAAE,SAAS;AAAA,EAC/B,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,sCAAsC;AACrE,CAAC;AAEM,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO;AAAA,IACnB,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,EAC/B,CAAC,CAAC;AAAA,EACA,SAAS,IAAI,OAAO;AACtB,CAAC;AAGM,IAAM,oBAAoB,IAAI,OAAO;AAAA,EAC1C,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC3B,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,EACpC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,iBAAiB,IAAI,QAAQ;AAAA,EAC7B,mBAAmB,IAAI,QAAQ;AAAA,EAC/B,mBAAmB,IAAI,QAAQ;AAAA,EAC/B,aAAa,IAAI,QAAQ;AAAA,EACzB,cAAc,IAAI,MAAM,IAAI,OAAO;AAAA,IACnC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,aAAa,IAAI,OAAO;AAAA,MACxB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,aAAa,IAAI,OAAO;AAAA,IACxB,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC3B,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC1B,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,IACpC,YAAY,IAAI,OAAO;AAAA,MACvB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,mBAAmB,IAAI,QAAQ;AAAA,IAC/B,mBAAmB,IAAI,QAAQ;AAAA,IAC/B,cAAc,IAAI,OAAO;AAAA,MACzB,aAAa,IAAI,QAAQ;AAAA,MACzB,oBAAoB,IAAI,OAAO,EAAE,QAAQ;AAAA,MACzC,SAAS,IAAI,OAAO,EAAE,QAAQ;AAAA,MAC9B,gBAAgB,IAAI,OAAO,EAAE,QAAQ;AAAA,IACvC,CAAC;AAAA,IACC,cAAc,IAAI,OAAO;AAAA,MACzB,cAAc,IAAI,QAAQ;AAAA,IAC5B,CAAC;AAAA,EACD,CAAC,CAAC;AAAA,EACA,cAAc,IAAI,MAAM,IAAI,OAAO;AAAA,IACnC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC7B,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC1B,aAAa,IAAI,OAAO;AAAA,EAC1B,CAAC,CAAC;AAAA,EACA,MAAM,IAAI,OAAO,EAAE,KAAK,EAAE,QAAQ;AAAA,EAClC,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,qBAAqB,IAAI,MAAM,IAAI,OAAO;AAAA,IAC1C,aAAa,IAAI,OAAO;AAAA,MACxB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,aAAa,IAAI,OAAO;AAAA,EAC1B,CAAC,CAAC;AAAA,EACA,gBAAgB,IAAI,MAAM,IAAI,OAAO;AAAA,IACrC,aAAa,IAAI,OAAO;AAAA,MACxB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,mBAAmB,IAAI,KAAK,CAAC,eAAe,aAAa,CAAC;AAAA,EAC5D,CAAC,CAAC;AAAA,EACA,cAAc,IAAI,OAAO;AAAA,IACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AACX,CAAC;AAGM,IAAM,yBAAyB,IAAI,OAAO;AAAA,EAC/C,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,2BAA2B,IAAI,OAAO;AAAA,EACjD,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC3B,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,EACpC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,iBAAiB,IAAI,QAAQ;AAAA,EAC7B,mBAAmB,IAAI,QAAQ;AAAA,EAC/B,mBAAmB,IAAI,QAAQ;AAAA,EAC/B,cAAc,IAAI,OAAO;AAAA,IACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,aAAa,IAAI,QAAQ;AAAA,EACzB,cAAc,IAAI,MAAM,IAAI,OAAO;AAAA,IACnC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,aAAa,IAAI,OAAO;AAAA,MACxB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,aAAa,IAAI,OAAO;AAAA,IACxB,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC3B,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC1B,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,IACpC,YAAY,IAAI,OAAO;AAAA,MACvB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,mBAAmB,IAAI,QAAQ;AAAA,IAC/B,mBAAmB,IAAI,QAAQ;AAAA,IAC/B,cAAc,IAAI,OAAO;AAAA,MACzB,aAAa,IAAI,QAAQ;AAAA,MACzB,oBAAoB,IAAI,OAAO,EAAE,QAAQ;AAAA,MACzC,SAAS,IAAI,OAAO,EAAE,QAAQ;AAAA,MAC9B,gBAAgB,IAAI,OAAO,EAAE,QAAQ;AAAA,IACvC,CAAC;AAAA,IACC,cAAc,IAAI,OAAO;AAAA,MACzB,cAAc,IAAI,QAAQ;AAAA,IAC5B,CAAC;AAAA,EACD,CAAC,CAAC;AAAA,EACA,cAAc,IAAI,MAAM,IAAI,OAAO;AAAA,IACnC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC7B,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC1B,aAAa,IAAI,OAAO;AAAA,EAC1B,CAAC,CAAC;AAAA,EACA,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,qBAAqB,IAAI,MAAM,IAAI,OAAO;AAAA,IAC1C,aAAa,IAAI,OAAO;AAAA,MACxB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,aAAa,IAAI,OAAO;AAAA,EAC1B,CAAC,CAAC;AAAA,EACA,gBAAgB,IAAI,MAAM,IAAI,OAAO;AAAA,IACrC,aAAa,IAAI,OAAO;AAAA,MACxB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,mBAAmB,IAAI,KAAK,CAAC,eAAe,aAAa,CAAC;AAAA,EAC5D,CAAC,CAAC;AAAA,EACA,eAAe,IAAI,QAAQ;AAAA,EAC3B,qBAAqB,IAAI,QAAQ;AACnC,CAAC;AAGM,IAAM,4BAA4B,IAAI,OAAO;AAAA,EAClD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,yBAAyB,IAAI,OAAO;AAAA,EAC/C,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,uBAAuB,IAAI,OAAO;AAAA,EAC7C,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC3B,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,EACpC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,iBAAiB,IAAI,QAAQ;AAAA,EAC7B,mBAAmB,IAAI,QAAQ;AAAA,EAC/B,mBAAmB,IAAI,QAAQ;AAAA,EAC/B,cAAc,IAAI,OAAO;AAAA,IACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,aAAa,IAAI,QAAQ;AAAA,EACzB,cAAc,IAAI,MAAM,IAAI,OAAO;AAAA,IACnC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,aAAa,IAAI,OAAO;AAAA,MACxB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,aAAa,IAAI,OAAO;AAAA,IACxB,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC3B,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC1B,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,IACpC,YAAY,IAAI,OAAO;AAAA,MACvB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,mBAAmB,IAAI,QAAQ;AAAA,IAC/B,mBAAmB,IAAI,QAAQ;AAAA,IAC/B,cAAc,IAAI,OAAO;AAAA,MACzB,aAAa,IAAI,QAAQ;AAAA,MACzB,oBAAoB,IAAI,OAAO,EAAE,QAAQ;AAAA,MACzC,SAAS,IAAI,OAAO,EAAE,QAAQ;AAAA,MAC9B,gBAAgB,IAAI,OAAO,EAAE,QAAQ;AAAA,IACvC,CAAC;AAAA,IACC,cAAc,IAAI,OAAO;AAAA,MACzB,cAAc,IAAI,QAAQ;AAAA,IAC5B,CAAC;AAAA,EACD,CAAC,CAAC;AAAA,EACA,cAAc,IAAI,MAAM,IAAI,OAAO;AAAA,IACnC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC7B,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC1B,aAAa,IAAI,OAAO;AAAA,EAC1B,CAAC,CAAC;AAAA,EACA,qBAAqB,IAAI,MAAM,IAAI,OAAO;AAAA,IAC1C,aAAa,IAAI,OAAO;AAAA,MACxB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,aAAa,IAAI,OAAO;AAAA,EAC1B,CAAC,CAAC;AAAA,EACA,gBAAgB,IAAI,MAAM,IAAI,OAAO;AAAA,IACrC,aAAa,IAAI,OAAO;AAAA,MACxB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,mBAAmB,IAAI,KAAK,CAAC,eAAe,aAAa,CAAC;AAAA,EAC5D,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,wCAAwC,IAAI,OAAO;AAAA,EAC9D,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEuE,IAAM,kDAAkD;AAEzH,IAAM,6CAA6C,IAAI,OAAO;AAAA,EACnE,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,+CAA+C;AAC9E,CAAC;AAEM,IAAM,0CAA0C,IAAI,OAAO;AAAA,EAChE,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO;AAAA,IACnB,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,IACpC,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,EAC/B,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,8CAA8C,IAAI,OAAO;AAAA,EACpE,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,oDAAoD,IAAI,OAAO;AAAA,EAC1E,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,QAAQ,IAAI,OAAO;AAAA,EACnB,QAAQ,IAAI,OAAO;AACrB,CAAC;AACM,IAAM,gDAAgD,IAAI,MAAM,iDAAiD;AAGjH,IAAM,8BAA8B,IAAI,OAAO;AAAA,EACpD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,4BAA4B,IAAI,OAAO;AAAA,EAClD,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AACX,CAAC;AAGM,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,iCAAiC,IAAI,WAAW,QAAQ;AAG9D,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,QAAQ,IAAI,OAAO;AAAA,IACnB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC;AACD,CAAC;AAGM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,2BAA2B,IAAI,OAAO;AAAA,EACjD,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AACX,CAAC;AAGiE,IAAM,4CAA4C;AAE7G,IAAM,uCAAuC,IAAI,OAAO;AAAA,EAC7D,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,yCAAyC;AACxE,CAAC;AAEM,IAAM,oCAAoC,IAAI,OAAO;AAAA,EAC1D,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO;AAAA,IACnB,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,IACpC,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,EAC/B,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,yCAAyC,IAAI,OAAO;AAAA,EAC/D,MAAM,IAAI,OAAO,EAAE,KAAK,EAAE,QAAQ;AAAA,EAClC,0BAA0B,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EAChD,uBAAuB,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC;AACtD,CAAC;AAEM,IAAM,iDAAiD,IAAI,OAAO;AAAA,EACvE,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,QAAQ,IAAI,OAAO;AAAA,EACnB,QAAQ,IAAI,OAAO;AAAA,EACnB,cAAc,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACpC,gBAAgB,IAAI,QAAQ;AAC9B,CAAC;AACM,IAAM,6CAA6C,IAAI,MAAM,8CAA8C;AAG3G,IAAM,oCAAoC,IAAI,OAAO;AAAA,EAC1D,sBAAsB,IAAI,MAAM,IAAI,OAAO,CAAC;AAC9C,CAAC;AAGM,IAAM,0BAA0B,IAAI,OAAO;AAAA,EAChD,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,MAAM,IAAI,OAAO,EAAE,KAAK,EAAE,QAAQ;AAAA,EAClC,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AACX,CAAC;AAGM,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,kCAAkC,IAAI,OAAO;AAAA,EACxD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAC5B,CAAC;AAGM,IAAM,0BAA0B,IAAI,OAAO;AAAA,EAChD,QAAQ,IAAI,OAAO;AAAA,IACnB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC;AACD,CAAC;AAGM,IAAM,uCAAuC,IAAI,OAAO;AAAA,EAC7D,gBAAgB,IAAI,OAAO,EAAE,KAAK,EAAE,SAAS;AAC/C,CAAC;AAEM,IAAM,wCAAwC,IAAI,OAAO;AAAA,EAC9D,eAAe,IAAI,QAAQ;AAAA,EAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,QAAQ,IAAI,OAAO;AAAA,EACnB,YAAY,IAAI,QAAQ;AAAA,EACxB,QAAQ,IAAI,OAAO;AAAA,EACnB,eAAe,IAAI,QAAQ;AAC7B,CAAC;AACM,IAAM,oCAAoC,IAAI,MAAM,qCAAqC;AAG/B,IAAM,2CAA2C;AAE3G,IAAM,sCAAsC,IAAI,OAAO;AAAA,EAC5D,YAAY,IAAI,OAAO,EAAE,KAAK,EAAE,SAAS;AAAA,EACzC,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,wCAAwC;AAAA,EACrE,eAAe,IAAI,QAAQ,EAAE,SAAS;AACxC,CAAC;AAEM,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,eAAe,IAAI,QAAQ;AAAA,IAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,QAAQ,IAAI,OAAO;AAAA,IACnB,YAAY,IAAI,QAAQ;AAAA,IACxB,QAAQ,IAAI,OAAO;AAAA,IACnB,eAAe,IAAI,QAAQ;AAAA,EAC7B,CAAC,CAAC;AACF,CAAC;AAG4D,IAAM,uCAAuC;AAEnG,IAAM,kCAAkC,IAAI,OAAO;AAAA,EACxD,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,oCAAoC;AAAA,EACjE,eAAe,IAAI,QAAQ,EAAE,SAAS;AACxC,CAAC;AAEM,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,eAAe,IAAI,QAAQ;AAAA,IAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,QAAQ,IAAI,OAAO;AAAA,IACnB,YAAY,IAAI,QAAQ;AAAA,IACxB,QAAQ,IAAI,OAAO;AAAA,IACnB,eAAe,IAAI,QAAQ;AAAA,EAC7B,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,wCAAwC;AAAwE,IAAM,qCAAqC;AAEjK,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,MAAM,IAAI,OAAO,EAAE,KAAK,EAAE,SAAS;AAAA,EACnC,cAAc,IAAI,OAAO,EAAE,KAAK,EAAE,SAAS;AAAA,EAC3C,WAAW,IAAI,OAAO,EAAE,QAAQ,qCAAqC;AAAA,EACrE,kBAAkB,IAAI,KAAK,CAAC,aAAa,YAAY,CAAC,EAAE,SAAS;AAAA,EACjE,UAAU,IAAI,OAAO,EAAE,SAAS;AAAA,EAChC,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,kCAAkC;AACjE,CAAC;AAEM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,UAAU,IAAI,MAAM,IAAI,OAAO;AAAA,MAC/B,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,MAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,MAChC,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,MAC3B,SAAS,IAAI,IAAI,EAAE,QAAQ;AAAA,MAC3B,eAAe,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IACnC,CAAC,CAAC;AAAA,IACA,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,MACjC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,MAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,MAChC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,MAC1B,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,MAClD,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,IACpD,CAAC,CAAC;AAAA,IACA,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,aAAa,IAAI,OAAO;AAAA,IACxB,aAAa,IAAI,OAAO;AAAA,MACxB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MACxB,SAAS,IAAI,OAAO;AAAA,MACpB,QAAQ,IAAI,OAAO;AAAA,IACrB,CAAC;AAAA,EACD,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,0BAA0B,IAAI,OAAO;AAAA,EAChD,MAAM,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC,EAAE,SAAS;AAChD,CAAC;AAEM,IAAM,2BAA2B,IAAI,OAAO;AAAA,EACjD,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,aAAa,IAAI,QAAQ;AAAA,EACzB,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,eAAe,IAAI,QAAQ;AAAA,EAC3B,aAAa,IAAI,OAAO;AAAA,IACxB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO;AAAA,IACnB,cAAc,IAAI,OAAO;AAAA,MACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,EACX,CAAC;AAAA,EACC,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,IACjC,QAAQ,IAAI,OAAO;AAAA,IACnB,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,EAClC,CAAC,CAAC;AACF,CAAC;AACM,IAAM,uBAAuB,IAAI,MAAM,wBAAwB;AAGX,IAAM,qCAAqC;AAE/F,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,SAAS,IAAI,OAAO,EAAE,SAAS;AAAA,EAC/B,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,kCAAkC;AAAA,EAC/D,YAAY,IAAI,OAAO,EAAE,KAAK,EAAE,SAAS;AAAA,EACzC,qBAAqB,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC,EAAE,SAAS;AAC/D,CAAC;AAEM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,aAAa,IAAI,QAAQ;AAAA,IACzB,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,eAAe,IAAI,QAAQ;AAAA,IAC3B,aAAa,IAAI,OAAO;AAAA,MACxB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MACxB,QAAQ,IAAI,OAAO;AAAA,MACnB,cAAc,IAAI,OAAO;AAAA,QACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MAC1B,CAAC,EAAE,QAAQ;AAAA,IACX,CAAC;AAAA,IACC,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,MACjC,QAAQ,IAAI,OAAO;AAAA,MACnB,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAClC,CAAC,CAAC;AAAA,EACF,CAAC,CAAC;AAAA,EACA,SAAS,IAAI,OAAO;AACtB,CAAC;AAGM,IAAM,gBAAgB,IAAI,OAAO;AAAA,EACtC,UAAU,IAAI,MAAM,IAAI,OAAO;AAAA,IAC/B,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC3B,SAAS,IAAI,IAAI,EAAE,QAAQ;AAAA,EAC7B,CAAC,CAAC;AAAA,EACA,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,IACjC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC5B,CAAC,CAAC;AAAA,EACA,MAAM,IAAI,OAAO,EAAE,KAAK,EAAE,QAAQ;AAAA,EAClC,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,aAAa,IAAI,OAAO;AAAA,IACxB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC;AACD,CAAC;AAGM,IAAM,qBAAqB,IAAI,OAAO;AAAA,EAC3C,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,uBAAuB,IAAI,OAAO;AAAA,EAC7C,UAAU,IAAI,MAAM,IAAI,OAAO;AAAA,IAC/B,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC3B,SAAS,IAAI,IAAI,EAAE,QAAQ;AAAA,IAC3B,eAAe,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EACnC,CAAC,CAAC;AAAA,EACA,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,IACjC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC1B,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,IAClD,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,EACpD,CAAC,CAAC;AAAA,EACA,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,QAAQ,IAAI,MAAM,IAAI,OAAO;AAAA,IAC7B,WAAW,IAAI,OAAO,EAAE,SAAS;AAAA,IACjC,OAAO,IAAI,OAAO;AAAA,EACpB,CAAC,CAAC;AAAA,EACA,aAAa,IAAI,QAAQ;AAAA,EACzB,aAAa,IAAI,OAAO;AAAA,IACxB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO;AAAA,IACnB,cAAc,IAAI,OAAO;AAAA,MACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,EACX,CAAC;AACD,CAAC;AAGM,IAAM,wBAAwB,IAAI,OAAO;AAAA,EAC9C,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,qBAAqB,IAAI,OAAO;AAAA,EAC3C,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,mBAAmB,IAAI,OAAO;AAAA,EACzC,UAAU,IAAI,MAAM,IAAI,OAAO;AAAA,IAC/B,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC3B,SAAS,IAAI,IAAI,EAAE,QAAQ;AAAA,EAC7B,CAAC,CAAC;AAAA,EACA,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,IACjC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC5B,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAE4D,IAAM,uCAAuC;AAEnG,IAAM,kCAAkC,IAAI,OAAO;AAAA,EACxD,kBAAkB,IAAI,KAAK,CAAC,aAAa,YAAY,CAAC,EAAE,SAAS;AAAA,EACjE,aAAa,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,SAAS;AAAA,EAC5D,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,oCAAoC;AACnE,CAAC;AAEM,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,QAAQ,IAAI,OAAO;AAAA,MACnB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,aAAa,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,IACjD,WAAW,IAAI,KAAK,CAAC,OAAO,QAAQ,eAAe,QAAQ,UAAU,WAAW,kBAAkB,iBAAiB,wBAAwB,aAAa,oBAAoB,QAAQ,QAAQ,gBAAgB,gBAAgB,QAAQ,UAAU,UAAU,YAAY,mBAAmB,qBAAqB,UAAU,gCAAgC,6BAA6B,CAAC;AAAA,IACpX,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,cAAc,IAAI,OAAO,EAAE,QAAQ;AAAA,EACrC,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,yBAAyB,IAAI,OAAO;AAAA,EAC/C,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,uBAAuB,IAAI,OAAO;AAAA,EAC7C,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AACX,CAAC;AAGM,IAAM,qCAAqC,IAAI,OAAO;AAAA,EAC3D,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEgE,IAAM,2CAA2C;AAE3G,IAAM,sCAAsC,IAAI,OAAO;AAAA,EAC5D,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,wCAAwC;AACvE,CAAC;AAEM,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,SAAS,IAAI,KAAK,CAAC,+BAA+B,CAAC;AAAA,IACnD,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC7B,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC7B,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,EAC/B,CAAC,EAAE,GAAG,IAAI,OAAO;AAAA,IACf,SAAS,IAAI,KAAK,CAAC,gCAAgC,CAAC;AAAA,IACpD,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC7B,aAAa,IAAI,QAAQ,EAAE,QAAQ;AAAA,IACnC,gBAAgB,IAAI,OAAO;AAAA,MAC3B,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,MAC7B,SAAS,IAAI,OAAO,EAAE,QAAQ;AAAA,MAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC/B,CAAC;AAAA,EACD,CAAC,CAAC,EAAE,GAAG,IAAI,OAAO;AAAA,IAChB,SAAS,IAAI,KAAK,CAAC,6BAA6B,CAAC;AAAA,IACjD,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC7B,aAAa,IAAI,OAAO;AAAA,MACxB,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,MAC7B,SAAS,IAAI,OAAO,EAAE,QAAQ;AAAA,MAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC/B,CAAC;AAAA,EACD,CAAC,CAAC,CAAC;AACH,CAAC;AAGM,IAAM,0CAA0C,IAAI,OAAO;AAAA,EAChE,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEyE,IAAM,oDAAoD;AAE7H,IAAM,+CAA+C,IAAI,OAAO;AAAA,EACrE,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,iDAAiD;AAChF,CAAC;AAEM,IAAM,4CAA4C,IAAI,OAAO;AAAA,EAClE,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,2BAA2B,IAAI,OAAO;AAAA,EACjD,UAAU,IAAI,MAAM,IAAI,OAAO;AAAA,IAC/B,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC3B,SAAS,IAAI,IAAI,EAAE,QAAQ;AAAA,EAC7B,CAAC,CAAC;AAAA,EACA,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,IACjC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC5B,CAAC,CAAC;AACF,CAAC;AAG6D,IAAM,wCAAwC;AAErG,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,MAAM,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC,EAAE,SAAS;AAAA,EAC9C,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,qCAAqC;AACpE,CAAC;AAEM,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,+BAA+B,IAAI,QAAQ;AAAA,EAC3C,kCAAkC,IAAI,QAAQ;AAAA,EAC9C,sBAAsB,IAAI,MAAM,IAAI,OAAO,CAAC;AAC9C,CAAC;AAGM,IAAM,mBAAmB,IAAI,OAAO;AAAA,EACzC,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,WAAW,IAAI,MAAM,IAAI,OAAO;AAAA,IAChC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,aAAa,IAAI,OAAO;AAAA,EAC1B,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,0BAA0B,IAAI,OAAO;AAAA,EAChD,MAAM,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC,EAAE,SAAS;AAChD,CAAC;AAEM,IAAM,2BAA2B,IAAI,OAAO;AAAA,EACjD,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,IACjC,WAAW,IAAI,OAAO,EAAE,SAAS;AAAA,IACjC,OAAO,IAAI,OAAO;AAAA,EACpB,CAAC,CAAC;AACF,CAAC;AACM,IAAM,uBAAuB,IAAI,MAAM,wBAAwB;AAG/D,IAAM,wBAAwB,IAAI,OAAO;AAAA,EAC9C,UAAU,IAAI,MAAM,IAAI,OAAO;AAAA,IAC/B,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC3B,SAAS,IAAI,IAAI,EAAE,QAAQ;AAAA,EAC7B,CAAC,CAAC;AAAA,EACA,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,IACjC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC5B,CAAC,CAAC;AAAA,EACA,MAAM,IAAI,OAAO,EAAE,KAAK,EAAE,QAAQ;AAAA,EAClC,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,aAAa,IAAI,OAAO;AAAA,IACxB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC;AACD,CAAC;AAGM,IAAM,kCAAkC,IAAI,OAAO;AAAA,EACxD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,6CAA6C,IAAI,OAAO;AAAA,EACnE,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,+CAA+C,IAAI,OAAO;AAAA,EACrE,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,sCAAsC,IAAI,OAAO;AAAA,EAC5D,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,oCAAoC,IAAI,OAAO;AAAA,EAC1D,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AACX,CAAC;AAGkE,IAAM,6CAA6C;AAE/G,IAAM,wCAAwC,IAAI,OAAO;AAAA,EAC9D,YAAY,IAAI,OAAO,EAAE,KAAK,EAAE,SAAS;AAAA,EACzC,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,0CAA0C;AACzE,CAAC;AAEM,IAAM,qCAAqC,IAAI,OAAO;AAAA,EAC3D,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,IAClD,eAAe,IAAI,QAAQ;AAAA,IAC3B,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,aAAa,IAAI,OAAO;AAAA,MACxB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MACxB,QAAQ,IAAI,OAAO;AAAA,MACnB,cAAc,IAAI,OAAO;AAAA,QACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MAC1B,CAAC,EAAE,QAAQ;AAAA,IACX,CAAC;AAAA,IACC,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,MACjC,QAAQ,IAAI,OAAO;AAAA,MACnB,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAClC,CAAC,CAAC;AAAA,EACF,CAAC,CAAC;AACF,CAAC;AAG8D,IAAM,yCAAyC;AAEvG,IAAM,oCAAoC,IAAI,OAAO;AAAA,EAC1D,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,sCAAsC;AACrE,CAAC;AAEM,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,IAClD,eAAe,IAAI,QAAQ;AAAA,IAC3B,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,aAAa,IAAI,OAAO;AAAA,MACxB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MACxB,QAAQ,IAAI,OAAO;AAAA,MACnB,cAAc,IAAI,OAAO;AAAA,QACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MAC1B,CAAC,EAAE,QAAQ;AAAA,IACX,CAAC;AAAA,IACC,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,MACjC,QAAQ,IAAI,OAAO;AAAA,MACnB,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAClC,CAAC,CAAC;AAAA,EACF,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,gBAAgB,IAAI,OAAO,EAAE,KAAK,EAAE,SAAS;AAC/C,CAAC;AAEM,IAAM,oCAAoC,IAAI,OAAO;AAAA,EAC1D,eAAe,IAAI,QAAQ;AAAA,EAC3B,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,YAAY,IAAI,QAAQ;AAAA,EACxB,aAAa,IAAI,QAAQ;AAAA,EACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,EAClD,aAAa,IAAI,OAAO;AAAA,IACxB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO;AAAA,IACnB,cAAc,IAAI,OAAO;AAAA,MACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,EACX,CAAC;AAAA,EACC,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,IACjC,QAAQ,IAAI,OAAO;AAAA,IACnB,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,EAClC,CAAC,CAAC;AACF,CAAC;AACM,IAAM,gCAAgC,IAAI,MAAM,iCAAiC;AAG3B,IAAM,uCAAuC;AAEnG,IAAM,kCAAkC,IAAI,OAAO;AAAA,EACxD,YAAY,IAAI,OAAO,EAAE,KAAK,EAAE,SAAS;AAAA,EACzC,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,oCAAoC;AAAA,EACjE,cAAc,IAAI,OAAO,EAAE,KAAK,EAAE,SAAS;AAC7C,CAAC;AAEM,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,eAAe,IAAI,QAAQ;AAAA,IAC3B,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,YAAY,IAAI,QAAQ;AAAA,IACxB,aAAa,IAAI,QAAQ;AAAA,IACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,IAClD,aAAa,IAAI,OAAO;AAAA,MACxB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MACxB,QAAQ,IAAI,OAAO;AAAA,MACnB,cAAc,IAAI,OAAO;AAAA,QACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MAC1B,CAAC,EAAE,QAAQ;AAAA,IACX,CAAC;AAAA,IACC,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,MACjC,QAAQ,IAAI,OAAO;AAAA,MACnB,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAClC,CAAC,CAAC;AAAA,EACF,CAAC,CAAC;AACF,CAAC;AAGwD,IAAM,mCAAmC;AAE3F,IAAM,8BAA8B,IAAI,OAAO;AAAA,EACpD,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,gCAAgC;AAAA,EAC7D,cAAc,IAAI,OAAO,EAAE,KAAK,EAAE,SAAS;AAC7C,CAAC;AAEM,IAAM,2BAA2B,IAAI,OAAO;AAAA,EACjD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,eAAe,IAAI,QAAQ;AAAA,IAC3B,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,YAAY,IAAI,QAAQ;AAAA,IACxB,aAAa,IAAI,QAAQ;AAAA,IACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,IAClD,aAAa,IAAI,OAAO;AAAA,MACxB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MACxB,QAAQ,IAAI,OAAO;AAAA,MACnB,cAAc,IAAI,OAAO;AAAA,QACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MAC1B,CAAC,EAAE,QAAQ;AAAA,IACX,CAAC;AAAA,IACC,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,MACjC,QAAQ,IAAI,OAAO;AAAA,MACnB,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAClC,CAAC,CAAC;AAAA,EACF,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,MAAM,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC,EAAE,SAAS;AAChD,CAAC;AAEM,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,QAAQ,IAAI,OAAO;AACrB,CAAC;AACM,IAAM,6BAA6B,IAAI,MAAM,8BAA8B;AAG3B,IAAM,iCAAiC;AAEvF,IAAM,4BAA4B,IAAI,OAAO;AAAA,EAClD,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,8BAA8B;AAC7D,CAAC;AAEM,IAAM,yBAAyB,IAAI,OAAO;AAAA,EAC/C,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,QAAQ,IAAI,OAAO;AAAA,IACnB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,sBAAsB,IAAI,OAAO;AAAA,EAC5C,QAAQ,IAAI,OAAO;AAAA,EACnB,MAAM,IAAI,OAAO,EAAE,KAAK,EAAE,QAAQ;AACpC,CAAC;AAGM,IAAM,2BAA2B,IAAI,OAAO;AAAA,EACjD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,QAAQ,IAAI,OAAO;AAAA,EACnB,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,8BAA8B,IAAI,OAAO;AAAA,EACpD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,2BAA2B,IAAI,OAAO;AAAA,EACjD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,yBAAyB,IAAI,OAAO;AAAA,EAC/C,QAAQ,IAAI,OAAO;AACrB,CAAC;AAG8D,IAAM,yCAAyC;AAEvG,IAAM,oCAAoC,IAAI,OAAO;AAAA,EAC1D,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,sCAAsC;AACrE,CAAC;AAEM,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,eAAe,IAAI,QAAQ;AAAA,IAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,QAAQ,IAAI,OAAO;AAAA,EACrB,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,MAAM,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC,EAAE,SAAS;AAChD,CAAC;AAEM,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,QAAQ,IAAI,OAAO;AAAA,EACnB,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAC/B,CAAC;AACM,IAAM,4BAA4B,IAAI,MAAM,6BAA6B;AAGhB,IAAM,0CAA0C;AAEzG,IAAM,qCAAqC,IAAI,OAAO;AAAA,EAC3D,SAAS,IAAI,OAAO,EAAE,SAAS;AAAA,EAC/B,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,uCAAuC;AACtE,CAAC;AAEM,IAAM,kCAAkC,IAAI,OAAO;AAAA,EACxD,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO;AAAA,IACnB,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,EAC/B,CAAC,CAAC;AAAA,EACA,SAAS,IAAI,OAAO;AACtB,CAAC;AAGM,IAAM,qBAAqB,IAAI,OAAO;AAAA,EAC3C,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC3B,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,EACpC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,iBAAiB,IAAI,QAAQ;AAAA,EAC7B,mBAAmB,IAAI,QAAQ;AAAA,EAC/B,mBAAmB,IAAI,QAAQ;AAAA,EAC/B,cAAc,IAAI,OAAO;AAAA,IACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,aAAa,IAAI,QAAQ;AAAA,EACzB,cAAc,IAAI,MAAM,IAAI,OAAO;AAAA,IACnC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,aAAa,IAAI,OAAO;AAAA,MACxB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,aAAa,IAAI,OAAO;AAAA,IACxB,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC3B,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC1B,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,IACpC,YAAY,IAAI,OAAO;AAAA,MACvB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,mBAAmB,IAAI,QAAQ;AAAA,IAC/B,mBAAmB,IAAI,QAAQ;AAAA,IAC/B,cAAc,IAAI,OAAO;AAAA,MACzB,aAAa,IAAI,QAAQ;AAAA,MACzB,oBAAoB,IAAI,OAAO,EAAE,QAAQ;AAAA,MACzC,SAAS,IAAI,OAAO,EAAE,QAAQ;AAAA,MAC9B,gBAAgB,IAAI,OAAO,EAAE,QAAQ;AAAA,IACvC,CAAC;AAAA,IACC,cAAc,IAAI,OAAO;AAAA,MACzB,cAAc,IAAI,QAAQ;AAAA,IAC5B,CAAC;AAAA,IACC,eAAe,IAAI,QAAQ;AAAA,IAC3B,cAAc,IAAI,OAAO;AAAA,MACzB,iBAAiB,IAAI,QAAQ;AAAA,MAC7B,iBAAiB,IAAI,QAAQ;AAAA,IAC/B,CAAC;AAAA,EACD,CAAC,CAAC;AAAA,EACA,cAAc,IAAI,MAAM,IAAI,OAAO;AAAA,IACnC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC7B,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC1B,aAAa,IAAI,OAAO;AAAA,EAC1B,CAAC,CAAC;AAAA,EACA,MAAM,IAAI,OAAO,EAAE,KAAK,EAAE,QAAQ;AAAA,EAClC,gBAAgB,IAAI,MAAM,IAAI,OAAO;AAAA,IACrC,cAAc,IAAI,OAAO;AAAA,MACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,mBAAmB,IAAI,KAAK,CAAC,eAAe,aAAa,CAAC;AAAA,EAC5D,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,0BAA0B,IAAI,OAAO;AAAA,EAChD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,4BAA4B,IAAI,OAAO;AAAA,EAClD,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC3B,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,EACpC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,iBAAiB,IAAI,QAAQ;AAAA,EAC7B,mBAAmB,IAAI,QAAQ;AAAA,EAC/B,mBAAmB,IAAI,QAAQ;AAAA,EAC/B,cAAc,IAAI,OAAO;AAAA,IACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,aAAa,IAAI,QAAQ;AAAA,EACzB,cAAc,IAAI,MAAM,IAAI,OAAO;AAAA,IACnC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,aAAa,IAAI,OAAO;AAAA,MACxB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,aAAa,IAAI,OAAO;AAAA,IACxB,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC3B,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC1B,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,IACpC,YAAY,IAAI,OAAO;AAAA,MACvB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,mBAAmB,IAAI,QAAQ;AAAA,IAC/B,mBAAmB,IAAI,QAAQ;AAAA,IAC/B,cAAc,IAAI,OAAO;AAAA,MACzB,aAAa,IAAI,QAAQ;AAAA,MACzB,oBAAoB,IAAI,OAAO,EAAE,QAAQ;AAAA,MACzC,SAAS,IAAI,OAAO,EAAE,QAAQ;AAAA,MAC9B,gBAAgB,IAAI,OAAO,EAAE,QAAQ;AAAA,IACvC,CAAC;AAAA,IACC,cAAc,IAAI,OAAO;AAAA,MACzB,cAAc,IAAI,QAAQ;AAAA,IAC5B,CAAC;AAAA,IACC,eAAe,IAAI,QAAQ;AAAA,IAC3B,cAAc,IAAI,OAAO;AAAA,MACzB,iBAAiB,IAAI,QAAQ;AAAA,MAC7B,iBAAiB,IAAI,QAAQ;AAAA,IAC/B,CAAC;AAAA,EACD,CAAC,CAAC;AAAA,EACA,cAAc,IAAI,MAAM,IAAI,OAAO;AAAA,IACnC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC7B,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC1B,aAAa,IAAI,OAAO;AAAA,EAC1B,CAAC,CAAC;AAAA,EACA,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,gBAAgB,IAAI,MAAM,IAAI,OAAO;AAAA,IACrC,cAAc,IAAI,OAAO;AAAA,MACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,mBAAmB,IAAI,KAAK,CAAC,eAAe,aAAa,CAAC;AAAA,EAC5D,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,0BAA0B,IAAI,OAAO;AAAA,EAChD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,wBAAwB,IAAI,OAAO;AAAA,EAC9C,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC3B,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,EACpC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,iBAAiB,IAAI,QAAQ;AAAA,EAC7B,mBAAmB,IAAI,QAAQ;AAAA,EAC/B,mBAAmB,IAAI,QAAQ;AAAA,EAC/B,cAAc,IAAI,OAAO;AAAA,IACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,aAAa,IAAI,QAAQ;AAAA,EACzB,cAAc,IAAI,MAAM,IAAI,OAAO;AAAA,IACnC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,aAAa,IAAI,OAAO;AAAA,MACxB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,aAAa,IAAI,OAAO;AAAA,IACxB,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC3B,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC1B,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,IACpC,YAAY,IAAI,OAAO;AAAA,MACvB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,mBAAmB,IAAI,QAAQ;AAAA,IAC/B,mBAAmB,IAAI,QAAQ;AAAA,IAC/B,cAAc,IAAI,OAAO;AAAA,MACzB,aAAa,IAAI,QAAQ;AAAA,MACzB,oBAAoB,IAAI,OAAO,EAAE,QAAQ;AAAA,MACzC,SAAS,IAAI,OAAO,EAAE,QAAQ;AAAA,MAC9B,gBAAgB,IAAI,OAAO,EAAE,QAAQ;AAAA,IACvC,CAAC;AAAA,IACC,cAAc,IAAI,OAAO;AAAA,MACzB,cAAc,IAAI,QAAQ;AAAA,IAC5B,CAAC;AAAA,IACC,eAAe,IAAI,QAAQ;AAAA,IAC3B,cAAc,IAAI,OAAO;AAAA,MACzB,iBAAiB,IAAI,QAAQ;AAAA,MAC7B,iBAAiB,IAAI,QAAQ;AAAA,IAC/B,CAAC;AAAA,EACD,CAAC,CAAC;AAAA,EACA,cAAc,IAAI,MAAM,IAAI,OAAO;AAAA,IACnC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC7B,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC1B,aAAa,IAAI,OAAO;AAAA,EAC1B,CAAC,CAAC;AAAA,EACA,gBAAgB,IAAI,MAAM,IAAI,OAAO;AAAA,IACrC,cAAc,IAAI,OAAO;AAAA,MACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,mBAAmB,IAAI,KAAK,CAAC,eAAe,aAAa,CAAC;AAAA,EAC5D,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,+CAA+C,IAAI,OAAO;AAAA,EACrE,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,qDAAqD,IAAI,OAAO;AAAA,EAC3E,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,QAAQ,IAAI,OAAO;AAAA,EACnB,QAAQ,IAAI,OAAO;AACrB,CAAC;AACM,IAAM,iDAAiD,IAAI,MAAM,kDAAkD;AAGnH,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,0CAA0C,IAAI,OAAO;AAAA,EAChE,MAAM,IAAI,OAAO,EAAE,KAAK,EAAE,QAAQ;AAAA,EAClC,0BAA0B,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EAChD,uBAAuB,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC;AACtD,CAAC;AAEM,IAAM,kDAAkD,IAAI,OAAO;AAAA,EACxE,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,QAAQ,IAAI,OAAO;AAAA,EACnB,QAAQ,IAAI,OAAO;AAAA,EACnB,cAAc,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACpC,gBAAgB,IAAI,QAAQ;AAC9B,CAAC;AACM,IAAM,8CAA8C,IAAI,MAAM,+CAA+C;AAG7G,IAAM,qCAAqC,IAAI,OAAO;AAAA,EAC3D,sBAAsB,IAAI,MAAM,IAAI,OAAO,CAAC;AAC9C,CAAC;AAG6D,IAAM,wCAAwC;AAErG,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,qCAAqC;AACpE,CAAC;AAEM,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,eAAe,IAAI,QAAQ;AAAA,IAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,QAAQ,IAAI,OAAO;AAAA,IACnB,QAAQ,IAAI,OAAO;AAAA,EACrB,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,qCAAqC;AAAmE,IAAM,kCAAkC;AAEtJ,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,gBAAgB,IAAI,OAAO,EAAE,KAAK,EAAE,SAAS;AAAA,EAC7C,mBAAmB,IAAI,OAAO,EAAE,SAAS;AAAA,EACzC,cAAc,IAAI,QAAQ,EAAE,SAAS;AAAA,EACrC,eAAe,IAAI,QAAQ,EAAE,SAAS;AAAA,EACtC,WAAW,IAAI,OAAO,EAAE,QAAQ,kCAAkC;AAAA,EAClE,kBAAkB,IAAI,KAAK,CAAC,aAAa,YAAY,CAAC,EAAE,SAAS;AAAA,EACjE,UAAU,IAAI,OAAO,EAAE,SAAS;AAAA,EAChC,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,+BAA+B;AAC9D,CAAC;AAEM,IAAM,0BAA0B,IAAI,OAAO;AAAA,EAChD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,UAAU,IAAI,MAAM,IAAI,OAAO;AAAA,MAC/B,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,MAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,MAChC,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,MAC3B,SAAS,IAAI,IAAI,EAAE,QAAQ;AAAA,MAC3B,eAAe,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IACnC,CAAC,CAAC;AAAA,IACA,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,MACjC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,MAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,MAChC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,MAC1B,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,MAClD,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,IACpD,CAAC,CAAC;AAAA,IACA,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,SAAS,IAAI,OAAO;AAAA,IACpB,YAAY,IAAI,OAAO;AAAA,IACvB,cAAc,IAAI,OAAO;AAAA,MACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MACxB,QAAQ,IAAI,OAAO;AAAA,MACnB,cAAc,IAAI,OAAO;AAAA,QACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MAC1B,CAAC,EAAE,QAAQ;AAAA,IACX,CAAC;AAAA,IACC,cAAc,IAAI,QAAQ;AAAA,IAC1B,eAAe,IAAI,QAAQ;AAAA,IAC3B,sBAAsB,IAAI,QAAQ;AAAA,IAClC,0BAA0B,IAAI,OAAO;AAAA,IACrC,iBAAiB,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,QAAQ;AAAA,IAC/D,mBAAmB,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,QAAQ;AAAA,IACjE,0BAA0B,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,QAAQ;AAAA,IACxE,UAAU,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC;AAAA,IACvC,QAAQ,IAAI,KAAK,CAAC,WAAW,KAAK,CAAC;AAAA,EACrC,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,2BAA2B,IAAI,OAAO;AAAA,EACjD,MAAM,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC,EAAE,SAAS;AAChD,CAAC;AAEM,IAAM,4BAA4B,IAAI,OAAO;AAAA,EAClD,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,cAAc,IAAI,OAAO;AAAA,IACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO;AAAA,IACnB,cAAc,IAAI,OAAO;AAAA,MACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,EACX,CAAC;AAAA,EACC,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,IACjC,QAAQ,IAAI,OAAO;AAAA,IACnB,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,EAClC,CAAC,CAAC;AAAA,EACA,QAAQ,IAAI,KAAK,CAAC,WAAW,KAAK,CAAC;AACrC,CAAC;AACM,IAAM,wBAAwB,IAAI,MAAM,yBAAyB;AAGZ,IAAM,sCAAsC;AAEjG,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,SAAS,IAAI,OAAO,EAAE,SAAS;AAAA,EAC/B,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,mCAAmC;AAAA,EAChE,sBAAsB,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC,EAAE,SAAS;AAChE,CAAC;AAEM,IAAM,8BAA8B,IAAI,OAAO;AAAA,EACpD,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,cAAc,IAAI,OAAO;AAAA,MACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MACxB,QAAQ,IAAI,OAAO;AAAA,MACnB,cAAc,IAAI,OAAO;AAAA,QACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MAC1B,CAAC,EAAE,QAAQ;AAAA,IACX,CAAC;AAAA,IACC,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,MACjC,QAAQ,IAAI,OAAO;AAAA,MACnB,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAClC,CAAC,CAAC;AAAA,IACA,QAAQ,IAAI,KAAK,CAAC,WAAW,KAAK,CAAC;AAAA,EACrC,CAAC,CAAC;AAAA,EACA,SAAS,IAAI,OAAO;AACtB,CAAC;AAGM,IAAM,iBAAiB,IAAI,OAAO;AAAA,EACvC,UAAU,IAAI,MAAM,IAAI,OAAO;AAAA,IAC/B,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC3B,SAAS,IAAI,IAAI,EAAE,QAAQ;AAAA,EAC7B,CAAC,CAAC;AAAA,EACA,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,IACjC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC5B,CAAC,CAAC;AAAA,EACA,MAAM,IAAI,OAAO,EAAE,KAAK,EAAE,QAAQ;AAAA,EAClC,SAAS,IAAI,OAAO;AAAA,EACpB,YAAY,IAAI,OAAO;AAAA,EACvB,YAAY,IAAI,OAAO;AAAA,EACvB,cAAc,IAAI,OAAO;AAAA,IACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC;AAAA,EACC,UAAU,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC,EAAE,QAAQ;AAAA,EACjD,cAAc,IAAI,QAAQ;AAC5B,CAAC;AAGM,IAAM,sBAAsB,IAAI,OAAO;AAAA,EAC5C,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,wBAAwB,IAAI,OAAO;AAAA,EAC9C,UAAU,IAAI,MAAM,IAAI,OAAO;AAAA,IAC/B,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC3B,SAAS,IAAI,IAAI,EAAE,QAAQ;AAAA,IAC3B,eAAe,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EACnC,CAAC,CAAC;AAAA,EACA,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,IACjC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC1B,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,IAClD,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,EACpD,CAAC,CAAC;AAAA,EACA,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,SAAS,IAAI,OAAO;AAAA,EACpB,YAAY,IAAI,OAAO;AAAA,EACvB,cAAc,IAAI,OAAO;AAAA,IACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO;AAAA,IACnB,cAAc,IAAI,OAAO;AAAA,MACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,EACX,CAAC;AAAA,EACC,cAAc,IAAI,QAAQ;AAAA,EAC1B,eAAe,IAAI,QAAQ;AAAA,EAC3B,sBAAsB,IAAI,QAAQ;AAAA,EAClC,0BAA0B,IAAI,OAAO;AAAA,EACrC,iBAAiB,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,QAAQ;AAAA,EAC/D,mBAAmB,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,QAAQ;AAAA,EACjE,0BAA0B,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,QAAQ;AAAA,EACxE,UAAU,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC;AAAA,EACvC,QAAQ,IAAI,KAAK,CAAC,WAAW,KAAK,CAAC;AACrC,CAAC;AAGM,IAAM,yBAAyB,IAAI,OAAO;AAAA,EAC/C,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,sBAAsB,IAAI,OAAO;AAAA,EAC5C,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,oBAAoB,IAAI,OAAO;AAAA,EAC1C,UAAU,IAAI,MAAM,IAAI,OAAO;AAAA,IAC/B,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC3B,SAAS,IAAI,IAAI,EAAE,QAAQ;AAAA,EAC7B,CAAC,CAAC;AAAA,EACA,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,IACjC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC5B,CAAC,CAAC;AAAA,EACA,SAAS,IAAI,OAAO;AAAA,EACpB,YAAY,IAAI,OAAO;AAAA,EACvB,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,EACpC,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,EACpC,UAAU,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC,EAAE,QAAQ;AAAA,EACjD,cAAc,IAAI,QAAQ;AAAA,EAC1B,eAAe,IAAI,QAAQ;AAAA,EAC3B,sBAAsB,IAAI,QAAQ;AACpC,CAAC;AAGM,IAAM,8BAA8B,IAAI,OAAO;AAAA,EACpD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,4BAA4B,IAAI,OAAO;AAAA,EAClD,UAAU,IAAI,MAAM,IAAI,OAAO;AAAA,IAC/B,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC3B,SAAS,IAAI,IAAI,EAAE,QAAQ;AAAA,EAC7B,CAAC,CAAC;AAAA,EACA,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,IACjC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC5B,CAAC,CAAC;AAAA,EACA,SAAS,IAAI,OAAO;AAAA,EACpB,YAAY,IAAI,OAAO;AAAA,EACvB,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,EACpC,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,EACpC,UAAU,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC,EAAE,QAAQ;AAAA,EACjD,cAAc,IAAI,QAAQ;AAAA,EAC1B,eAAe,IAAI,QAAQ;AAAA,EAC3B,sBAAsB,IAAI,QAAQ;AACpC,CAAC;AAGM,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,sBAAsB,IAAI,MAAM,IAAI,OAAO,CAAC;AAC9C,CAAC;AAGM,IAAM,yBAAyB,IAAI,OAAO;AAAA,EAC/C,UAAU,IAAI,MAAM,IAAI,OAAO;AAAA,IAC/B,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC3B,SAAS,IAAI,IAAI,EAAE,QAAQ;AAAA,EAC7B,CAAC,CAAC;AAAA,EACA,YAAY,IAAI,MAAM,IAAI,OAAO;AAAA,IACjC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,IAChC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC5B,CAAC,CAAC;AAAA,EACA,MAAM,IAAI,OAAO,EAAE,KAAK,EAAE,QAAQ;AAAA,EAClC,SAAS,IAAI,OAAO;AAAA,EACpB,YAAY,IAAI,OAAO;AAAA,EACvB,YAAY,IAAI,OAAO;AAAA,EACvB,cAAc,IAAI,OAAO;AAAA,IACzB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC;AAAA,EACC,UAAU,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC,EAAE,QAAQ;AAAA,EACjD,cAAc,IAAI,QAAQ;AAC5B,CAAC;AAGM,IAAM,oCAAoC,IAAI,OAAO;AAAA,EAC1D,QAAQ,IAAI,KAAK,CAAC,WAAW,gBAAgB,oBAAoB,gBAAgB,CAAC;AAAA,EAClF,eAAe,IAAI,QAAQ;AAAA,EAC3B,mBAAmB,IAAI,QAAQ;AAAA,EAC/B,aAAa,IAAI,OAAO,EAAE,QAAQ;AAAA,EAClC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,EAChC,mBAAmB,IAAI,OAAO,EAAE,QAAQ;AAAA,EACxC,2BAA2B,IAAI,QAAQ;AACzC,CAAC;AAGM,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,UAAU,IAAI,KAAK,CAAC,aAAa,WAAW,SAAS,CAAC;AACxD,CAAC;AAGsD,IAAM,iCAAiC;AAEvF,IAAM,4BAA4B,IAAI,OAAO;AAAA,EAClD,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,8BAA8B;AAC7D,CAAC;AAEM,IAAM,yBAAyB,IAAI,OAAO;AAAA,EAC/C,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC7B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,4BAA4B,IAAI,OAAO;AAAA,EAClD,OAAO,IAAI,OAAO,EAAE,IAAI,EAAE,SAAS;AAAA,EACnC,YAAY,IAAI,OAAO,EAAE,SAAS;AAAA,EAClC,aAAa,IAAI,OAAO,EAAE,SAAS;AACrC,CAAC;AAEM,IAAM,yBAAyB,IAAI,OAAO;AAAA,EAC/C,UAAU,IAAI,OAAO;AACvB,CAAC;AAGM,IAAM,sCAAsC,IAAI,OAAO;AAAA,EAC5D,QAAQ,IAAI,OAAO;AACrB,CAAC;AAGM,IAAM,kCAAkC,IAAI,OAAO;AAAA,EACxD,kBAAkB,IAAI,OAAO;AAC/B,CAAC;AAGyD,IAAM,oCAAoC;AAE7F,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,iCAAiC;AAChE,CAAC;AAEM,IAAM,4BAA4B,IAAI,OAAO;AAAA,EAClD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,QAAQ,IAAI,OAAO;AAAA,IACnB,iBAAiB,IAAI,OAAO,EAAE,QAAQ;AAAA,IACtC,yBAAyB,IAAI,QAAQ;AAAA,IACrC,YAAY,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC;AAAA,IACzC,uBAAuB,IAAI,QAAQ;AAAA,IACnC,iBAAiB,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,IACvC,cAAc,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,IACpC,aAAa,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,IACnC,aAAa,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,IACnC,gBAAgB,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,IACtC,eAAe,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,IACrC,WAAW,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,IACjC,aAAa,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,IACnC,mBAAmB,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,IACzC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,eAAe,IAAI,OAAO;AAAA,EAC5B,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,yBAAyB,IAAI,OAAO;AAAA,EAC/C,QAAQ,IAAI,OAAO;AAAA,EACnB,iBAAiB,IAAI,OAAO,EAAE,QAAQ;AAAA,EACtC,yBAAyB,IAAI,QAAQ;AAAA,EACrC,YAAY,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC;AAAA,EACzC,uBAAuB,IAAI,QAAQ;AAAA,EACnC,iBAAiB,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACvC,cAAc,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACpC,aAAa,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACnC,aAAa,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACnC,gBAAgB,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACtC,eAAe,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACrC,WAAW,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACjC,aAAa,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACnC,mBAAmB,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACzC,MAAM,IAAI,OAAO,EAAE,KAAK,EAAE,QAAQ;AACpC,CAAC;AAGM,IAAM,8BAA8B,IAAI,OAAO;AAAA,EACpD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,QAAQ,IAAI,OAAO;AAAA,EACnB,iBAAiB,IAAI,OAAO,EAAE,QAAQ;AAAA,EACtC,yBAAyB,IAAI,QAAQ;AAAA,EACrC,YAAY,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC;AAAA,EACzC,uBAAuB,IAAI,QAAQ;AAAA,EACnC,iBAAiB,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACvC,cAAc,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACpC,aAAa,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACnC,aAAa,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACnC,gBAAgB,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACtC,eAAe,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACrC,WAAW,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACjC,aAAa,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACnC,mBAAmB,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACzC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,eAAe,IAAI,OAAO;AAC5B,CAAC;AAGM,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,8BAA8B,IAAI,OAAO;AAAA,EACpD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,4BAA4B,IAAI,OAAO;AAAA,EAClD,QAAQ,IAAI,OAAO;AAAA,EACnB,iBAAiB,IAAI,OAAO,EAAE,QAAQ;AAAA,EACtC,yBAAyB,IAAI,QAAQ;AAAA,EACrC,YAAY,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC;AAAA,EACzC,uBAAuB,IAAI,QAAQ;AAAA,EACnC,iBAAiB,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACvC,cAAc,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACpC,aAAa,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACnC,aAAa,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACnC,gBAAgB,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACtC,eAAe,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACrC,WAAW,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACjC,aAAa,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACnC,mBAAmB,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACzC,eAAe,IAAI,OAAO;AAC5B,CAAC;AAGM,IAAM,sCAAsC,IAAI,OAAO;AAAA,EAC5D,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,wCAAwC,IAAI,WAAW,QAAQ;AAGV,IAAM,4CAA4C;AAE7G,IAAM,uCAAuC,IAAI,OAAO;AAAA,EAC7D,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,yCAAyC;AACxE,CAAC;AAEM,IAAM,oCAAoC,IAAI,OAAO;AAAA,EAC1D,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,eAAe,IAAI,OAAO;AAAA,IAC1B,wBAAwB,IAAI,QAAQ;AAAA,EACtC,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,QAAQ,IAAI,MAAM,IAAI,OAAO,CAAC,EAAE,SAAS;AAC3C,CAAC;AAEM,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,QAAQ,IAAI,OAAO;AAAA,EACnB,QAAQ,IAAI,OAAO;AAAA,EACnB,UAAU,IAAI,OAAO;AAAA,IACrB,QAAQ,IAAI,OAAO;AAAA,EACrB,CAAC,EAAE,QAAQ;AAAA,EACT,YAAY,IAAI,QAAQ;AAC1B,CAAC;AACM,IAAM,6BAA6B,IAAI,MAAM,8BAA8B;AAG3E,IAAM,sBAAsB,IAAI,OAAO;AAAA,EAC5C,QAAQ,IAAI,OAAO;AAAA,EACnB,UAAU,IAAI,OAAO;AAAA,IACrB,QAAQ,IAAI,OAAO;AAAA,EACrB,CAAC,EAAE,QAAQ;AAAA,EACT,WAAW,IAAI,OAAO;AACxB,CAAC;AAGM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,QAAQ,IAAI,OAAO;AACrB,CAAC;AAEM,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,QAAQ,IAAI,OAAO;AAAA,EACnB,QAAQ,IAAI,OAAO;AAAA,EACnB,UAAU,IAAI,OAAO;AAAA,IACrB,QAAQ,IAAI,OAAO;AAAA,EACrB,CAAC,EAAE,QAAQ;AAAA,EACT,WAAW,IAAI,OAAO;AACxB,CAAC;AAGM,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,QAAQ,IAAI,OAAO;AACrB,CAAC;AAGM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,QAAQ,IAAI,OAAO;AACrB,CAAC;AAEM,IAAM,2BAA2B,IAAI,OAAO;AAAA,EACjD,WAAW,IAAI,OAAO;AACxB,CAAC;AAGM,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,QAAQ,IAAI,OAAO;AACrB,CAAC;AAEM,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,QAAQ,IAAI,OAAO;AACrB,CAAC;AAGM,IAAM,4BAA4B,IAAI,OAAO;AAAA,EAClD,QAAQ,IAAI,OAAO;AAAA,EACnB,UAAU,IAAI,OAAO;AAAA,IACrB,QAAQ,IAAI,OAAO;AAAA,EACrB,CAAC,EAAE,QAAQ;AACX,CAAC;AAGM,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,QAAQ,IAAI,OAAO;AACrB,CAAC;AAEM,IAAM,qCAAqC,IAAI,OAAO;AAAA,EAC3D,QAAQ,IAAI,OAAO;AAAA,EACnB,QAAQ,IAAI,OAAO;AAAA,EACnB,UAAU,IAAI,OAAO;AAAA,IACrB,QAAQ,IAAI,OAAO;AAAA,EACrB,CAAC,EAAE,QAAQ;AACX,CAAC;AAGM,IAAM,sCAAsC,IAAI,OAAO;AAAA,EAC5D,QAAQ,IAAI,OAAO;AACrB,CAAC;AAG6D,IAAM,wCAAwC;AAErG,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,qCAAqC;AACpE,CAAC;AAEM,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,MAAM,IAAI,OAAO;AAAA,IACjB,QAAQ,IAAI,OAAO;AAAA,EACrB,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,kCAAkC,IAAI,OAAO;AAAA,EACxD,MAAM,IAAI,OAAO;AACnB,CAAC;AAEM,IAAM,oCAAoC,IAAI,OAAO;AAAA,EAC1D,MAAM,IAAI,OAAO;AAAA,EACjB,QAAQ,IAAI,OAAO;AAAA,EACnB,WAAW,IAAI,OAAO;AACxB,CAAC;AAGM,IAAM,yCAAyC,IAAI,OAAO;AAAA,EAC/D,kBAAkB,IAAI,OAAO,EAAE,SAAS;AAC1C,CAAC;AAEM,IAAM,0CAA0C,IAAI,OAAO;AAAA,EAChE,eAAe,IAAI,QAAQ;AAAA,EAC3B,QAAQ,IAAI,OAAO;AAAA,EACnB,QAAQ,IAAI,OAAO;AAAA,EACnB,UAAU,IAAI,OAAO;AAAA,IACrB,QAAQ,IAAI,OAAO;AAAA,EACrB,CAAC,EAAE,QAAQ;AAAA,EACT,YAAY,IAAI,QAAQ;AAC1B,CAAC;AACM,IAAM,sCAAsC,IAAI,MAAM,uCAAuC;AAGjC,IAAM,6CAA6C;AAE/G,IAAM,wCAAwC,IAAI,OAAO;AAAA,EAC9D,cAAc,IAAI,OAAO,EAAE,SAAS;AAAA,EACpC,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,0CAA0C;AACzE,CAAC;AAEM,IAAM,qCAAqC,IAAI,OAAO;AAAA,EAC3D,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,eAAe,IAAI,QAAQ;AAAA,IAC3B,QAAQ,IAAI,OAAO;AAAA,IACnB,QAAQ,IAAI,OAAO;AAAA,IACnB,UAAU,IAAI,OAAO;AAAA,MACrB,QAAQ,IAAI,OAAO;AAAA,IACrB,CAAC,EAAE,QAAQ;AAAA,IACT,YAAY,IAAI,QAAQ;AAAA,EAC1B,CAAC,CAAC;AACF,CAAC;AAG8D,IAAM,yCAAyC;AAEvG,IAAM,oCAAoC,IAAI,OAAO;AAAA,EAC1D,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,sCAAsC;AACrE,CAAC;AAEM,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,eAAe,IAAI,QAAQ;AAAA,IAC3B,QAAQ,IAAI,OAAO;AAAA,IACnB,QAAQ,IAAI,OAAO;AAAA,IACnB,UAAU,IAAI,OAAO;AAAA,MACrB,QAAQ,IAAI,OAAO;AAAA,IACrB,CAAC,EAAE,QAAQ;AAAA,IACT,YAAY,IAAI,QAAQ;AAAA,EAC1B,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,WAAW,IAAI,QAAQ;AACzB,CAAC;AAGM,IAAM,yBAAyB,IAAI,OAAO;AAAA,EAC/C,WAAW,IAAI,QAAQ;AACzB,CAAC;AAGM,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,iBAAiB,IAAI,OAAO,EAAE,KAAK,EAAE,SAAS;AAAA,EAC9C,iBAAiB,IAAI,OAAO,EAAE,SAAS;AACzC,CAAC;AAEM,IAAM,gCAAgC,IAAI,QAAQ;AAGK,IAAM,wCAAwC;AAErG,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,UAAU,IAAI,OAAO,EAAE,SAAS;AAAA,EAChC,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,qCAAqC;AACpE,CAAC;AAEM,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,eAAe,IAAI,OAAO;AAAA,IAC1B,kBAAkB,IAAI,OAAO;AAAA,IAC7B,WAAW,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,IAC/C,YAAY,IAAI,OAAO;AAAA,MACvB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,EAClC,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,kCAAkC,IAAI,OAAO;AAAA,EACxD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEiE,IAAM,4CAA4C;AAE7G,IAAM,uCAAuC,IAAI,OAAO;AAAA,EAC7D,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,yCAAyC;AACxE,CAAC;AAEM,IAAM,oCAAoC,IAAI,OAAO;AAAA,EAC1D,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,eAAe,IAAI,OAAO;AAAA,IAC1B,kBAAkB,IAAI,OAAO;AAAA,IAC7B,WAAW,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,IAC/C,YAAY,IAAI,OAAO;AAAA,MACvB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,EAClC,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,qCAAqC,IAAI,OAAO;AAAA,EAC3D,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,sCAAsC,IAAI,OAAO;AAAA,EAC5D,UAAU,IAAI,KAAK,CAAC,WAAW,UAAU,CAAC;AAAA,EAC1C,eAAe,IAAI,QAAQ;AAC7B,CAAC;AAGM,IAAM,0CAA0C,IAAI,OAAO;AAAA,EAChE,UAAU,IAAI,KAAK,CAAC,WAAW,UAAU,CAAC,EAAE,SAAS;AACvD,CAAC;AAGM,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,MAAM,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC,EAAE,SAAS;AAChD,CAAC;AAEM,IAAM,kCAAkC,IAAI,OAAO;AAAA,EACxD,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,QAAQ,IAAI,OAAO;AAAA,EACnB,eAAe,IAAI,QAAQ;AAC7B,CAAC;AACM,IAAM,8BAA8B,IAAI,MAAM,+BAA+B;AAG5B,IAAM,kCAAkC;AAEzF,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,+BAA+B;AAC9D,CAAC;AAEM,IAAM,0BAA0B,IAAI,OAAO;AAAA,EAChD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IAC1B,mBAAmB,IAAI,QAAQ;AAAA,IAC/B,gBAAgB,IAAI,QAAQ;AAAA,IAC5B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,SAAS,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC9B,gBAAgB,IAAI,OAAO;AAAA,MAC3B,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,MAC7B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,eAAe,IAAI,OAAO;AAAA,MAC1B,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,MAC7B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,EACX,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,4BAA4B,IAAI,OAAO;AAAA,EAClD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,8BAA8B,IAAI,OAAO;AAAA,EACpD,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,mBAAmB,IAAI,QAAQ;AAAA,EAC/B,gBAAgB,IAAI,QAAQ;AAAA,EAC5B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,SAAS,IAAI,OAAO,EAAE,QAAQ;AAAA,EAC9B,gBAAgB,IAAI,OAAO;AAAA,IAC3B,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC7B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,eAAe,IAAI,OAAO;AAAA,IAC1B,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC7B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AACX,CAAC;AAGM,IAAM,oCAAoC,IAAI,OAAO;AAAA,EAC1D,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEmE,IAAM,8CAA8C;AAEjH,IAAM,yCAAyC,IAAI,OAAO;AAAA,EAC/D,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,2CAA2C;AAC1E,CAAC;AAEM,IAAM,sCAAsC,IAAI,OAAO;AAAA,EAC5D,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,gBAAgB,IAAI,OAAO;AAAA,MAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MACxB,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC/B,CAAC;AAAA,IACC,SAAS,IAAI,OAAO;AAAA,MACpB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MACxB,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC/B,CAAC;AAAA,IACC,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,IAClD,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,EAClC,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,2BAA2B,IAAI,OAAO;AAAA,EACjD,QAAQ,IAAI,MAAM,IAAI,OAAO,CAAC,EAAE,SAAS;AAC3C,CAAC;AAEM,IAAM,4BAA4B,IAAI,OAAO;AAAA,EAClD,QAAQ,IAAI,OAAO;AAAA,EACnB,QAAQ,IAAI,OAAO;AAAA,EACnB,UAAU,IAAI,OAAO;AAAA,IACrB,QAAQ,IAAI,OAAO;AAAA,EACrB,CAAC,EAAE,QAAQ;AAAA,EACT,YAAY,IAAI,QAAQ;AAC1B,CAAC;AACM,IAAM,wBAAwB,IAAI,MAAM,yBAAyB;AAGjE,IAAM,iBAAiB,IAAI,OAAO;AAAA,EACvC,QAAQ,IAAI,OAAO;AAAA,EACnB,UAAU,IAAI,OAAO;AAAA,IACrB,QAAQ,IAAI,OAAO;AAAA,EACrB,CAAC,EAAE,QAAQ;AAAA,EACT,WAAW,IAAI,OAAO;AACxB,CAAC;AAGM,IAAM,wBAAwB,IAAI,OAAO;AAAA,EAC9C,QAAQ,IAAI,OAAO;AACrB,CAAC;AAEM,IAAM,0BAA0B,IAAI,OAAO;AAAA,EAChD,QAAQ,IAAI,OAAO;AAAA,EACnB,QAAQ,IAAI,OAAO;AAAA,EACnB,UAAU,IAAI,OAAO;AAAA,IACrB,QAAQ,IAAI,OAAO;AAAA,EACrB,CAAC,EAAE,QAAQ;AAAA,EACT,WAAW,IAAI,OAAO;AACxB,CAAC;AAGM,IAAM,2BAA2B,IAAI,OAAO;AAAA,EACjD,QAAQ,IAAI,OAAO;AACrB,CAAC;AAGM,IAAM,wBAAwB,IAAI,OAAO;AAAA,EAC9C,QAAQ,IAAI,OAAO;AACrB,CAAC;AAEM,IAAM,sBAAsB,IAAI,OAAO;AAAA,EAC5C,WAAW,IAAI,OAAO;AACxB,CAAC;AAGM,IAAM,8BAA8B,IAAI,OAAO;AAAA,EACpD,QAAQ,IAAI,OAAO;AACrB,CAAC;AAEM,IAAM,4BAA4B,IAAI,OAAO;AAAA,EAClD,QAAQ,IAAI,OAAO;AACrB,CAAC;AAGM,IAAM,uBAAuB,IAAI,OAAO;AAAA,EAC7C,QAAQ,IAAI,OAAO;AAAA,EACnB,UAAU,IAAI,OAAO;AAAA,IACrB,QAAQ,IAAI,OAAO;AAAA,EACrB,CAAC,EAAE,QAAQ;AACX,CAAC;AAGM,IAAM,8BAA8B,IAAI,OAAO;AAAA,EACpD,QAAQ,IAAI,OAAO;AACrB,CAAC;AAEM,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,QAAQ,IAAI,OAAO;AAAA,EACnB,QAAQ,IAAI,OAAO;AAAA,EACnB,UAAU,IAAI,OAAO;AAAA,IACrB,QAAQ,IAAI,OAAO;AAAA,EACrB,CAAC,EAAE,QAAQ;AACX,CAAC;AAGM,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,QAAQ,IAAI,OAAO;AACrB,CAAC;AAGM,IAAM,oCAAoC,IAAI,OAAO;AAAA,EAC1D,kBAAkB,IAAI,OAAO,EAAE,SAAS;AAC1C,CAAC;AAEM,IAAM,qCAAqC,IAAI,OAAO;AAAA,EAC3D,eAAe,IAAI,QAAQ;AAAA,EAC3B,QAAQ,IAAI,OAAO;AAAA,EACnB,QAAQ,IAAI,OAAO;AAAA,EACnB,UAAU,IAAI,OAAO;AAAA,IACrB,QAAQ,IAAI,OAAO;AAAA,EACrB,CAAC,EAAE,QAAQ;AAAA,EACT,YAAY,IAAI,QAAQ;AAC1B,CAAC;AACM,IAAM,iCAAiC,IAAI,MAAM,kCAAkC;AAG5B,IAAM,wCAAwC;AAErG,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,cAAc,IAAI,OAAO,EAAE,SAAS;AAAA,EACpC,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,qCAAqC;AACpE,CAAC;AAEM,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,eAAe,IAAI,QAAQ;AAAA,IAC3B,QAAQ,IAAI,OAAO;AAAA,IACnB,QAAQ,IAAI,OAAO;AAAA,IACnB,UAAU,IAAI,OAAO;AAAA,MACrB,QAAQ,IAAI,OAAO;AAAA,IACrB,CAAC,EAAE,QAAQ;AAAA,IACT,YAAY,IAAI,QAAQ;AAAA,EAC1B,CAAC,CAAC;AACF,CAAC;AAGyD,IAAM,oCAAoC;AAE7F,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,iCAAiC;AAChE,CAAC;AAEM,IAAM,4BAA4B,IAAI,OAAO;AAAA,EAClD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,eAAe,IAAI,QAAQ;AAAA,IAC3B,QAAQ,IAAI,OAAO;AAAA,IACnB,QAAQ,IAAI,OAAO;AAAA,IACnB,UAAU,IAAI,OAAO;AAAA,MACrB,QAAQ,IAAI,OAAO;AAAA,IACrB,CAAC,EAAE,QAAQ;AAAA,IACT,YAAY,IAAI,QAAQ;AAAA,EAC1B,CAAC,CAAC;AACF,CAAC;AAGmD,IAAM,8BAA8B;AAEjF,IAAM,yBAAyB,IAAI,OAAO;AAAA,EAC/C,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,2BAA2B;AAC1D,CAAC;AAEM,IAAM,sBAAsB,IAAI,OAAO;AAAA,EAC5C,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC5B,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,uCAAuC,IAAI,OAAO;AAAA,EAC7D,gBAAgB,IAAI,OAAO;AAC7B,CAAC;AAEsE,IAAM,iDAAiD;AAEvH,IAAM,4CAA4C,IAAI,OAAO;AAAA,EAClE,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,8CAA8C;AAC7E,CAAC;AAEM,IAAM,yCAAyC,IAAI,OAAO;AAAA,EAC/D,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,MAAM,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IACxB,SAAS,IAAI,OAAO;AAAA,IACpB,cAAc,IAAI,OAAO;AAAA,IACzB,UAAU,IAAI,MAAM,IAAI,OAAO;AAAA,MAC/B,QAAQ,IAAI,OAAO;AAAA,MACnB,UAAU,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,IAClC,CAAC,CAAC;AAAA,EACF,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,yBAAyB,IAAI,OAAO;AAAA,IACpC,yBAAyB,IAAI,OAAO;AAAA,IACpC,2BAA2B,IAAI,QAAQ;AAAA,IACvC,gBAAgB,IAAI,QAAQ;AAAA,IAC5B,oBAAoB,IAAI,QAAQ;AAAA,IAChC,oBAAoB,IAAI,QAAQ;AAAA,EAClC,CAAC;AACD,CAAC;AAGM,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAC7B,CAAC;AAGM,IAAM,sCAAsC,IAAI,OAAO;AAAA,EAC5D,QAAQ,IAAI,OAAO;AAAA,IACnB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC;AAAA,EACC,aAAa,IAAI,OAAO;AAAA,EACxB,YAAY,IAAI,OAAO,EAAE,IAAI,CAAC;AAChC,CAAC;AAGM,IAAM,uCAAuC,IAAI,OAAO;AAAA,EAC7D,QAAQ,IAAI,OAAO;AAAA,IACnB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC;AAAA,EACC,aAAa,IAAI,OAAO;AAC1B,CAAC;AAEM,IAAM,2CAA2C,IAAI,OAAO;AAAA,EACjE,yBAAyB,IAAI,OAAO;AAAA,IACpC,yBAAyB,IAAI,OAAO;AAAA,IACpC,2BAA2B,IAAI,QAAQ;AAAA,IACvC,gBAAgB,IAAI,QAAQ;AAAA,IAC5B,oBAAoB,IAAI,QAAQ;AAAA,IAChC,oBAAoB,IAAI,QAAQ;AAAA,EAClC,CAAC;AACD,CAAC;AAGkD,IAAM,6BAA6B;AAE/E,IAAM,wBAAwB,IAAI,OAAO;AAAA,EAC9C,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,0BAA0B;AACzD,CAAC;AAEM,IAAM,qBAAqB,IAAI,OAAO;AAAA,EAC3C,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,QAAQ,IAAI,OAAO;AAAA,IACnB,SAAS,IAAI,OAAO;AAAA,EACtB,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,sBAAsB,IAAI,QAAQ;AAAA,EAClC,sBAAsB,IAAI,OAAO;AAAA,EACjC,mBAAmB,IAAI,QAAQ;AACjC,CAAC;AAGM,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,WAAW,IAAI,OAAO;AAAA,EACtB,mBAAmB,IAAI,OAAO;AAAA,EAC9B,iBAAiB,IAAI,OAAO;AAAA,EAC5B,eAAe,IAAI,KAAK,CAAC,yBAAyB,eAAe,YAAY,CAAC;AAChF,CAAC;AAGM,IAAM,0BAA0B,IAAI,OAAO;AAAA,EAChD,gBAAgB,IAAI,KAAK,CAAC,WAAW,QAAQ,WAAW,WAAW,OAAO,YAAY,CAAC;AACzF,CAAC;AAGM,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,QAAQ,IAAI,OAAO;AAAA,IACnB,QAAQ,IAAI,OAAO;AAAA,EACrB,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,QAAQ,IAAI,OAAO;AAAA,EACnB,WAAW,IAAI,OAAO;AAAA,EACtB,OAAO,IAAI,OAAO;AACpB,CAAC;AAGM,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,QAAQ,IAAI,MAAM,IAAI,OAAO,CAAC,EAAE,SAAS;AAC3C,CAAC;AAEM,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,QAAQ,IAAI,OAAO;AAAA,EACnB,QAAQ,IAAI,OAAO;AAAA,EACnB,UAAU,IAAI,OAAO;AAAA,IACrB,QAAQ,IAAI,OAAO;AAAA,EACrB,CAAC,EAAE,QAAQ;AAAA,EACT,YAAY,IAAI,QAAQ;AAC1B,CAAC;AACM,IAAM,4BAA4B,IAAI,MAAM,6BAA6B;AAGzE,IAAM,wCAAwC,IAAI,OAAO;AAAA,EAC9D,kBAAkB,IAAI,OAAO,EAAE,SAAS;AAC1C,CAAC;AAEM,IAAM,yCAAyC,IAAI,OAAO;AAAA,EAC/D,eAAe,IAAI,QAAQ;AAAA,EAC3B,QAAQ,IAAI,OAAO;AAAA,EACnB,QAAQ,IAAI,OAAO;AAAA,EACnB,UAAU,IAAI,OAAO;AAAA,IACrB,QAAQ,IAAI,OAAO;AAAA,EACrB,CAAC,EAAE,QAAQ;AAAA,EACT,YAAY,IAAI,QAAQ;AAC1B,CAAC;AACM,IAAM,qCAAqC,IAAI,MAAM,sCAAsC;AAGhC,IAAM,4CAA4C;AAE7G,IAAM,uCAAuC,IAAI,OAAO;AAAA,EAC7D,cAAc,IAAI,OAAO,EAAE,SAAS;AAAA,EACpC,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,yCAAyC;AACxE,CAAC;AAEM,IAAM,oCAAoC,IAAI,OAAO;AAAA,EAC1D,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,eAAe,IAAI,QAAQ;AAAA,IAC3B,QAAQ,IAAI,OAAO;AAAA,IACnB,QAAQ,IAAI,OAAO;AAAA,IACnB,UAAU,IAAI,OAAO;AAAA,MACrB,QAAQ,IAAI,OAAO;AAAA,IACrB,CAAC,EAAE,QAAQ;AAAA,IACT,YAAY,IAAI,QAAQ;AAAA,EAC1B,CAAC,CAAC;AACF,CAAC;AAG6D,IAAM,wCAAwC;AAErG,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,qCAAqC;AACpE,CAAC;AAEM,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,eAAe,IAAI,QAAQ;AAAA,IAC3B,QAAQ,IAAI,OAAO;AAAA,IACnB,QAAQ,IAAI,OAAO;AAAA,IACnB,UAAU,IAAI,OAAO;AAAA,MACrB,QAAQ,IAAI,OAAO;AAAA,IACrB,CAAC,EAAE,QAAQ;AAAA,IACT,YAAY,IAAI,QAAQ;AAAA,EAC1B,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,QAAQ,IAAI,MAAM,IAAI,OAAO,CAAC,EAAE,SAAS;AAC3C,CAAC;AAEM,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,QAAQ,IAAI,OAAO;AAAA,EACnB,QAAQ,IAAI,OAAO;AAAA,EACnB,UAAU,IAAI,OAAO;AAAA,IACrB,QAAQ,IAAI,OAAO;AAAA,EACrB,CAAC,EAAE,QAAQ;AAAA,EACT,YAAY,IAAI,QAAQ;AAC1B,CAAC;AACM,IAAM,4BAA4B,IAAI,MAAM,6BAA6B;AAGzE,IAAM,qBAAqB,IAAI,OAAO;AAAA,EAC3C,QAAQ,IAAI,OAAO;AAAA,EACnB,UAAU,IAAI,OAAO;AAAA,IACrB,QAAQ,IAAI,OAAO;AAAA,EACrB,CAAC,EAAE,QAAQ;AAAA,EACT,WAAW,IAAI,OAAO;AACxB,CAAC;AAGM,IAAM,4BAA4B,IAAI,OAAO;AAAA,EAClD,QAAQ,IAAI,OAAO;AACrB,CAAC;AAEM,IAAM,8BAA8B,IAAI,OAAO;AAAA,EACpD,QAAQ,IAAI,OAAO;AAAA,EACnB,QAAQ,IAAI,OAAO;AAAA,EACnB,UAAU,IAAI,OAAO;AAAA,IACrB,QAAQ,IAAI,OAAO;AAAA,EACrB,CAAC,EAAE,QAAQ;AAAA,EACT,WAAW,IAAI,OAAO;AACxB,CAAC;AAGM,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,QAAQ,IAAI,OAAO;AACrB,CAAC;AAGM,IAAM,4BAA4B,IAAI,OAAO;AAAA,EAClD,QAAQ,IAAI,OAAO;AACrB,CAAC;AAEM,IAAM,0BAA0B,IAAI,OAAO;AAAA,EAChD,WAAW,IAAI,OAAO;AACxB,CAAC;AAGM,IAAM,kCAAkC,IAAI,OAAO;AAAA,EACxD,QAAQ,IAAI,OAAO;AACrB,CAAC;AAEM,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,QAAQ,IAAI,OAAO;AACrB,CAAC;AAGM,IAAM,2BAA2B,IAAI,OAAO;AAAA,EACjD,QAAQ,IAAI,OAAO;AAAA,EACnB,UAAU,IAAI,OAAO;AAAA,IACrB,QAAQ,IAAI,OAAO;AAAA,EACrB,CAAC,EAAE,QAAQ;AACX,CAAC;AAGM,IAAM,kCAAkC,IAAI,OAAO;AAAA,EACxD,QAAQ,IAAI,OAAO;AACrB,CAAC;AAEM,IAAM,oCAAoC,IAAI,OAAO;AAAA,EAC1D,QAAQ,IAAI,OAAO;AAAA,EACnB,QAAQ,IAAI,OAAO;AAAA,EACnB,UAAU,IAAI,OAAO;AAAA,IACrB,QAAQ,IAAI,OAAO;AAAA,EACrB,CAAC,EAAE,QAAQ;AACX,CAAC;AAGM,IAAM,qCAAqC,IAAI,OAAO;AAAA,EAC3D,QAAQ,IAAI,OAAO;AACrB,CAAC;AAGM,IAAM,wCAAwC,IAAI,OAAO;AAAA,EAC9D,kBAAkB,IAAI,OAAO,EAAE,SAAS;AAC1C,CAAC;AAEM,IAAM,yCAAyC,IAAI,OAAO;AAAA,EAC/D,eAAe,IAAI,QAAQ;AAAA,EAC3B,QAAQ,IAAI,OAAO;AAAA,EACnB,QAAQ,IAAI,OAAO;AAAA,EACnB,UAAU,IAAI,OAAO;AAAA,IACrB,QAAQ,IAAI,OAAO;AAAA,EACrB,CAAC,EAAE,QAAQ;AAAA,EACT,YAAY,IAAI,QAAQ;AAC1B,CAAC;AACM,IAAM,qCAAqC,IAAI,MAAM,sCAAsC;AAGhC,IAAM,4CAA4C;AAE7G,IAAM,uCAAuC,IAAI,OAAO;AAAA,EAC7D,cAAc,IAAI,OAAO,EAAE,SAAS;AAAA,EACpC,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,yCAAyC;AACxE,CAAC;AAEM,IAAM,oCAAoC,IAAI,OAAO;AAAA,EAC1D,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,eAAe,IAAI,QAAQ;AAAA,IAC3B,QAAQ,IAAI,OAAO;AAAA,IACnB,QAAQ,IAAI,OAAO;AAAA,IACnB,UAAU,IAAI,OAAO;AAAA,MACrB,QAAQ,IAAI,OAAO;AAAA,IACrB,CAAC,EAAE,QAAQ;AAAA,IACT,YAAY,IAAI,QAAQ;AAAA,EAC1B,CAAC,CAAC;AACF,CAAC;AAG6D,IAAM,wCAAwC;AAErG,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,qCAAqC;AACpE,CAAC;AAEM,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,eAAe,IAAI,QAAQ;AAAA,IAC3B,QAAQ,IAAI,OAAO;AAAA,IACnB,QAAQ,IAAI,OAAO;AAAA,IACnB,UAAU,IAAI,OAAO;AAAA,MACrB,QAAQ,IAAI,OAAO;AAAA,IACrB,CAAC,EAAE,QAAQ;AAAA,IACT,YAAY,IAAI,QAAQ;AAAA,EAC1B,CAAC,CAAC;AACF,CAAC;AAG8C,IAAM,yBAAyB;AAEvE,IAAM,oBAAoB,IAAI,OAAO;AAAA,EAC1C,SAAS,IAAI,OAAO,EAAE,SAAS;AAAA,EAC/B,YAAY,IAAI,OAAO,EAAE,SAAS;AAAA,EAClC,WAAW,IAAI,OAAO,EAAE,SAAS;AAAA,EACjC,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,sBAAsB;AACrD,CAAC;AAEM,IAAM,iBAAiB,IAAI,OAAO;AAAA,EACvC,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC7B,SAAS,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC9B,aAAa,IAAI,OAAO;AAAA,EAC1B,CAAC,CAAC;AACF,CAAC;AAGoD,IAAM,+BAA+B;AAEnF,IAAM,0BAA0B,IAAI,OAAO;AAAA,EAChD,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,4BAA4B;AAC3D,CAAC;AAEM,IAAM,uBAAuB,IAAI,OAAO;AAAA,EAC7C,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,kBAAkB,IAAI,KAAK,CAAC,WAAW,SAAS,UAAU,CAAC;AAAA,EAC7D,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,4BAA4B,IAAI,OAAO;AAAA,EAClD,kBAAkB,IAAI,KAAK,CAAC,WAAW,SAAS,UAAU,CAAC;AAC7D,CAAC;AAGM,IAAM,yBAAyB,IAAI,OAAO;AAAA,EAC/C,kBAAkB,IAAI,KAAK,CAAC,WAAW,SAAS,UAAU,CAAC;AAC7D,CAAC;AAGM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,MAAM,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC,EAAE,SAAS;AAChD,CAAC;AAEM,IAAM,8BAA8B,IAAI,OAAO;AAAA,EACpD,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,QAAQ,IAAI,OAAO;AAAA,EACnB,SAAS,IAAI,OAAO;AACtB,CAAC;AACM,IAAM,0BAA0B,IAAI,MAAM,2BAA2B;AAGd,IAAM,wCAAwC;AAErG,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,SAAS,IAAI,OAAO,EAAE,SAAS;AAAA,EAC/B,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,qCAAqC;AACpE,CAAC;AAEM,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,QAAQ,IAAI,OAAO;AAAA,IACnB,SAAS,IAAI,OAAO;AAAA,EACtB,CAAC,CAAC;AAAA,EACA,SAAS,IAAI,OAAO;AACtB,CAAC;AAGM,IAAM,mBAAmB,IAAI,OAAO;AAAA,EACzC,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC3B,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,EAChC,MAAM,IAAI,OAAO,EAAE,KAAK,EAAE,QAAQ;AACpC,CAAC;AAGM,IAAM,wBAAwB,IAAI,OAAO;AAAA,EAC9C,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,0BAA0B,IAAI,OAAO;AAAA,EAChD,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC3B,WAAW,IAAI,OAAO,EAAE,QAAQ;AAAA,EAChC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,kBAAkB,IAAI,OAAO;AAAA,IAC7B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AACX,CAAC;AAGM,IAAM,2BAA2B,IAAI,OAAO;AAAA,EACjD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,wBAAwB,IAAI,OAAO;AAAA,EAC9C,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,sBAAsB,IAAI,OAAO;AAAA,EAC5C,QAAQ,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC1B,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC3B,WAAW,IAAI,OAAO,EAAE,QAAQ;AAClC,CAAC;AAGM,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,YAAY,IAAI,QAAQ;AAC1B,CAAC;AAGM,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,gBAAgB,IAAI,OAAO;AAAA,IAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,qBAAqB,IAAI,OAAO,EAAE,QAAQ;AAAA,EAC1C,WAAW,IAAI,MAAM,IAAI,OAAO;AAAA,IAChC,iBAAiB,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IACnC,mBAAmB,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IACrC,YAAY,IAAI,KAAK,CAAC,UAAU,aAAa,YAAY,eAAe,YAAY,mBAAmB,eAAe,oBAAoB,CAAC;AAAA,EAC7I,CAAC,CAAC,EAAE,QAAQ;AAAA,EACV,QAAQ,IAAI,OAAO;AAAA,IACnB,iBAAiB,IAAI,OAAO;AAAA,IAC5B,aAAa,IAAI,OAAO,EAAE,QAAQ;AAAA,EACpC,CAAC,EAAE,QAAQ;AAAA,EACT,QAAQ,IAAI,OAAO;AACrB,CAAC;AAEM,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,mBAAmB,IAAI,OAAO;AAAA,EAC9B,iBAAiB,IAAI,MAAM,IAAI,OAAO;AAAA,IACtC,QAAQ,IAAI,OAAO;AAAA,IACnB,QAAQ,IAAI,OAAO;AAAA,EACrB,CAAC,CAAC;AAAA,EACA,eAAe,IAAI,OAAO;AAAA,EAC1B,iBAAiB,IAAI,OAAO;AAC9B,CAAC;AAGM,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,uBAAuB,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EAC7C,cAAc,IAAI,MAAM,IAAI,OAAO;AAAA,IACnC,SAAS,IAAI,OAAO;AAAA,IACpB,QAAQ,IAAI,KAAK,CAAC,UAAU,YAAY,SAAS,CAAC;AAAA,EACpD,CAAC,CAAC;AAAA,EACA,aAAa,IAAI,MAAM,IAAI,OAAO;AAAA,IAClC,YAAY,IAAI,KAAK,CAAC,UAAU,aAAa,YAAY,eAAe,YAAY,mBAAmB,eAAe,oBAAoB,CAAC;AAAA,IAC3I,mBAAmB,IAAI,MAAM,IAAI,KAAK,CAAC,UAAU,YAAY,SAAS,CAAC,CAAC;AAAA,EAC1E,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,sCAAsC,IAAI,OAAO;AAAA,EAC5D,gBAAgB,IAAI,OAAO,EAAE,KAAK,EAAE,SAAS;AAC/C,CAAC;AAEM,IAAM,uCAAuC,IAAI,OAAO;AAAA,EAC7D,eAAe,IAAI,QAAQ;AAAA,EAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,UAAU,IAAI,OAAO;AAAA,IACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,QAAQ,IAAI,OAAO;AACrB,CAAC;AACM,IAAM,mCAAmC,IAAI,MAAM,oCAAoC;AAG9B,IAAM,0CAA0C;AAEzG,IAAM,qCAAqC,IAAI,OAAO;AAAA,EAC3D,YAAY,IAAI,OAAO,EAAE,KAAK,EAAE,SAAS;AAAA,EACzC,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,uCAAuC;AACtE,CAAC;AAEM,IAAM,kCAAkC,IAAI,OAAO;AAAA,EACxD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,eAAe,IAAI,QAAQ;AAAA,IAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,QAAQ,IAAI,OAAO;AAAA,EACrB,CAAC,CAAC;AACF,CAAC;AAG2D,IAAM,sCAAsC;AAEjG,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,mCAAmC;AAClE,CAAC;AAEM,IAAM,8BAA8B,IAAI,OAAO;AAAA,EACpD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,eAAe,IAAI,QAAQ;AAAA,IAC3B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,UAAU,IAAI,OAAO;AAAA,MACrB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,QAAQ,IAAI,OAAO;AAAA,EACrB,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,wBAAwB,IAAI,OAAO;AAAA,EAC9C,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,QAAQ,IAAI,WAAW,QAAQ;AACjC,CAAC;AAGM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,kBAAkB,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,QAAQ;AAAA,EAChE,YAAY,IAAI,OAAO,EAAE,IAAI,CAAC;AAChC,CAAC;AAGM,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,wCAAwC,IAAI,OAAO;AAAA,EAC9D,kBAAkB,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACxC,qCAAqC,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EAC3D,iCAAiC,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACvD,eAAe,IAAI,OAAO,EAAE,QAAQ;AACtC,CAAC;AAGM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,gBAAgB,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAClC,YAAY,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC9B,cAAc,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAChC,cAAc,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAChC,aAAa,IAAI,OAAO;AAC1B,CAAC;AAGM,IAAM,mBAAmB,IAAI,OAAO;AAAA,EACzC,SAAS,IAAI,OAAO;AAAA,EACpB,cAAc,IAAI,OAAO;AAAA,EACzB,SAAS,IAAI,OAAO;AAAA,EACpB,OAAO,IAAI,OAAO,EAAE,KAAK,EAAE,QAAQ;AACrC,CAAC;AAGmD,IAAM,8BAA8B;AAEjF,IAAM,yBAAyB,IAAI,OAAO;AAAA,EAC/C,UAAU,IAAI,MAAM,IAAI,OAAO,CAAC,EAAE,SAAS;AAAA,EAC3C,eAAe,IAAI,MAAM,IAAI,OAAO,CAAC,EAAE,SAAS;AAAA,EAChD,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,2BAA2B;AAC1D,CAAC;AAEM,IAAM,sBAAsB,IAAI,OAAO;AAAA,EAC5C,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,SAAS,IAAI,OAAO;AAAA,IACpB,cAAc,IAAI,OAAO;AAAA,IACzB,SAAS,IAAI,OAAO;AAAA,IACpB,OAAO,IAAI,OAAO,EAAE,KAAK;AAAA,EAC3B,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,kBAAkB,IAAI,OAAO;AAAA,EACxC,SAAS,IAAI,OAAO;AAAA,EACpB,cAAc,IAAI,OAAO;AAAA,EACzB,SAAS,IAAI,OAAO;AAAA,EACpB,OAAO,IAAI,OAAO,EAAE,KAAK;AAC3B,CAAC;AAGM,IAAM,wBAAwB,IAAI,OAAO;AAAA,EAC9C,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,0BAA0B,IAAI,OAAO;AAAA,EAChD,SAAS,IAAI,OAAO;AAAA,EACpB,cAAc,IAAI,OAAO;AAAA,EACzB,SAAS,IAAI,OAAO;AACtB,CAAC;AAG0D,IAAM,qCAAqC;AAE/F,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,kCAAkC;AAAA,EAC/D,UAAU,IAAI,OAAO,EAAE,SAAS;AAClC,CAAC;AAEM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,QAAQ,IAAI,OAAO;AAAA,IACnB,SAAS,IAAI,OAAO;AAAA,IACpB,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC7B,YAAY,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,IAClC,aAAa,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,IACnC,2BAA2B,IAAI,QAAQ;AAAA,IACvC,qBAAqB,IAAI,OAAO;AAAA,MAChC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,sBAAsB,IAAI,QAAQ;AAAA,IAClC,kBAAkB,IAAI,OAAO;AAAA,MAC7B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,mBAAmB,IAAI,QAAQ;AAAA,IAC/B,uBAAuB,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,IAC7C,eAAe,IAAI,MAAM,IAAI,OAAO;AAAA,MACpC,SAAS,IAAI,KAAK,CAAC,qCAAqC,CAAC;AAAA,MACzD,YAAY,IAAI,OAAO;AAAA,QACvB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MAC1B,CAAC;AAAA,MACC,SAAS,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,IACjC,CAAC,EAAE,GAAG,IAAI,OAAO;AAAA,MACf,SAAS,IAAI,KAAK,CAAC,wCAAwC,CAAC;AAAA,MAC5D,SAAS,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,MAC/B,WAAW,IAAI,OAAO;AAAA,IACxB,CAAC,CAAC,CAAC;AAAA,IACD,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,eAAe,IAAI,QAAQ;AAAA,IAC3B,qBAAqB,IAAI,QAAQ;AAAA,EACnC,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,8BAA8B,IAAI,OAAO;AAAA,EACpD,MAAM,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC,EAAE,SAAS;AAChD,CAAC;AAEM,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,QAAQ,IAAI,OAAO;AAAA,EACnB,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,EAC7B,SAAS,IAAI,OAAO,EAAE,QAAQ;AAChC,CAAC;AACM,IAAM,2BAA2B,IAAI,MAAM,4BAA4B;AAGvE,IAAM,sBAAsB,IAAI,OAAO;AAAA,EAC5C,gBAAgB,IAAI,MAAM,IAAI,OAAO;AAAA,IACrC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,oBAAoB,IAAI,OAAO;AAAA,EAC1C,QAAQ,IAAI,OAAO;AAAA,EACnB,SAAS,IAAI,OAAO;AAAA,EACpB,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,EAC7B,YAAY,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EAClC,aAAa,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACnC,2BAA2B,IAAI,QAAQ;AAAA,EACvC,qBAAqB,IAAI,OAAO;AAAA,IAChC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,sBAAsB,IAAI,QAAQ;AAAA,EAClC,kBAAkB,IAAI,OAAO;AAAA,IAC7B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,mBAAmB,IAAI,QAAQ;AAAA,EAC/B,uBAAuB,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EAC7C,eAAe,IAAI,MAAM,IAAI,OAAO;AAAA,IACpC,SAAS,IAAI,KAAK,CAAC,qCAAqC,CAAC;AAAA,IACzD,YAAY,IAAI,OAAO;AAAA,MACvB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,SAAS,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACjC,CAAC,EAAE,GAAG,IAAI,OAAO;AAAA,IACf,SAAS,IAAI,KAAK,CAAC,wCAAwC,CAAC;AAAA,IAC5D,SAAS,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,IAC/B,WAAW,IAAI,OAAO;AAAA,EACxB,CAAC,CAAC,CAAC;AAAA,EACD,MAAM,IAAI,OAAO,EAAE,KAAK,EAAE,QAAQ;AACpC,CAAC;AAGoD,IAAM,+BAA+B;AAEnF,IAAM,0BAA0B,IAAI,OAAO;AAAA,EAChD,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,4BAA4B;AAC3D,CAAC;AAEM,IAAM,uBAAuB,IAAI,OAAO;AAAA,EAC7C,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,QAAQ,IAAI,OAAO;AAAA,IACnB,SAAS,IAAI,OAAO;AAAA,IACpB,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC7B,YAAY,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,IAClC,aAAa,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,IACnC,2BAA2B,IAAI,QAAQ;AAAA,IACvC,qBAAqB,IAAI,OAAO;AAAA,MAChC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,sBAAsB,IAAI,QAAQ;AAAA,IAClC,kBAAkB,IAAI,OAAO;AAAA,MAC7B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,EAAE,QAAQ;AAAA,IACT,mBAAmB,IAAI,QAAQ;AAAA,IAC/B,uBAAuB,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,IAC7C,eAAe,IAAI,MAAM,IAAI,OAAO;AAAA,MACpC,SAAS,IAAI,KAAK,CAAC,qCAAqC,CAAC;AAAA,MACzD,YAAY,IAAI,OAAO;AAAA,QACvB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,MAC1B,CAAC;AAAA,MACC,SAAS,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,IACjC,CAAC,EAAE,GAAG,IAAI,OAAO;AAAA,MACf,SAAS,IAAI,KAAK,CAAC,wCAAwC,CAAC;AAAA,MAC5D,SAAS,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,MAC/B,WAAW,IAAI,OAAO;AAAA,IACxB,CAAC,CAAC,CAAC;AAAA,IACD,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,eAAe,IAAI,QAAQ;AAAA,IAC3B,qBAAqB,IAAI,QAAQ;AAAA,EACnC,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,yBAAyB,IAAI,OAAO;AAAA,EAC/C,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,2BAA2B,IAAI,OAAO;AAAA,EACjD,QAAQ,IAAI,OAAO;AAAA,EACnB,SAAS,IAAI,OAAO;AAAA,EACpB,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,EAC7B,YAAY,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EAClC,aAAa,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACnC,2BAA2B,IAAI,QAAQ;AAAA,EACvC,qBAAqB,IAAI,OAAO;AAAA,IAChC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,sBAAsB,IAAI,QAAQ;AAAA,EAClC,kBAAkB,IAAI,OAAO;AAAA,IAC7B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,mBAAmB,IAAI,QAAQ;AAAA,EAC/B,uBAAuB,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EAC7C,eAAe,IAAI,MAAM,IAAI,OAAO;AAAA,IACpC,SAAS,IAAI,KAAK,CAAC,qCAAqC,CAAC;AAAA,IACzD,YAAY,IAAI,OAAO;AAAA,MACvB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,SAAS,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACjC,CAAC,EAAE,GAAG,IAAI,OAAO;AAAA,IACf,SAAS,IAAI,KAAK,CAAC,wCAAwC,CAAC;AAAA,IAC5D,SAAS,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,IAC/B,WAAW,IAAI,OAAO;AAAA,EACxB,CAAC,CAAC,CAAC;AAAA,EACD,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,eAAe,IAAI,QAAQ;AAAA,EAC3B,qBAAqB,IAAI,QAAQ;AACnC,CAAC;AAGM,IAAM,4BAA4B,IAAI,OAAO;AAAA,EAClD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,yBAAyB,IAAI,OAAO;AAAA,EAC/C,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,uBAAuB,IAAI,OAAO;AAAA,EAC7C,QAAQ,IAAI,OAAO;AAAA,EACnB,SAAS,IAAI,OAAO;AAAA,EACpB,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,EAC7B,YAAY,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EAClC,aAAa,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACnC,2BAA2B,IAAI,QAAQ;AAAA,EACvC,qBAAqB,IAAI,OAAO;AAAA,IAChC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,sBAAsB,IAAI,QAAQ;AAAA,EAClC,kBAAkB,IAAI,OAAO;AAAA,IAC7B,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,EAAE,QAAQ;AAAA,EACT,mBAAmB,IAAI,QAAQ;AAAA,EAC/B,uBAAuB,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EAC7C,eAAe,IAAI,MAAM,IAAI,OAAO;AAAA,IACpC,SAAS,IAAI,KAAK,CAAC,qCAAqC,CAAC;AAAA,IACzD,YAAY,IAAI,OAAO;AAAA,MACvB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,SAAS,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACjC,CAAC,EAAE,GAAG,IAAI,OAAO;AAAA,IACf,SAAS,IAAI,KAAK,CAAC,wCAAwC,CAAC;AAAA,IAC5D,SAAS,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,IAC/B,WAAW,IAAI,OAAO;AAAA,EACxB,CAAC,CAAC,CAAC;AACH,CAAC;AAGM,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AACM,IAAM,+BAA+B,IAAI,MAAM,gCAAgC;AAG/E,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AACM,IAAM,6BAA6B,IAAI,MAAM,8BAA8B;AAG5B,IAAM,gCAAgC;AAErF,IAAM,2BAA2B,IAAI,OAAO;AAAA,EACjD,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,6BAA6B;AAAA,EAC1D,WAAW,IAAI,KAAK,CAAC,YAAY,YAAY,QAAQ,SAAS,MAAM,cAAc,cAAc,cAAc,eAAe,eAAe,CAAC,EAAE,SAAS;AAAA,EACxJ,kBAAkB,IAAI,KAAK,CAAC,aAAa,YAAY,CAAC,EAAE,SAAS;AAAA,EACjE,gBAAgB,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC,EAAE,SAAS;AAAA,EACxD,cAAc,IAAI,MAAM,IAAI,KAAK,CAAC,UAAU,YAAY,aAAa,WAAW,YAAY,KAAK,CAAC,CAAC,EAAE,SAAS;AAAA,EAC9G,UAAU,IAAI,OAAO,EAAE,SAAS;AAClC,CAAC;AAEM,IAAM,wBAAwB,IAAI,OAAO;AAAA,EAC9C,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,SAAS,IAAI,OAAO;AAAA,IACpB,YAAY,IAAI,OAAO;AAAA,IACvB,QAAQ,IAAI,OAAO;AAAA,IACnB,gBAAgB,IAAI,MAAM,IAAI,OAAO;AAAA,MACrC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,CAAC;AAAA,IACA,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,mBAAmB,IAAI,OAAO,EAAE,QAAQ;AAAA,IACxC,wBAAwB,IAAI,MAAM,IAAI,OAAO;AAAA,MAC7C,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,CAAC;AAAA,IACA,yBAAyB,IAAI,QAAQ;AAAA,IACrC,qBAAqB,IAAI,MAAM,IAAI,OAAO;AAAA,MAC1C,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,CAAC;AAAA,IACA,sBAAsB,IAAI,QAAQ;AAAA,IAClC,cAAc,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,IACpC,SAAS,IAAI,KAAK,CAAC,UAAU,YAAY,aAAa,WAAW,YAAY,KAAK,CAAC;AAAA,IACnF,uBAAuB,IAAI,OAAO;AAAA,IAClC,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,IAClD,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,IAClD,iBAAiB,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,QAAQ;AAAA,IAC/D,mBAAmB,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,QAAQ;AAAA,IACjE,0BAA0B,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,QAAQ;AAAA,IACxE,WAAW,IAAI,QAAQ;AAAA,IACvB,QAAQ,IAAI,KAAK,CAAC,WAAW,KAAK,CAAC;AAAA,EACrC,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,yBAAyB,IAAI,OAAO;AAAA,EAC/C,MAAM,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC,EAAE,SAAS;AAChD,CAAC;AAEM,IAAM,0BAA0B,IAAI,OAAO;AAAA,EAChD,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,QAAQ,IAAI,OAAO;AAAA,EACnB,cAAc,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACpC,QAAQ,IAAI,KAAK,CAAC,WAAW,KAAK,CAAC;AACrC,CAAC;AACM,IAAM,sBAAsB,IAAI,MAAM,uBAAuB;AAG7D,IAAM,eAAe,IAAI,OAAO;AAAA,EACrC,SAAS,IAAI,OAAO;AAAA,EACpB,YAAY,IAAI,OAAO;AAAA,EACvB,QAAQ,IAAI,OAAO;AAAA,EACnB,gBAAgB,IAAI,MAAM,IAAI,OAAO;AAAA,IACrC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,CAAC;AAAA,EACA,MAAM,IAAI,OAAO,EAAE,KAAK,EAAE,QAAQ;AAAA,EAClC,QAAQ,IAAI,KAAK,CAAC,WAAW,KAAK,CAAC;AACrC,CAAC;AAGM,IAAM,iBAAiB,IAAI,OAAO;AAAA,EACvC,WAAW,IAAI,MAAM,IAAI,OAAO;AAAA,IAChC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,CAAC;AACF,CAAC;AAG+C,IAAM,0BAA0B;AAEzE,IAAM,qBAAqB,IAAI,OAAO;AAAA,EAC3C,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,uBAAuB;AACtD,CAAC;AAEM,IAAM,kBAAkB,IAAI,OAAO;AAAA,EACxC,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,SAAS,IAAI,OAAO;AAAA,IACpB,YAAY,IAAI,OAAO;AAAA,IACvB,QAAQ,IAAI,OAAO;AAAA,IACnB,gBAAgB,IAAI,MAAM,IAAI,OAAO;AAAA,MACrC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,CAAC;AAAA,IACA,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,mBAAmB,IAAI,OAAO,EAAE,QAAQ;AAAA,IACxC,wBAAwB,IAAI,MAAM,IAAI,OAAO;AAAA,MAC7C,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,CAAC;AAAA,IACA,yBAAyB,IAAI,QAAQ;AAAA,IACrC,qBAAqB,IAAI,MAAM,IAAI,OAAO;AAAA,MAC1C,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC,CAAC;AAAA,IACA,sBAAsB,IAAI,QAAQ;AAAA,IAClC,cAAc,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,IACpC,SAAS,IAAI,KAAK,CAAC,UAAU,YAAY,aAAa,WAAW,YAAY,KAAK,CAAC;AAAA,IACnF,uBAAuB,IAAI,OAAO;AAAA,IAClC,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,IAClD,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,IAClD,iBAAiB,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,QAAQ;AAAA,IAC/D,mBAAmB,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,QAAQ;AAAA,IACjE,0BAA0B,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,QAAQ;AAAA,IACxE,WAAW,IAAI,QAAQ;AAAA,IACvB,QAAQ,IAAI,KAAK,CAAC,WAAW,KAAK,CAAC;AAAA,EACrC,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,oBAAoB,IAAI,OAAO;AAAA,EAC1C,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,sBAAsB,IAAI,OAAO;AAAA,EAC5C,SAAS,IAAI,OAAO;AAAA,EACpB,YAAY,IAAI,OAAO;AAAA,EACvB,QAAQ,IAAI,OAAO;AAAA,EACnB,gBAAgB,IAAI,MAAM,IAAI,OAAO;AAAA,IACrC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,CAAC;AAAA,EACA,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,mBAAmB,IAAI,OAAO,EAAE,QAAQ;AAAA,EACxC,wBAAwB,IAAI,MAAM,IAAI,OAAO;AAAA,IAC7C,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,CAAC;AAAA,EACA,yBAAyB,IAAI,QAAQ;AAAA,EACrC,qBAAqB,IAAI,MAAM,IAAI,OAAO;AAAA,IAC1C,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,CAAC;AAAA,EACA,sBAAsB,IAAI,QAAQ;AAAA,EAClC,cAAc,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACpC,SAAS,IAAI,KAAK,CAAC,UAAU,YAAY,aAAa,WAAW,YAAY,KAAK,CAAC;AAAA,EACnF,uBAAuB,IAAI,OAAO;AAAA,EAClC,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,EAClD,cAAc,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,EAClD,iBAAiB,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,QAAQ;AAAA,EAC/D,mBAAmB,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,QAAQ;AAAA,EACjE,0BAA0B,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC,EAAE,QAAQ;AAAA,EACxE,WAAW,IAAI,QAAQ;AAAA,EACvB,QAAQ,IAAI,KAAK,CAAC,WAAW,KAAK,CAAC;AACrC,CAAC;AAGM,IAAM,uBAAuB,IAAI,OAAO;AAAA,EAC7C,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,oBAAoB,IAAI,OAAO;AAAA,EAC1C,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,kBAAkB,IAAI,OAAO;AAAA,EACxC,SAAS,IAAI,OAAO;AAAA,EACpB,YAAY,IAAI,OAAO;AAAA,EACvB,QAAQ,IAAI,OAAO;AAAA,EACnB,gBAAgB,IAAI,MAAM,IAAI,OAAO;AAAA,IACrC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,CAAC;AAAA,EACA,mBAAmB,IAAI,OAAO;AAAA,EAC9B,wBAAwB,IAAI,MAAM,IAAI,OAAO;AAAA,IAC7C,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,CAAC;AAAA,EACA,yBAAyB,IAAI,QAAQ;AAAA,EACrC,qBAAqB,IAAI,MAAM,IAAI,OAAO;AAAA,IAC1C,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,CAAC;AAAA,EACA,sBAAsB,IAAI,QAAQ;AACpC,CAAC;AAGM,IAAM,uBAAuB,IAAI,OAAO;AAAA,EAC7C,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,gBAAgB,IAAI,OAAO;AAAA,EAC3B,mBAAmB,IAAI,QAAQ;AACjC,CAAC;AACM,IAAM,yBAAyB,IAAI,MAAM,0BAA0B;AAGnE,IAAM,wCAAwC,IAAI,OAAO;AAAA,EAC9D,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,gBAAgB,IAAI,OAAO;AAC7B,CAAC;AAGM,IAAM,uCAAuC,IAAI,OAAO;AAAA,EAC7D,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,yCAAyC,IAAI,OAAO;AAAA,EAC/D,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,wBAAwB,IAAI,MAAM,IAAI,OAAO;AAAA,IAC7C,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,CAAC;AAAA,EACA,yBAAyB,IAAI,QAAQ;AAAA,EACrC,qBAAqB,IAAI,MAAM,IAAI,OAAO;AAAA,IAC1C,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,CAAC;AAAA,EACA,sBAAsB,IAAI,QAAQ;AACpC,CAAC;AAGM,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,iCAAiC,IAAI,OAAO;AAAA,EACvD,eAAe,IAAI,OAAO;AAC5B,CAAC;AAGM,IAAM,sCAAsC,IAAI,OAAO;AAAA,EAC5D,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,oCAAoC,IAAI,OAAO;AAAA,EAC1D,YAAY,IAAI,OAAO;AAAA,EACvB,gBAAgB,IAAI,OAAO;AAC7B,CAAC;AAGM,IAAM,qCAAqC,IAAI,OAAO;AAAA,EAC3D,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,2CAA2C,IAAI,OAAO;AAC5D,IAAM,uCAAuC,IAAI,MAAM,wCAAwC;AAG/F,IAAM,kDAAkD,IAAI,OAAO;AAAA,EACxE,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,YAAY,IAAI,OAAO;AACzB,CAAC;AAGM,IAAM,kCAAkC,IAAI,OAAO;AAAA,EACxD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,oCAAoC,IAAI,OAAO;AAAA,EAC1D,iBAAiB,IAAI,OAAO,EAAE,QAAQ;AACxC,CAAC;AAGM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,2BAA2B,IAAI,OAAO;AAAA,EACjD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,yBAAyB,IAAI,OAAO;AAAA,EAC/C,QAAQ,IAAI,OAAO;AAAA,IACnB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC;AACD,CAAC;AAGM,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,kBAAkB,IAAI,QAAQ;AAAA,EAC9B,mBAAmB,IAAI,QAAQ;AAAA,EAC/B,yBAAyB,IAAI,OAAO;AAAA,IACpC,yBAAyB,IAAI,OAAO;AAAA,IACpC,2BAA2B,IAAI,QAAQ;AAAA,IACvC,gBAAgB,IAAI,QAAQ;AAAA,IAC5B,oBAAoB,IAAI,QAAQ;AAAA,IAChC,oBAAoB,IAAI,QAAQ;AAAA,EAClC,CAAC;AAAA,EACC,uBAAuB,IAAI,QAAQ;AAAA,EACnC,kBAAkB,IAAI,QAAQ;AAChC,CAAC;AAGM,IAAM,yBAAyB,IAAI,OAAO;AAAA,EAC/C,SAAS,IAAI,OAAO;AAAA,EACpB,YAAY,IAAI,OAAO;AAAA,EACvB,QAAQ,IAAI,OAAO;AAAA,EACnB,gBAAgB,IAAI,MAAM,IAAI,OAAO;AAAA,IACrC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,CAAC;AAAA,EACA,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,mBAAmB,IAAI,OAAO,EAAE,SAAS;AAAA,EACzC,wBAAwB,IAAI,MAAM,IAAI,OAAO;AAAA,IAC7C,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,CAAC;AAAA,EACA,yBAAyB,IAAI,QAAQ;AAAA,EACrC,qBAAqB,IAAI,MAAM,IAAI,OAAO;AAAA,IAC1C,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,CAAC;AAAA,EACA,sBAAsB,IAAI,QAAQ;AAAA,EAClC,cAAc,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACpC,aAAa,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACnC,2BAA2B,IAAI,QAAQ;AAAA,EACvC,4BAA4B,IAAI,QAAQ;AAAA,EACxC,uBAAuB,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EAC7C,eAAe,IAAI,MAAM,IAAI,OAAO;AAAA,IACpC,SAAS,IAAI,KAAK,CAAC,qCAAqC,CAAC;AAAA,IACzD,YAAY,IAAI,OAAO;AAAA,MACvB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IAC1B,CAAC;AAAA,IACC,SAAS,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACjC,CAAC,EAAE,GAAG,IAAI,OAAO;AAAA,IACf,SAAS,IAAI,KAAK,CAAC,wCAAwC,CAAC;AAAA,IAC5D,SAAS,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,IAC/B,WAAW,IAAI,OAAO;AAAA,EACxB,CAAC,CAAC,CAAC;AAAA,EACD,mBAAmB,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACzC,WAAW,IAAI,QAAQ;AACzB,CAAC;AAGM,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,gBAAgB,IAAI,OAAO;AAAA,EAC3B,mBAAmB,IAAI,QAAQ;AACjC,CAAC;AACM,IAAM,4BAA4B,IAAI,MAAM,6BAA6B;AAGzE,IAAM,2CAA2C,IAAI,OAAO;AAAA,EACjE,gBAAgB,IAAI,OAAO;AAC7B,CAAC;AAEM,IAAM,gDAAgD,IAAI,OAAO;AAAA,EACtE,QAAQ,IAAI,OAAO,EAAE,SAAS;AAChC,CAAC;AAGM,IAAM,yCAAyC,IAAI,OAAO;AAAA,EAC/D,gBAAgB,IAAI,OAAO;AAC7B,CAAC;AAEM,IAAM,uCAAuC,IAAI,OAAO;AAAA,EAC7D,QAAQ,IAAI,OAAO;AAAA,EACnB,UAAU,IAAI,OAAO;AACvB,CAAC;AAEM,IAAM,2CAA2C,IAAI,OAAO,CAEnE,CAAC;AAGM,IAAM,wCAAwC,IAAI,OAAO;AAAA,EAC9D,gBAAgB,IAAI,OAAO;AAC7B,CAAC;AAEM,IAAM,0CAA0C,IAAI,OAAO,CAElE,CAAC;AAGM,IAAM,4BAA4B,IAAI,OAAO;AAAA,EAClD,QAAQ,IAAI,OAAO;AAAA,IACnB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC;AACD,CAAC;AAGM,IAAM,oCAAoC,IAAI,OAAO;AAAA,EAC1D,eAAe,IAAI,OAAO;AAAA,EAC1B,eAAe,IAAI,OAAO,EAAE,QAAQ;AACtC,CAAC;AAGM,IAAM,sCAAsC,IAAI,OAAO;AAAA,EAC5D,oBAAoB,IAAI,QAAQ;AAAA,EAChC,mBAAmB,IAAI,QAAQ;AAAA,EAC/B,yBAAyB,IAAI,OAAO;AAAA,IACpC,yBAAyB,IAAI,OAAO;AAAA,IACpC,2BAA2B,IAAI,QAAQ;AAAA,IACvC,gBAAgB,IAAI,QAAQ;AAAA,IAC5B,oBAAoB,IAAI,QAAQ;AAAA,IAChC,oBAAoB,IAAI,QAAQ;AAAA,EAClC,CAAC;AAAA,EACC,uBAAuB,IAAI,QAAQ;AAAA,EACnC,kBAAkB,IAAI,QAAQ;AAChC,CAAC;AAGM,IAAM,2CAA2C,IAAI,OAAO;AAAA,EACjE,sBAAsB,IAAI,OAAO;AAAA,EACjC,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,EACpC,kBAAkB,IAAI,QAAQ;AAAA,EAC9B,2BAA2B,IAAI,QAAQ;AACzC,CAAC;AACM,IAAM,uCAAuC,IAAI,MAAM,wCAAwC;AAG/F,IAAM,uCAAuC,IAAI,OAAO;AAAA,EAC7D,MAAM,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC,EAAE,SAAS;AAChD,CAAC;AAEM,IAAM,oCAAoC,IAAI,OAAO;AAAA,EAC1D,eAAe,IAAI,MAAM,IAAI,OAAO;AAAA,IACpC,WAAW,IAAI,OAAO,EAAE,KAAK;AAAA,IAC7B,eAAe,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACvC,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,+CAA+C,IAAI,OAAO;AAAA,EACrE,MAAM,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC,EAAE,SAAS;AAChD,CAAC;AAEM,IAAM,gDAAgD,IAAI,OAAO;AAAA,EACtE,eAAe,IAAI,MAAM,IAAI,OAAO;AAAA,IACpC,WAAW,IAAI,OAAO,EAAE,KAAK;AAAA,IAC7B,eAAe,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACvC,CAAC,CAAC;AACF,CAAC;AACM,IAAM,4CAA4C,IAAI,MAAM,6CAA6C;AAGzG,IAAM,4CAA4C,IAAI,OAAO;AAAA,EAClE,MAAM,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC,EAAE,SAAS;AAChD,CAAC;AAEM,IAAM,yCAAyC,IAAI,OAAO;AAAA,EAC/D,eAAe,IAAI,MAAM,IAAI,OAAO;AAAA,IACpC,WAAW,IAAI,OAAO,EAAE,KAAK;AAAA,IAC7B,eAAe,IAAI,MAAM,IAAI,OAAO,CAAC;AAAA,EACvC,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,sBAAsB,IAAI,OAAO;AAAA,EAC5C,WAAW,IAAI,MAAM,IAAI,OAAO;AAAA,IAChC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,qBAAqB,IAAI,OAAO;AAAA,EAC3C,WAAW,IAAI,MAAM,IAAI,OAAO;AAAA,IAChC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,qBAAqB,IAAI,OAAO;AAAA,EAC3C,SAAS,IAAI,OAAO;AAAA,EACpB,YAAY,IAAI,OAAO;AAAA,EACvB,QAAQ,IAAI,OAAO;AAAA,EACnB,gBAAgB,IAAI,MAAM,IAAI,OAAO;AAAA,IACrC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,CAAC;AAAA,EACA,MAAM,IAAI,OAAO,EAAE,KAAK,EAAE,QAAQ;AAAA,EAClC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAClC,CAAC;AAGM,IAAM,mCAAmC,IAAI,OAAO;AAAA,EACzD,QAAQ,IAAI,OAAO;AAAA,IACnB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC;AAAA,EACC,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EAC3B,YAAY,IAAI,OAAO;AACzB,CAAC;AAGM,IAAM,2BAA2B,IAAI,OAAO;AAAA,EACjD,QAAQ,IAAI,OAAO;AAAA,IACnB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC;AAAA,EACC,WAAW,IAAI,OAAO,EAAE,QAAQ;AAClC,CAAC;AAGM,IAAM,2BAA2B,IAAI,OAAO;AAAA,EACjD,QAAQ,IAAI,OAAO;AAAA,IACnB,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC;AAAA,EACC,SAAS,IAAI,OAAO,EAAE,IAAI,CAAC;AAC7B,CAAC;AAEM,IAAM,+BAA+B,IAAI,OAAO;AAAA,EACrD,yBAAyB,IAAI,OAAO;AAAA,IACpC,yBAAyB,IAAI,OAAO;AAAA,IACpC,2BAA2B,IAAI,QAAQ;AAAA,IACvC,gBAAgB,IAAI,QAAQ;AAAA,IAC5B,oBAAoB,IAAI,QAAQ;AAAA,IAChC,oBAAoB,IAAI,QAAQ;AAAA,EAClC,CAAC;AACD,CAAC;AAGM,IAAM,4BAA4B,IAAI,OAAO;AAAA,EAClD,WAAW,IAAI,MAAM,IAAI,OAAO;AAAA,IAChC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,CAAC;AAAA,EACA,gBAAgB,IAAI,MAAM,IAAI,OAAO;AAAA,IACrC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,qBAAqB,IAAI,OAAO;AAAA,EAC3C,WAAW,IAAI,MAAM,IAAI,OAAO;AAAA,IAChC,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EAC1B,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,4BAA4B,IAAI,OAAO;AAAA,EAClD,MAAM,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC,EAAE,SAAS;AAChD,CAAC;AAEM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,WAAW,IAAI,QAAQ;AAAA,EACvB,QAAQ,IAAI,OAAO;AAAA,EACnB,UAAU,IAAI,OAAO;AAAA,EACrB,OAAO,IAAI,OAAO;AAAA,EAClB,SAAS,IAAI,OAAO;AACtB,CAAC;AACM,IAAM,yBAAyB,IAAI,MAAM,0BAA0B;AAGvB,IAAM,6BAA6B;AAE/E,IAAM,wBAAwB,IAAI,OAAO;AAAA,EAC9C,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,0BAA0B;AACzD,CAAC;AAEM,IAAM,qBAAqB,IAAI,OAAO;AAAA,EAC3C,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,WAAW,IAAI,QAAQ;AAAA,IACvB,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,IAC7B,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,IACpC,OAAO,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,IACzB,mBAAmB,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC;AAAA,IAChD,WAAW,IAAI,OAAO,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC;AAAA,IAChD,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,IACxB,UAAU,IAAI,MAAM,IAAI,OAAO;AAAA,MAC/B,aAAa,IAAI,OAAO;AAAA,MACxB,aAAa,IAAI,OAAO;AAAA,MACxB,SAAS,IAAI,OAAO;AAAA,IACtB,CAAC,CAAC;AAAA,EACF,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,kBAAkB,IAAI,OAAO;AAAA,EACxC,WAAW,IAAI,QAAQ;AAAA,EACvB,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,EAC7B,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,EACpC,OAAO,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EACzB,mBAAmB,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC;AAAA,EAChD,WAAW,IAAI,OAAO,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC;AAAA,EAChD,MAAM,IAAI,OAAO,EAAE,KAAK,EAAE,QAAQ;AAAA,EAClC,UAAU,IAAI,MAAM,IAAI,OAAO,CAAC;AAClC,CAAC;AAGM,IAAM,uBAAuB,IAAI,OAAO;AAAA,EAC7C,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,yBAAyB,IAAI,OAAO;AAAA,EAC/C,WAAW,IAAI,QAAQ;AAAA,EACvB,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,EAC7B,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,EACpC,OAAO,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EACzB,mBAAmB,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC;AAAA,EAChD,WAAW,IAAI,OAAO,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC;AAAA,EAChD,MAAM,IAAI,OAAO,EAAE,KAAK;AAAA,EACxB,UAAU,IAAI,MAAM,IAAI,OAAO;AAAA,IAC/B,aAAa,IAAI,OAAO;AAAA,IACxB,aAAa,IAAI,OAAO;AAAA,IACxB,SAAS,IAAI,OAAO;AAAA,EACtB,CAAC,CAAC;AACF,CAAC;AAGM,IAAM,0BAA0B,IAAI,OAAO;AAAA,EAChD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAGM,IAAM,uBAAuB,IAAI,OAAO;AAAA,EAC7C,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAEM,IAAM,qBAAqB,IAAI,OAAO;AAAA,EAC3C,WAAW,IAAI,QAAQ;AAAA,EACvB,QAAQ,IAAI,OAAO,EAAE,QAAQ;AAAA,EAC7B,eAAe,IAAI,OAAO,EAAE,QAAQ;AAAA,EACpC,OAAO,IAAI,OAAO,EAAE,IAAI,CAAC;AAAA,EACzB,mBAAmB,IAAI,MAAM,IAAI,OAAO,EAAE,KAAK,CAAC;AAAA,EAChD,WAAW,IAAI,OAAO,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC;AAAA,EAChD,UAAU,IAAI,MAAM,IAAI,OAAO,CAAC;AAClC,CAAC;AAGM,IAAM,2BAA2B,IAAI,OAAO;AAAA,EACjD,MAAM,IAAI,OAAO,EAAE,KAAK;AAC1B,CAAC;AAE0D,IAAM,qCAAqC;AAE/F,IAAM,gCAAgC,IAAI,OAAO;AAAA,EACtD,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,kCAAkC;AACjE,CAAC;AAEM,IAAM,6BAA6B,IAAI,OAAO;AAAA,EACnD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,OAAO,IAAI,OAAO,EAAE,KAAK;AAAA,IACzB,cAAc,IAAI,OAAO,EAAE,KAAK;AAAA,IAChC,cAAc,IAAI,OAAO;AAAA,IACzB,uBAAuB,IAAI,QAAQ;AAAA,IACnC,QAAQ,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,IAC5C,cAAc,IAAI,OAAO;AAAA,IACzB,OAAO,IAAI,OAAO;AAAA,IAClB,cAAc,IAAI,OAAO;AAAA,IACzB,kBAAkB,IAAI,OAAO;AAAA,IAC7B,eAAe,IAAI,OAAO;AAAA,IAC1B,mBAAmB,IAAI,OAAO;AAAA,IAC9B,gBAAgB,IAAI,OAAO;AAAA,IAC3B,oBAAoB,IAAI,QAAQ;AAAA,EAClC,CAAC,CAAC;AACF,CAAC;AAGwD,IAAM,mCAAmC;AAE3F,IAAM,8BAA8B,IAAI,OAAO;AAAA,EACpD,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,gCAAgC;AAC/D,CAAC;AAEM,IAAM,2BAA2B,IAAI,OAAO;AAAA,EACjD,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,aAAa,IAAI,OAAO;AAAA,IACxB,aAAa,IAAI,OAAO;AAAA,IACxB,SAAS,IAAI,OAAO;AAAA,EACtB,CAAC,CAAC;AACF,CAAC;AAGsD,IAAM,iCAAiC;AAEvF,IAAM,4BAA4B,IAAI,OAAO;AAAA,EAClD,QAAQ,IAAI,OAAO,EAAE,SAAS;AAAA,EAC9B,QAAQ,IAAI,OAAO,EAAE,QAAQ,8BAA8B;AAC7D,CAAC;AAEM,IAAM,yBAAyB,IAAI,OAAO;AAAA,EAC/C,SAAS,IAAI,OAAO;AAAA,EACpB,SAAS,IAAI,MAAM,IAAI,OAAO;AAAA,IAC9B,OAAO,IAAI,OAAO,EAAE,KAAK;AAAA,IACzB,cAAc,IAAI,OAAO,EAAE,KAAK;AAAA,IAChC,cAAc,IAAI,OAAO;AAAA,IACzB,uBAAuB,IAAI,QAAQ;AAAA,IACnC,QAAQ,IAAI,OAAO,EAAE,SAAS,EAAC,SAAQ,KAAI,CAAC;AAAA,IAC5C,cAAc,IAAI,OAAO;AAAA,IACzB,OAAO,IAAI,OAAO;AAAA,IAClB,cAAc,IAAI,OAAO;AAAA,IACzB,kBAAkB,IAAI,OAAO;AAAA,IAC7B,eAAe,IAAI,OAAO;AAAA,IAC1B,mBAAmB,IAAI,OAAO;AAAA,IAC9B,gBAAgB,IAAI,OAAO;AAAA,IAC3B,oBAAoB,IAAI,QAAQ;AAAA,EAClC,CAAC,CAAC;AACF,CAAC;;;ACz4MD,IAAM,kBAAkB;AAAA,EACtB;AAAA,EACA;AAAA,EACA,sBAAsB;AAAA,EACtB,OAAO,WAA6B;AAClC,UAAM,SAASC,yBAAwB,UAAU;AACjD,QAAI,WAAW,MAAM,OAAO,WAAW,MAAM;AAC7C,WAAO;AAAA,MACL,SAAS;AAAA,QACP;AAAA,UACE,MAAM;AAAA,UACN,MAAM,KAAK,UAAU,QAAQ;AAAA,QAC/B;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAEA,IAAO,uBAAQ;;;ACrBR,IAAM,eAAe,CAAC,oBAAe;;;ACG5C,IAAM,sBAAsB;AAAA,EAC1B;AAAA,EACA;AAAA,EACA,sBAAsB;AAAA,EACtB,OAAO,WAAsC;AAC3C,UAAM,SAASC,yBAAwB,UAAU;AACjD,QAAI,WAAW,MAAM,OAAO,oBAAoB,MAAM;AACtD,WAAO;AAAA,MACL,SAAS;AAAA,QACP;AAAA,UACE,MAAM;AAAA,UACN,MAAM,KAAK,UAAU,QAAQ;AAAA,QAC/B;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAEA,IAAO,mBAAQ;;;AClBf,IAAM,qBAAqB;AAAA,EACzB;AAAA,EACA;AAAA,EACA,iBAAiB;AAAA,EACjB,OAAO,UAAsC;AAC3C,QAAI;AACF,YAAM,SAASC,yBAAwB,UAAU;AACjD,UAAI,WAAW,MAAM,OAAO,aAAa,KAAK;AAE9C,aAAO;AAAA,QACL,SAAS;AAAA,UACP;AAAA,YACE,MAAM;AAAA,YACN,MAAM,KAAK,UAAU,QAAQ;AAAA,UAC/B;AAAA,QACF;AAAA,MACF;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,MAAM,6BAA6B,KAAK;AAChD,aAAO;AAAA,QACL,SAAS;AAAA,UACP;AAAA,YACE,MAAM;AAAA,YACN,MAAM,UAAU,KAAK;AAAA,UACvB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAEA,IAAO,2BAAQ;;;AChCf,IAAM,qBAAqB;AAAA,EACzB;AAAA,EACA;AAAA,EACA,yBAAyB;AAAA,EACzB,OAAO,EAAE,GAAG,MAAM;AAChB,QAAI;AACF,YAAM,SAASC,yBAAwB,UAAU;AACjD,UAAI,WAAW,MAAM,OAAO,mBAAmB,EAAE;AAEjD,aAAO;AAAA,QACL,SAAS;AAAA,UACP;AAAA,YACE,MAAM;AAAA,YACN,MAAM,KAAK,UAAU,QAAQ;AAAA,UAC/B;AAAA,QACF;AAAA,MACF;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,MAAM,6BAA6B,KAAK;AAChD,aAAO;AAAA,QACL,SAAS;AAAA,UACP;AAAA,YACE,MAAM;AAAA,YACN,MAAM,UAAU,KAAK;AAAA,UACvB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAEA,IAAO,2BAAQ;;;AC9Bf,IAAM,mBAAmB;AAAA,EACvB;AAAA,EACA;AAAA,EACA,6BAA6B;AAAA,EAC7B,OAAO,UAAmC;AACxC,QAAI;AACF,YAAM,SAASC,yBAAwB,UAAU;AACjD,UAAI,WAAW,MAAM,OAAO,kBAAkB,KAAK;AAEnD,aAAO;AAAA,QACL,SAAS;AAAA,UACP;AAAA,YACE,MAAM;AAAA,YACN,MAAM,KAAK,UAAU,QAAQ;AAAA,UAC/B;AAAA,QACF;AAAA,MACF;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,MAAM,6BAA6B,KAAK;AAChD,aAAO;AAAA,QACL,SAAS;AAAA,UACP;AAAA,YACE,MAAM;AAAA,YACN,MAAM,UAAU,KAAK;AAAA,UACvB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAEA,IAAO,yBAAQ;;;AChCf,IAAM,kBAAkB;AAAA,EACtB;AAAA,EACA;AAAA,EACA,sBAAsB;AAAA,EACtB,OAAO,EAAE,GAAG,MAAM;AAChB,QAAI;AACF,YAAM,SAASC,yBAAwB,UAAU;AACjD,YAAM,WAAW,MAAM,OAAO,gBAAgB,EAAE;AAEhD,aAAO;AAAA,QACL,SAAS;AAAA,UACP;AAAA,YACE,MAAM;AAAA,YACN,MAAM,KAAK,UAAU,QAAQ;AAAA,UAC/B;AAAA,QACF;AAAA,QACA,UAAU;AAAA,UACR,MAAM;AAAA,UACN,GAAG;AAAA,UACH,KAAK,sDAAsD,SAAS,EAAE;AAAA,QACxE;AAAA,MACF;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,MAAM,6BAA6B,KAAK;AAChD,aAAO;AAAA,QACL,SAAS;AAAA,UACP;AAAA,YACE,MAAM;AAAA,YACN,MAAM,UAAU,KAAK;AAAA,UACvB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAEA,IAAO,wBAAQ;;;AChCf,SAAS,SAAS;AAElB,IAAM,qBAAqB;AAAA,EACzB;AAAA,EACA;AAAA,EACA;AAAA,IACE,IAAI,sBAAsB,MAAM;AAAA,IAChC,MAAM,EAAE,OAAO,oBAAoB,KAAK;AAAA,EAC1C;AAAA,EACA,OAAO,UAA4D;AACjE,QAAI;AACF,YAAM,SAASC,yBAAwB,UAAU;AACjD,UAAI,WAAW,MAAM,OAAO,gBAAgB,MAAM,IAAI,MAAM,IAAI;AAEhE,aAAO;AAAA,QACL,SAAS;AAAA,UACP;AAAA,YACE,MAAM;AAAA,YACN,MAAM,KAAK,UAAU,QAAQ;AAAA,UAC/B;AAAA,QACF;AAAA,MACF;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,MAAM,6BAA6B,KAAK;AAChD,aAAO;AAAA,QACL,SAAS;AAAA,UACP;AAAA,YACE,MAAM;AAAA,YACN,MAAM,UAAU,KAAK;AAAA,UACvB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAEA,IAAO,2BAAQ;;;ACrCf,SAAS,KAAAC,UAAS;AAElB,IAAM,mBAAmB;AAAA,EACvB;AAAA,EACA;AAAA,EACA;AAAA,IACE,IAAI,2BAA2B,MAAM;AAAA,IACrC,MAAMA,GAAE,OAAO,yBAAyB,KAAK;AAAA,EAC/C;AAAA,EACA,OAAO,EAAE,IAAI,KAAK,MAAsD;AACtE,QAAI;AACF,YAAM,SAASC,yBAAwB,UAAU;AACjD,UAAI,WAAW,MAAM,OAAO,qBAAqB,IAAI,IAAI;AAEzD,aAAO;AAAA,QACL,SAAS;AAAA,UACP;AAAA,YACE,MAAM;AAAA,YACN,MAAM,KAAK,UAAU,QAAQ;AAAA,UAC/B;AAAA,QACF;AAAA,MACF;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,MAAM,4BAA4B,KAAK;AAC/C,aAAO;AAAA,QACL,SAAS;AAAA,UACP;AAAA,YACE,MAAM;AAAA,YACN,MAAM,UAAU,KAAK;AAAA,UACvB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAEA,IAAO,yBAAQ;;;ACvCf,IAAM,qBAAqB;AAAA,EACzB;AAAA,EACA;AAAA,EACA,4BAA4B;AAAA,EAC5B,OAAO,EAAE,GAAG,MAAM;AAChB,QAAI;AACF,YAAM,SAASC,yBAAwB,UAAU;AACjD,UAAI,WAAW,MAAM,OAAO,sBAAsB,EAAE;AAEpD,aAAO;AAAA,QACL,SAAS;AAAA,UACP;AAAA,YACE,MAAM;AAAA,YACN,MAAM,KAAK,UAAU,QAAQ;AAAA,UAC/B;AAAA,QACF;AAAA,MACF;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,MAAM,6BAA6B,KAAK;AAChD,aAAO;AAAA,QACL,SAAS;AAAA,UACP;AAAA,YACE,MAAM;AAAA,YACN,MAAM,UAAU,KAAK;AAAA,UACvB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAEA,IAAO,4BAAQ;;;AC3Bf,SAAS,KAAAC,UAAS;AAElB,IAAM,mBAAmB;AAAA,EACvB;AAAA,EACA;AAAA,EACA;AAAA,IACE,IAAI,0BAA0B,MAAM;AAAA,IACpC,MAAMA,GAAE,OAAO,wBAAwB,KAAK;AAAA,EAC9C;AAAA,EACA,OAAO,UAA0D;AAC/D,QAAI;AACF,YAAM,SAASC,yBAAwB,UAAU;AACjD,UAAI,WAAW,MAAM,OAAO,oBAAoB,MAAM,IAAI,MAAM,IAAI;AAEpE,aAAO;AAAA,QACL,SAAS;AAAA,UACP;AAAA,YACE,MAAM;AAAA,YACN,MAAM,KAAK,UAAU,QAAQ;AAAA,UAC/B;AAAA,QACF;AAAA,MACF;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,MAAM,6BAA6B,KAAK;AAChD,aAAO;AAAA,QACL,SAAS;AAAA,UACP;AAAA,YACE,MAAM;AAAA,YACN,MAAM,UAAU,KAAK;AAAA,UACvB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAEA,IAAO,yBAAQ;;;ACxCf,IAAM,4BAA4B;AAAA,EAChC;AAAA,EACA;AAAA,EACA,gCAAgC;AAAA,EAChC,OAAO,EAAE,GAAG,MAAM;AAChB,QAAI;AACF,YAAM,SAASC,yBAAwB,UAAU;AACjD,UAAI,WAAW,MAAM,OAAO,0BAA0B,EAAE;AAExD,aAAO;AAAA,QACL,SAAS;AAAA,UACP;AAAA,YACE,MAAM;AAAA,YACN,MAAM,KAAK,UAAU,QAAQ;AAAA,UAC/B;AAAA,QACF;AAAA,MACF;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,MAAM,6BAA6B,KAAK;AAChD,aAAO;AAAA,QACL,SAAS;AAAA,UACP;AAAA,YACE,MAAM;AAAA,YACN,MAAM,UAAU,KAAK;AAAA,UACvB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAEA,IAAO,mCAAQ;;;AC9Bf,IAAM,2BAA2B;AAAA,EAC/B;AAAA,EACA;AAAA,EACA,uBAAuB;AAAA,EACvB,OAAO,UAAoC;AACzC,QAAI;AACF,YAAM,SAASC,yBAAwB,UAAU;AACjD,UAAI,WAAW,MAAM,OAAO,mBAAmB,KAAK;AAEpD,aAAO;AAAA,QACL,SAAS;AAAA,UACP;AAAA,YACE,MAAM;AAAA,YACN,MAAM,KAAK,UAAU,QAAQ;AAAA,UAC/B;AAAA,QACF;AAAA,MACF;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,MAAM,6BAA6B,KAAK;AAChD,aAAO;AAAA,QACL,SAAS;AAAA,UACP;AAAA,YACE,MAAM;AAAA,YACN,MAAM,UAAU,KAAK;AAAA,UACvB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAEA,IAAO,wBAAQ;;;AChCf,IAAM,2BAA2B;AAAA,EAC/B;AAAA,EACA;AAAA,EACA,+BAA+B;AAAA,EAC/B,OAAO,EAAE,GAAG,MAAM;AAChB,QAAI;AACF,YAAM,SAASC,yBAAwB,UAAU;AACjD,UAAI,WAAW,MAAM,OAAO,yBAAyB,EAAE;AAEvD,aAAO;AAAA,QACL,SAAS;AAAA,UACP;AAAA,YACE,MAAM;AAAA,YACN,MAAM,KAAK,UAAU,QAAQ;AAAA,UAC/B;AAAA,QACF;AAAA,MACF;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,MAAM,6BAA6B,KAAK;AAChD,aAAO;AAAA,QACL,SAAS;AAAA,UACP;AAAA,YACE,MAAM;AAAA,YACN,MAAM,UAAU,KAAK;AAAA,UACvB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAEA,IAAO,wBAAQ;;;AC/Bf,IAAM,wBAAwB;AAAA,EAC5B;AAAA,EACA;AAAA,EACA,4BAA4B;AAAA,EAC5B,OAAO,EAAE,GAAG,MAAM;AAChB,QAAI;AACF,YAAM,SAASC,yBAAwB,UAAU;AACjD,UAAI,WAAW,MAAM,OAAO,sBAAsB,EAAE;AAEpD,aAAO;AAAA,QACL,SAAS;AAAA,UACP;AAAA,YACE,MAAM;AAAA,YACN,MAAM,KAAK,UAAU,QAAQ;AAAA,UAC/B;AAAA,QACF;AAAA,MACF;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,MAAM,6BAA6B,KAAK;AAChD,aAAO;AAAA,QACL,SAAS;AAAA,UACP;AAAA,YACE,MAAM;AAAA,YACN,MAAM,UAAU,KAAK;AAAA,UACvB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAEA,IAAO,qBAAQ;;;ACrBR,IAAM,gBAAgB;AAAA,EAC3B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;;;ACvBO,SAAS,YAAY,QAAmB;AAC7C,eAAa,IAAI,CAAC,SAAS,KAAK,CAAC,EAAE;AAAA,IAAQ,CAAC,SAC1C,OAAO,KAAK,KAAK,MAAM,KAAK,aAAa,KAAK,QAAQ,KAAK,OAAO;AAAA,EACpE;AACA,gBAAc,IAAI,CAAC,SAAS,KAAK,CAAC,EAAE;AAAA,IAAQ,CAAC,SAC3C,OAAO,KAAK,KAAK,MAAM,KAAK,aAAa,KAAK,QAAQ,KAAK,OAAO;AAAA,EACpE;AACF;;;AvBNA,IAAM,OAAO,YAAY;AAEvB,QAAM,SAAS,iBAAiB,UAAU;AAE1C,cAAY,MAAM;AAGlB,QAAM,YAAY,IAAI,qBAAqB;AAC3C,QAAM,OAAO,QAAQ,SAAS;AAChC;AAEA,KAAK,EAAE,MAAM,CAAC,UAAU;AACtB,UAAQ,MAAM,UAAU,KAAK;AAC7B,UAAQ,KAAK,CAAC;AAChB,CAAC;","names":["postTemporaryFileBody","UmbracoManagementClient","UmbracoManagementClient","UmbracoManagementClient","UmbracoManagementClient","UmbracoManagementClient","UmbracoManagementClient","UmbracoManagementClient","UmbracoManagementClient","z","UmbracoManagementClient","UmbracoManagementClient","z","UmbracoManagementClient","UmbracoManagementClient","UmbracoManagementClient","UmbracoManagementClient","UmbracoManagementClient"]}